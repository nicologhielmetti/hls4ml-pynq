// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject_axi,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.982000,HLS_SYN_LAT=300,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=21,HLS_SYN_FF=14086,HLS_SYN_LUT=39835,HLS_VERSION=2019_2}" *)

module myproject_axi (
        ap_clk,
        ap_rst_n,
        in_r_TDATA,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TLAST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        out_r_TLAST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_pp0_stage0 = 7'd4;
parameter    ap_ST_fsm_state12 = 7'd8;
parameter    ap_ST_fsm_state13 = 7'd16;
parameter    ap_ST_fsm_pp1_stage0 = 7'd32;
parameter    ap_ST_fsm_state24 = 7'd64;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_r_TDATA;
input   in_r_TVALID;
output   in_r_TREADY;
input  [0:0] in_r_TLAST;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [0:0] out_r_TLAST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg in_r_TREADY;

 reg    ap_rst_n_inv;
wire   [31:0] vector_rows;
reg   [31:0] vector_rows_0_data_reg;
reg    vector_rows_0_vld_reg;
reg    vector_rows_0_ack_out;
reg   [31:0] row_count;
reg    in_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
wire   [0:0] icmp_ln24_fu_325_p2;
reg    out_r_TDATA_blk_n;
reg    ap_enable_reg_pp1_iter8;
wire    ap_block_pp1_stage0;
reg   [0:0] icmp_ln33_reg_1308;
reg   [0:0] icmp_ln33_reg_1308_pp1_iter7_reg;
reg    ap_enable_reg_pp1_iter9;
reg   [0:0] icmp_ln33_reg_1308_pp1_iter8_reg;
reg   [4:0] i_0_reg_244;
reg   [2:0] i2_0_reg_255;
reg   [31:0] vector_rows_read_reg_1141;
wire    ap_CS_fsm_state2;
wire   [31:0] select_ln22_fu_311_p3;
reg   [31:0] select_ln22_reg_1146;
reg   [0:0] icmp_ln24_reg_1151;
reg    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state5_pp0_stage0_iter2;
wire    ap_block_state6_pp0_stage0_iter3;
wire    ap_block_state7_pp0_stage0_iter4;
wire    ap_block_state8_pp0_stage0_iter5;
wire    ap_block_state9_pp0_stage0_iter6;
wire    ap_block_state10_pp0_stage0_iter7;
wire    ap_block_state11_pp0_stage0_iter8;
reg    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln24_reg_1151_pp0_iter1_reg;
reg   [0:0] icmp_ln24_reg_1151_pp0_iter2_reg;
reg   [0:0] icmp_ln24_reg_1151_pp0_iter3_reg;
reg   [0:0] icmp_ln24_reg_1151_pp0_iter4_reg;
reg   [0:0] icmp_ln24_reg_1151_pp0_iter5_reg;
reg   [0:0] icmp_ln24_reg_1151_pp0_iter6_reg;
reg   [0:0] icmp_ln24_reg_1151_pp0_iter7_reg;
wire   [4:0] i_fu_331_p2;
reg   [31:0] in_data_tmp_reg_1160;
reg   [31:0] in_data_tmp_reg_1160_pp0_iter1_reg;
reg   [31:0] in_data_tmp_reg_1160_pp0_iter2_reg;
reg   [31:0] in_data_tmp_reg_1160_pp0_iter3_reg;
wire   [3:0] trunc_ln203_fu_342_p1;
reg   [3:0] trunc_ln203_reg_1166;
reg   [3:0] trunc_ln203_reg_1166_pp0_iter1_reg;
reg   [3:0] trunc_ln203_reg_1166_pp0_iter2_reg;
reg   [3:0] trunc_ln203_reg_1166_pp0_iter3_reg;
reg   [3:0] trunc_ln203_reg_1166_pp0_iter4_reg;
reg   [3:0] trunc_ln203_reg_1166_pp0_iter5_reg;
wire   [62:0] trunc_ln556_fu_350_p1;
reg   [62:0] trunc_ln556_reg_1171;
reg   [0:0] p_Result_7_reg_1176;
reg   [10:0] exp_tmp_V_reg_1181;
wire   [51:0] trunc_ln565_fu_372_p1;
reg   [51:0] trunc_ln565_reg_1186;
wire   [53:0] man_V_2_fu_396_p3;
reg   [53:0] man_V_2_reg_1191;
wire   [0:0] icmp_ln571_fu_403_p2;
reg   [0:0] icmp_ln571_reg_1196;
reg   [0:0] icmp_ln571_reg_1196_pp0_iter4_reg;
wire   [0:0] icmp_ln581_fu_414_p2;
reg   [0:0] icmp_ln581_reg_1202;
wire  signed [11:0] sh_amt_fu_432_p3;
reg  signed [11:0] sh_amt_reg_1208;
reg  signed [11:0] sh_amt_reg_1208_pp0_iter4_reg;
reg  signed [11:0] sh_amt_reg_1208_pp0_iter5_reg;
wire   [0:0] icmp_ln582_fu_440_p2;
reg   [0:0] icmp_ln582_reg_1215;
reg   [0:0] icmp_ln582_reg_1215_pp0_iter4_reg;
wire   [15:0] trunc_ln583_fu_446_p1;
reg   [15:0] trunc_ln583_reg_1221;
reg   [15:0] trunc_ln583_reg_1221_pp0_iter4_reg;
reg   [15:0] trunc_ln583_reg_1221_pp0_iter5_reg;
reg   [7:0] tmp_514_reg_1227;
wire   [0:0] and_ln585_fu_522_p2;
reg   [0:0] and_ln585_reg_1237;
wire   [0:0] and_ln603_fu_545_p2;
reg   [0:0] and_ln603_reg_1242;
reg   [0:0] and_ln603_reg_1242_pp0_iter5_reg;
wire   [0:0] or_ln603_fu_551_p2;
reg   [0:0] or_ln603_reg_1247;
reg   [0:0] or_ln603_reg_1247_pp0_iter5_reg;
wire   [15:0] select_ln603_1_fu_557_p3;
reg   [15:0] select_ln603_1_reg_1253;
reg   [15:0] select_ln603_1_reg_1253_pp0_iter5_reg;
wire   [53:0] grp_fu_477_p2;
reg   [53:0] ashr_ln586_reg_1258;
wire   [0:0] or_ln603_2_fu_579_p2;
reg   [0:0] or_ln603_2_reg_1263;
reg   [0:0] or_ln603_2_reg_1263_pp0_iter6_reg;
wire   [15:0] select_ln603_2_fu_602_p3;
reg   [15:0] select_ln603_2_reg_1268;
wire   [7:0] shl_ln_fu_608_p3;
reg   [7:0] shl_ln_reg_1273;
wire   [7:0] empty_37_fu_615_p2;
reg   [7:0] empty_37_reg_1278;
wire   [0:0] icmp_ln203_fu_621_p2;
reg   [0:0] icmp_ln203_reg_1283;
reg   [0:0] icmp_ln203_reg_1283_pp0_iter7_reg;
wire   [255:0] shl_ln203_fu_688_p2;
reg   [255:0] shl_ln203_reg_1291;
wire   [255:0] and_ln203_fu_706_p2;
reg   [255:0] and_ln203_reg_1297;
wire   [0:0] icmp_ln37_1_fu_757_p2;
reg   [0:0] icmp_ln37_1_reg_1303;
wire    ap_CS_fsm_state12;
wire   [0:0] icmp_ln33_fu_761_p2;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state14_pp1_stage0_iter0;
wire    ap_block_state15_pp1_stage0_iter1;
wire    ap_block_state16_pp1_stage0_iter2;
wire    ap_block_state17_pp1_stage0_iter3;
wire    ap_block_state18_pp1_stage0_iter4;
wire    ap_block_state19_pp1_stage0_iter5;
wire    ap_block_state20_pp1_stage0_iter6;
wire    ap_block_state21_pp1_stage0_iter7;
wire    ap_block_state22_pp1_stage0_iter8;
reg    ap_block_state22_io;
wire    ap_block_state23_pp1_stage0_iter9;
reg    ap_block_state23_io;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln33_reg_1308_pp1_iter1_reg;
reg   [0:0] icmp_ln33_reg_1308_pp1_iter2_reg;
reg   [0:0] icmp_ln33_reg_1308_pp1_iter3_reg;
reg   [0:0] icmp_ln33_reg_1308_pp1_iter4_reg;
reg   [0:0] icmp_ln33_reg_1308_pp1_iter5_reg;
reg   [0:0] icmp_ln33_reg_1308_pp1_iter6_reg;
wire   [2:0] i_1_fu_767_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [15:0] tmp_V_3_fu_788_p7;
reg   [15:0] tmp_V_3_reg_1317;
reg   [0:0] p_Result_9_reg_1323;
reg   [0:0] p_Result_9_reg_1323_pp1_iter1_reg;
reg   [0:0] p_Result_9_reg_1323_pp1_iter2_reg;
reg   [0:0] p_Result_9_reg_1323_pp1_iter3_reg;
reg   [0:0] p_Result_9_reg_1323_pp1_iter4_reg;
reg   [0:0] p_Result_9_reg_1323_pp1_iter5_reg;
reg   [0:0] p_Result_9_reg_1323_pp1_iter6_reg;
reg   [0:0] p_Result_9_reg_1323_pp1_iter7_reg;
wire   [15:0] tmp_V_fu_812_p2;
reg   [15:0] tmp_V_reg_1329;
wire   [0:0] and_ln37_fu_824_p2;
reg   [0:0] and_ln37_reg_1334;
reg   [0:0] and_ln37_reg_1334_pp1_iter1_reg;
reg   [0:0] and_ln37_reg_1334_pp1_iter2_reg;
reg   [0:0] and_ln37_reg_1334_pp1_iter3_reg;
reg   [0:0] and_ln37_reg_1334_pp1_iter4_reg;
reg   [0:0] and_ln37_reg_1334_pp1_iter5_reg;
reg   [0:0] and_ln37_reg_1334_pp1_iter6_reg;
reg   [0:0] and_ln37_reg_1334_pp1_iter7_reg;
wire   [0:0] icmp_ln935_fu_829_p2;
reg   [0:0] icmp_ln935_reg_1339;
reg   [0:0] icmp_ln935_reg_1339_pp1_iter2_reg;
reg   [0:0] icmp_ln935_reg_1339_pp1_iter3_reg;
reg   [0:0] icmp_ln935_reg_1339_pp1_iter4_reg;
reg   [0:0] icmp_ln935_reg_1339_pp1_iter5_reg;
reg   [0:0] icmp_ln935_reg_1339_pp1_iter6_reg;
reg   [0:0] icmp_ln935_reg_1339_pp1_iter7_reg;
wire   [15:0] tmp_V_4_fu_834_p3;
reg   [15:0] tmp_V_4_reg_1344;
reg   [15:0] tmp_V_4_reg_1344_pp1_iter2_reg;
reg   [15:0] tmp_V_4_reg_1344_pp1_iter3_reg;
reg   [31:0] l_fu_857_p3;
reg   [31:0] l_reg_1352;
wire   [7:0] trunc_ln943_fu_865_p1;
reg   [7:0] trunc_ln943_reg_1357;
reg   [7:0] trunc_ln943_reg_1357_pp1_iter2_reg;
reg   [7:0] trunc_ln943_reg_1357_pp1_iter3_reg;
reg   [7:0] trunc_ln943_reg_1357_pp1_iter4_reg;
reg   [7:0] trunc_ln943_reg_1357_pp1_iter5_reg;
reg   [7:0] trunc_ln943_reg_1357_pp1_iter6_reg;
reg   [7:0] trunc_ln943_reg_1357_pp1_iter7_reg;
wire   [31:0] sub_ln944_fu_869_p2;
reg   [31:0] sub_ln944_reg_1362;
wire   [15:0] trunc_ln944_fu_874_p1;
reg   [15:0] trunc_ln944_reg_1369;
reg   [15:0] trunc_ln944_reg_1369_pp1_iter3_reg;
wire   [4:0] sub_ln947_fu_882_p2;
reg   [4:0] sub_ln947_reg_1374;
wire   [31:0] lsb_index_fu_888_p2;
reg   [31:0] lsb_index_reg_1379;
reg   [30:0] tmp_518_reg_1385;
wire   [0:0] icmp_ln947_1_fu_917_p2;
reg   [0:0] icmp_ln947_1_reg_1390;
wire   [31:0] add_ln958_fu_923_p2;
reg   [31:0] add_ln958_reg_1395;
wire   [31:0] sub_ln958_fu_928_p2;
reg   [31:0] sub_ln958_reg_1400;
wire   [31:0] or_ln_fu_980_p3;
reg   [31:0] or_ln_reg_1405;
reg   [31:0] or_ln_reg_1405_pp1_iter5_reg;
wire   [0:0] icmp_ln958_fu_994_p2;
reg   [0:0] icmp_ln958_reg_1420;
reg   [0:0] icmp_ln958_reg_1420_pp1_iter5_reg;
wire   [31:0] grp_fu_999_p2;
reg   [31:0] lshr_ln958_reg_1430;
wire   [63:0] grp_fu_1007_p2;
reg   [63:0] shl_ln958_reg_1435;
reg   [62:0] m_5_reg_1440;
reg   [62:0] m_5_reg_1440_pp1_iter7_reg;
reg   [0:0] tmp_520_reg_1445;
wire   [7:0] select_ln964_fu_1049_p3;
reg   [7:0] select_ln964_reg_1450;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
wire    ap_CS_fsm_state13;
wire    grp_myproject_fu_266_ap_ready;
wire    grp_myproject_fu_266_ap_done;
wire    ap_sync_grp_myproject_fu_266_ap_ready;
wire    ap_sync_grp_myproject_fu_266_ap_done;
reg    ap_block_state13_on_subcall_done;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state14;
reg    ap_enable_reg_pp1_iter1;
reg    ap_enable_reg_pp1_iter2;
reg    ap_enable_reg_pp1_iter3;
reg    ap_enable_reg_pp1_iter4;
reg    ap_enable_reg_pp1_iter5;
reg    ap_enable_reg_pp1_iter6;
reg    ap_enable_reg_pp1_iter7;
wire   [15:0] grp_myproject_fu_266_layer13_out_0_V;
wire   [15:0] grp_myproject_fu_266_layer13_out_1_V;
wire   [15:0] grp_myproject_fu_266_layer13_out_2_V;
wire   [15:0] grp_myproject_fu_266_layer13_out_3_V;
wire   [15:0] grp_myproject_fu_266_layer13_out_4_V;
wire    grp_myproject_fu_266_ap_start;
wire    grp_myproject_fu_266_layer13_out_0_V_ap_vld;
wire    grp_myproject_fu_266_layer13_out_1_V_ap_vld;
wire    grp_myproject_fu_266_layer13_out_2_V_ap_vld;
wire    grp_myproject_fu_266_layer13_out_3_V_ap_vld;
wire    grp_myproject_fu_266_layer13_out_4_V_ap_vld;
wire    grp_myproject_fu_266_ap_idle;
reg    grp_myproject_fu_266_ap_continue;
reg    grp_myproject_fu_266_ap_start_reg;
reg    ap_sync_reg_grp_myproject_fu_266_ap_ready;
reg    ap_sync_reg_grp_myproject_fu_266_ap_done;
reg   [255:0] in_local_V_fu_196;
reg   [15:0] out_local_0_fu_200;
reg   [15:0] out_local_1_fu_204;
reg   [15:0] out_local_2_fu_208;
reg   [15:0] out_local_3_fu_212;
reg   [15:0] out_local_4_fu_216;
wire   [255:0] in_local_V_1_fu_746_p2;
wire    ap_block_pp1_stage0_01001;
wire   [0:0] icmp_ln20_fu_299_p2;
wire   [31:0] add_ln22_fu_305_p2;
wire   [63:0] grp_fu_292_p1;
wire   [63:0] ireg_V_fu_346_p1;
wire   [52:0] tmp_s_fu_379_p3;
wire   [53:0] p_Result_8_fu_386_p1;
wire   [53:0] man_V_1_fu_390_p2;
wire   [11:0] zext_ln461_fu_376_p1;
wire   [11:0] F2_fu_408_p2;
wire   [11:0] add_ln581_fu_420_p2;
wire   [11:0] sub_ln581_fu_426_p2;
wire  signed [31:0] sext_ln581_1_fu_460_p1;
wire   [53:0] grp_fu_477_p1;
wire   [31:0] bitcast_ln696_fu_482_p1;
wire   [0:0] tmp_515_fu_485_p3;
wire   [0:0] or_ln582_fu_501_p2;
wire   [0:0] xor_ln582_fu_505_p2;
wire   [0:0] icmp_ln585_fu_463_p2;
wire   [0:0] and_ln581_fu_511_p2;
wire   [0:0] xor_ln585_fu_516_p2;
wire   [0:0] or_ln581_fu_534_p2;
wire   [0:0] icmp_ln603_fu_468_p2;
wire   [0:0] xor_ln581_fu_539_p2;
wire   [0:0] and_ln585_1_fu_528_p2;
wire   [15:0] select_ln588_fu_493_p3;
wire   [0:0] xor_ln571_fu_564_p2;
wire   [0:0] and_ln582_fu_569_p2;
wire   [0:0] or_ln603_1_fu_574_p2;
wire  signed [15:0] sext_ln581_fu_584_p1;
wire   [15:0] shl_ln604_fu_590_p2;
wire   [15:0] trunc_ln586_fu_587_p1;
wire   [15:0] select_ln603_fu_595_p3;
wire   [15:0] select_ln603_3_fu_627_p3;
wire   [8:0] zext_ln203_fu_633_p1;
wire   [8:0] zext_ln203_1_fu_636_p1;
wire   [8:0] xor_ln203_fu_643_p2;
wire   [8:0] select_ln203_fu_649_p3;
wire   [8:0] select_ln203_2_fu_663_p3;
wire   [8:0] select_ln203_1_fu_656_p3;
wire   [8:0] xor_ln203_1_fu_670_p2;
wire   [255:0] zext_ln203_2_fu_639_p1;
wire   [255:0] zext_ln203_3_fu_676_p1;
wire   [255:0] zext_ln203_4_fu_680_p1;
wire   [255:0] zext_ln203_5_fu_684_p1;
wire   [255:0] shl_ln203_1_fu_694_p2;
wire   [255:0] lshr_ln203_fu_700_p2;
reg   [255:0] tmp_516_fu_715_p4;
wire   [255:0] xor_ln203_2_fu_730_p2;
wire   [255:0] select_ln203_3_fu_724_p3;
wire   [255:0] and_ln203_1_fu_735_p2;
wire   [255:0] and_ln203_2_fu_741_p2;
wire   [0:0] icmp_ln37_fu_818_p2;
reg   [15:0] p_Result_1_fu_839_p4;
wire   [31:0] p_Result_10_fu_849_p3;
wire   [4:0] trunc_ln947_fu_878_p1;
wire   [15:0] zext_ln947_fu_903_p1;
wire   [15:0] lshr_ln947_fu_906_p2;
wire   [15:0] p_Result_s_fu_912_p2;
wire   [0:0] icmp_ln947_fu_933_p2;
wire   [0:0] tmp_519_fu_943_p3;
wire   [15:0] add_ln949_fu_956_p2;
wire   [0:0] p_Result_2_fu_961_p3;
wire   [0:0] xor_ln949_fu_950_p2;
wire   [0:0] and_ln949_fu_968_p2;
wire   [0:0] a_fu_938_p2;
wire   [0:0] or_ln949_fu_974_p2;
wire   [31:0] grp_fu_999_p0;
wire   [63:0] grp_fu_1007_p0;
wire   [63:0] grp_fu_1007_p1;
wire   [63:0] zext_ln958_fu_1013_p1;
wire   [63:0] zext_ln961_fu_1022_p1;
wire   [63:0] m_1_fu_1016_p3;
wire   [63:0] m_2_fu_1025_p2;
wire   [7:0] sub_ln964_fu_1059_p2;
wire   [7:0] add_ln964_fu_1064_p2;
wire   [63:0] m_6_fu_1056_p1;
wire   [8:0] tmp_3_fu_1069_p3;
wire   [63:0] p_Result_11_fu_1076_p5;
wire   [31:0] trunc_ln738_fu_1088_p1;
wire   [31:0] bitcast_ln739_fu_1092_p1;
reg    grp_fu_292_ce;
reg    grp_fu_477_ce;
reg    grp_fu_999_ce;
reg    grp_fu_1007_ce;
wire    ap_CS_fsm_state24;
wire    regslice_both_out_data_U_apdone_blk;
reg   [6:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    regslice_both_in_data_U_apdone_blk;
wire   [31:0] in_r_TDATA_int;
wire    in_r_TVALID_int;
reg    in_r_TREADY_int;
wire    regslice_both_in_data_U_ack_in;
wire    regslice_both_in_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int;
wire    regslice_both_in_last_V_U_vld_out;
wire    regslice_both_in_last_V_U_ack_in;
wire   [31:0] out_r_TDATA_int;
reg    out_r_TVALID_int;
wire    out_r_TREADY_int;
wire    regslice_both_out_data_U_vld_out;
wire    regslice_both_out_last_V_U_apdone_blk;
wire    regslice_both_out_last_V_U_ack_in_dummy;
wire    regslice_both_out_last_V_U_vld_out;

// power-on initialization
initial begin
#0 vector_rows_0_data_reg = 32'd0;
#0 vector_rows_0_vld_reg = 1'b0;
#0 row_count = 32'd0;
#0 ap_CS_fsm = 7'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter9 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter3 = 1'b0;
#0 ap_enable_reg_pp1_iter4 = 1'b0;
#0 ap_enable_reg_pp1_iter5 = 1'b0;
#0 ap_enable_reg_pp1_iter6 = 1'b0;
#0 ap_enable_reg_pp1_iter7 = 1'b0;
#0 grp_myproject_fu_266_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_myproject_fu_266_ap_ready = 1'b0;
#0 ap_sync_reg_grp_myproject_fu_266_ap_done = 1'b0;
end

myproject_axi_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
myproject_axi_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .vector_rows(vector_rows)
);

myproject grp_myproject_fu_266(
    .fc1_input_V(in_local_V_fu_196),
    .layer13_out_0_V(grp_myproject_fu_266_layer13_out_0_V),
    .layer13_out_1_V(grp_myproject_fu_266_layer13_out_1_V),
    .layer13_out_2_V(grp_myproject_fu_266_layer13_out_2_V),
    .layer13_out_3_V(grp_myproject_fu_266_layer13_out_3_V),
    .layer13_out_4_V(grp_myproject_fu_266_layer13_out_4_V),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .fc1_input_V_ap_vld(1'b1),
    .ap_start(grp_myproject_fu_266_ap_start),
    .layer13_out_0_V_ap_vld(grp_myproject_fu_266_layer13_out_0_V_ap_vld),
    .layer13_out_1_V_ap_vld(grp_myproject_fu_266_layer13_out_1_V_ap_vld),
    .layer13_out_2_V_ap_vld(grp_myproject_fu_266_layer13_out_2_V_ap_vld),
    .layer13_out_3_V_ap_vld(grp_myproject_fu_266_layer13_out_3_V_ap_vld),
    .layer13_out_4_V_ap_vld(grp_myproject_fu_266_layer13_out_4_V_ap_vld),
    .ap_done(grp_myproject_fu_266_ap_done),
    .ap_ready(grp_myproject_fu_266_ap_ready),
    .ap_idle(grp_myproject_fu_266_ap_idle),
    .ap_continue(grp_myproject_fu_266_ap_continue)
);

myproject_axi_fpeqcK #(
    .ID( 1 ),
    .NUM_STAGE( 3 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
myproject_axi_fpeqcK_U856(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(in_r_TDATA_int),
    .ce(grp_fu_292_ce),
    .dout(grp_fu_292_p1)
);

myproject_axi_ashrcU #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 2 ),
    .din0_WIDTH( 54 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 54 ))
myproject_axi_ashrcU_U857(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(man_V_2_reg_1191),
    .din1(grp_fu_477_p1),
    .ce(grp_fu_477_ce),
    .dout(grp_fu_477_p2)
);

myproject_axi_muxsc4 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
myproject_axi_muxsc4_U858(
    .din0(out_local_0_fu_200),
    .din1(out_local_1_fu_204),
    .din2(out_local_2_fu_208),
    .din3(out_local_3_fu_212),
    .din4(out_local_4_fu_216),
    .din5(i2_0_reg_255),
    .dout(tmp_V_3_fu_788_p7)
);

myproject_axi_lshtde #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
myproject_axi_lshtde_U859(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_999_p0),
    .din1(add_ln958_reg_1395),
    .ce(grp_fu_999_ce),
    .dout(grp_fu_999_p2)
);

myproject_axi_shludo #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .OP( 0 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
myproject_axi_shludo_U860(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_1007_p0),
    .din1(grp_fu_1007_p1),
    .ce(grp_fu_1007_ce),
    .dout(grp_fu_1007_p2)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_data_U_ack_in),
    .data_out(in_r_TDATA_int),
    .vld_out(in_r_TVALID_int),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_data_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_last_V_U_ack_in),
    .data_out(in_r_TLAST_int),
    .vld_out(regslice_both_in_last_V_U_vld_out),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int),
    .vld_in(out_r_TVALID_int),
    .ack_in(out_r_TREADY_int),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_data_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_data_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(and_ln37_reg_1334_pp1_iter7_reg),
    .vld_in(out_r_TVALID_int),
    .ack_in(regslice_both_out_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state3)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state14) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b0 == ap_block_state13_on_subcall_done) & (1'b1 == ap_CS_fsm_state13))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state14)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state14);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter9 <= ap_enable_reg_pp1_iter8;
        end else if (((1'b0 == ap_block_state13_on_subcall_done) & (1'b1 == ap_CS_fsm_state13))) begin
            ap_enable_reg_pp1_iter9 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_myproject_fu_266_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state13_on_subcall_done) & (1'b1 == ap_CS_fsm_state13))) begin
            ap_sync_reg_grp_myproject_fu_266_ap_done <= 1'b0;
        end else if ((grp_myproject_fu_266_ap_done == 1'b1)) begin
            ap_sync_reg_grp_myproject_fu_266_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_myproject_fu_266_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state13_on_subcall_done) & (1'b1 == ap_CS_fsm_state13))) begin
            ap_sync_reg_grp_myproject_fu_266_ap_ready <= 1'b0;
        end else if ((grp_myproject_fu_266_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_myproject_fu_266_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_myproject_fu_266_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) | ((ap_sync_grp_myproject_fu_266_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state13)))) begin
            grp_myproject_fu_266_ap_start_reg <= 1'b1;
        end else if ((grp_myproject_fu_266_ap_ready == 1'b1)) begin
            grp_myproject_fu_266_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_fu_761_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        i2_0_reg_255 <= i_1_fu_767_p2;
    end else if (((1'b0 == ap_block_state13_on_subcall_done) & (1'b1 == ap_CS_fsm_state13))) begin
        i2_0_reg_255 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_325_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_0_reg_244 <= i_fu_331_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_0_reg_244 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1339_pp1_iter2_reg == 1'd0) & (icmp_ln33_reg_1308_pp1_iter2_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        add_ln958_reg_1395 <= add_ln958_fu_923_p2;
        icmp_ln947_1_reg_1390 <= icmp_ln947_1_fu_917_p2;
        lsb_index_reg_1379 <= lsb_index_fu_888_p2;
        sub_ln958_reg_1400 <= sub_ln958_fu_928_p2;
        tmp_518_reg_1385 <= {{lsb_index_fu_888_p2[31:1]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_1151_pp0_iter6_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln203_reg_1297 <= and_ln203_fu_706_p2;
        shl_ln203_reg_1291 <= shl_ln203_fu_688_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_fu_761_p2 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        and_ln37_reg_1334 <= and_ln37_fu_824_p2;
        p_Result_9_reg_1323 <= tmp_V_3_fu_788_p7[32'd15];
        tmp_V_3_reg_1317 <= tmp_V_3_fu_788_p7;
        tmp_V_reg_1329 <= tmp_V_fu_812_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        and_ln37_reg_1334_pp1_iter1_reg <= and_ln37_reg_1334;
        icmp_ln33_reg_1308 <= icmp_ln33_fu_761_p2;
        icmp_ln33_reg_1308_pp1_iter1_reg <= icmp_ln33_reg_1308;
        p_Result_9_reg_1323_pp1_iter1_reg <= p_Result_9_reg_1323;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp1_stage0_11001)) begin
        and_ln37_reg_1334_pp1_iter2_reg <= and_ln37_reg_1334_pp1_iter1_reg;
        and_ln37_reg_1334_pp1_iter3_reg <= and_ln37_reg_1334_pp1_iter2_reg;
        and_ln37_reg_1334_pp1_iter4_reg <= and_ln37_reg_1334_pp1_iter3_reg;
        and_ln37_reg_1334_pp1_iter5_reg <= and_ln37_reg_1334_pp1_iter4_reg;
        and_ln37_reg_1334_pp1_iter6_reg <= and_ln37_reg_1334_pp1_iter5_reg;
        and_ln37_reg_1334_pp1_iter7_reg <= and_ln37_reg_1334_pp1_iter6_reg;
        icmp_ln33_reg_1308_pp1_iter2_reg <= icmp_ln33_reg_1308_pp1_iter1_reg;
        icmp_ln33_reg_1308_pp1_iter3_reg <= icmp_ln33_reg_1308_pp1_iter2_reg;
        icmp_ln33_reg_1308_pp1_iter4_reg <= icmp_ln33_reg_1308_pp1_iter3_reg;
        icmp_ln33_reg_1308_pp1_iter5_reg <= icmp_ln33_reg_1308_pp1_iter4_reg;
        icmp_ln33_reg_1308_pp1_iter6_reg <= icmp_ln33_reg_1308_pp1_iter5_reg;
        icmp_ln33_reg_1308_pp1_iter7_reg <= icmp_ln33_reg_1308_pp1_iter6_reg;
        icmp_ln33_reg_1308_pp1_iter8_reg <= icmp_ln33_reg_1308_pp1_iter7_reg;
        icmp_ln935_reg_1339_pp1_iter2_reg <= icmp_ln935_reg_1339;
        icmp_ln935_reg_1339_pp1_iter3_reg <= icmp_ln935_reg_1339_pp1_iter2_reg;
        icmp_ln935_reg_1339_pp1_iter4_reg <= icmp_ln935_reg_1339_pp1_iter3_reg;
        icmp_ln935_reg_1339_pp1_iter5_reg <= icmp_ln935_reg_1339_pp1_iter4_reg;
        icmp_ln935_reg_1339_pp1_iter6_reg <= icmp_ln935_reg_1339_pp1_iter5_reg;
        icmp_ln935_reg_1339_pp1_iter7_reg <= icmp_ln935_reg_1339_pp1_iter6_reg;
        icmp_ln958_reg_1420_pp1_iter5_reg <= icmp_ln958_reg_1420;
        m_5_reg_1440_pp1_iter7_reg <= m_5_reg_1440;
        or_ln_reg_1405_pp1_iter5_reg[0] <= or_ln_reg_1405[0];
        p_Result_9_reg_1323_pp1_iter2_reg <= p_Result_9_reg_1323_pp1_iter1_reg;
        p_Result_9_reg_1323_pp1_iter3_reg <= p_Result_9_reg_1323_pp1_iter2_reg;
        p_Result_9_reg_1323_pp1_iter4_reg <= p_Result_9_reg_1323_pp1_iter3_reg;
        p_Result_9_reg_1323_pp1_iter5_reg <= p_Result_9_reg_1323_pp1_iter4_reg;
        p_Result_9_reg_1323_pp1_iter6_reg <= p_Result_9_reg_1323_pp1_iter5_reg;
        p_Result_9_reg_1323_pp1_iter7_reg <= p_Result_9_reg_1323_pp1_iter6_reg;
        tmp_V_4_reg_1344_pp1_iter2_reg <= tmp_V_4_reg_1344;
        tmp_V_4_reg_1344_pp1_iter3_reg <= tmp_V_4_reg_1344_pp1_iter2_reg;
        trunc_ln943_reg_1357_pp1_iter2_reg <= trunc_ln943_reg_1357;
        trunc_ln943_reg_1357_pp1_iter3_reg <= trunc_ln943_reg_1357_pp1_iter2_reg;
        trunc_ln943_reg_1357_pp1_iter4_reg <= trunc_ln943_reg_1357_pp1_iter3_reg;
        trunc_ln943_reg_1357_pp1_iter5_reg <= trunc_ln943_reg_1357_pp1_iter4_reg;
        trunc_ln943_reg_1357_pp1_iter6_reg <= trunc_ln943_reg_1357_pp1_iter5_reg;
        trunc_ln943_reg_1357_pp1_iter7_reg <= trunc_ln943_reg_1357_pp1_iter6_reg;
        trunc_ln944_reg_1369_pp1_iter3_reg <= trunc_ln944_reg_1369;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_1151_pp0_iter3_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        and_ln585_reg_1237 <= and_ln585_fu_522_p2;
        and_ln603_reg_1242 <= and_ln603_fu_545_p2;
        or_ln603_reg_1247 <= or_ln603_fu_551_p2;
        select_ln603_1_reg_1253 <= select_ln603_1_fu_557_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        and_ln603_reg_1242_pp0_iter5_reg <= and_ln603_reg_1242;
        icmp_ln203_reg_1283_pp0_iter7_reg <= icmp_ln203_reg_1283;
        icmp_ln24_reg_1151_pp0_iter2_reg <= icmp_ln24_reg_1151_pp0_iter1_reg;
        icmp_ln24_reg_1151_pp0_iter3_reg <= icmp_ln24_reg_1151_pp0_iter2_reg;
        icmp_ln24_reg_1151_pp0_iter4_reg <= icmp_ln24_reg_1151_pp0_iter3_reg;
        icmp_ln24_reg_1151_pp0_iter5_reg <= icmp_ln24_reg_1151_pp0_iter4_reg;
        icmp_ln24_reg_1151_pp0_iter6_reg <= icmp_ln24_reg_1151_pp0_iter5_reg;
        icmp_ln24_reg_1151_pp0_iter7_reg <= icmp_ln24_reg_1151_pp0_iter6_reg;
        icmp_ln571_reg_1196_pp0_iter4_reg <= icmp_ln571_reg_1196;
        icmp_ln582_reg_1215_pp0_iter4_reg <= icmp_ln582_reg_1215;
        in_data_tmp_reg_1160_pp0_iter2_reg <= in_data_tmp_reg_1160_pp0_iter1_reg;
        in_data_tmp_reg_1160_pp0_iter3_reg <= in_data_tmp_reg_1160_pp0_iter2_reg;
        or_ln603_2_reg_1263_pp0_iter6_reg <= or_ln603_2_reg_1263;
        or_ln603_reg_1247_pp0_iter5_reg <= or_ln603_reg_1247;
        select_ln603_1_reg_1253_pp0_iter5_reg <= select_ln603_1_reg_1253;
        sh_amt_reg_1208_pp0_iter4_reg <= sh_amt_reg_1208;
        sh_amt_reg_1208_pp0_iter5_reg <= sh_amt_reg_1208_pp0_iter4_reg;
        trunc_ln203_reg_1166_pp0_iter2_reg <= trunc_ln203_reg_1166_pp0_iter1_reg;
        trunc_ln203_reg_1166_pp0_iter3_reg <= trunc_ln203_reg_1166_pp0_iter2_reg;
        trunc_ln203_reg_1166_pp0_iter4_reg <= trunc_ln203_reg_1166_pp0_iter3_reg;
        trunc_ln203_reg_1166_pp0_iter5_reg <= trunc_ln203_reg_1166_pp0_iter4_reg;
        trunc_ln583_reg_1221_pp0_iter4_reg <= trunc_ln583_reg_1221;
        trunc_ln583_reg_1221_pp0_iter5_reg <= trunc_ln583_reg_1221_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_1151_pp0_iter4_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ashr_ln586_reg_1258 <= grp_fu_477_p2;
        or_ln603_2_reg_1263 <= or_ln603_2_fu_579_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_1151_pp0_iter5_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        empty_37_reg_1278[7 : 4] <= empty_37_fu_615_p2[7 : 4];
        icmp_ln203_reg_1283 <= icmp_ln203_fu_621_p2;
        shl_ln_reg_1273[7 : 4] <= shl_ln_fu_608_p3[7 : 4];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_1151_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exp_tmp_V_reg_1181 <= {{ireg_V_fu_346_p1[62:52]}};
        p_Result_7_reg_1176 <= ireg_V_fu_346_p1[32'd63];
        trunc_ln556_reg_1171 <= trunc_ln556_fu_350_p1;
        trunc_ln565_reg_1186 <= trunc_ln565_fu_372_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln24_reg_1151 <= icmp_ln24_fu_325_p2;
        icmp_ln24_reg_1151_pp0_iter1_reg <= icmp_ln24_reg_1151;
        in_data_tmp_reg_1160_pp0_iter1_reg <= in_data_tmp_reg_1160;
        trunc_ln203_reg_1166_pp0_iter1_reg <= trunc_ln203_reg_1166;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        icmp_ln37_1_reg_1303 <= icmp_ln37_1_fu_757_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_1151_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln571_reg_1196 <= icmp_ln571_fu_403_p2;
        icmp_ln581_reg_1202 <= icmp_ln581_fu_414_p2;
        icmp_ln582_reg_1215 <= icmp_ln582_fu_440_p2;
        man_V_2_reg_1191 <= man_V_2_fu_396_p3;
        sh_amt_reg_1208 <= sh_amt_fu_432_p3;
        tmp_514_reg_1227 <= {{sh_amt_fu_432_p3[11:4]}};
        trunc_ln583_reg_1221 <= trunc_ln583_fu_446_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln33_reg_1308 == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln935_reg_1339 <= icmp_ln935_fu_829_p2;
        l_reg_1352 <= l_fu_857_p3;
        tmp_V_4_reg_1344 <= tmp_V_4_fu_834_p3;
        trunc_ln943_reg_1357 <= trunc_ln943_fu_865_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1339_pp1_iter3_reg == 1'd0) & (icmp_ln33_reg_1308_pp1_iter3_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln958_reg_1420 <= icmp_ln958_fu_994_p2;
        or_ln_reg_1405[0] <= or_ln_fu_980_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_fu_325_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_data_tmp_reg_1160 <= in_r_TDATA_int;
        trunc_ln203_reg_1166 <= trunc_ln203_fu_342_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_1151_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_local_V_fu_196 <= in_local_V_1_fu_746_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1339_pp1_iter4_reg == 1'd0) & (icmp_ln33_reg_1308_pp1_iter4_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        lshr_ln958_reg_1430 <= grp_fu_999_p2;
        shl_ln958_reg_1435 <= grp_fu_1007_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1339_pp1_iter5_reg == 1'd0) & (icmp_ln33_reg_1308_pp1_iter5_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        m_5_reg_1440 <= {{m_2_fu_1025_p2[63:1]}};
        tmp_520_reg_1445 <= m_2_fu_1025_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_myproject_fu_266_layer13_out_0_V_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        out_local_0_fu_200 <= grp_myproject_fu_266_layer13_out_0_V;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_myproject_fu_266_layer13_out_1_V_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        out_local_1_fu_204 <= grp_myproject_fu_266_layer13_out_1_V;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_myproject_fu_266_layer13_out_2_V_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        out_local_2_fu_208 <= grp_myproject_fu_266_layer13_out_2_V;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_myproject_fu_266_layer13_out_3_V_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        out_local_3_fu_212 <= grp_myproject_fu_266_layer13_out_3_V;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_myproject_fu_266_layer13_out_4_V_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state13))) begin
        out_local_4_fu_216 <= grp_myproject_fu_266_layer13_out_4_V;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_count <= select_ln22_fu_311_p3;
        select_ln22_reg_1146 <= select_ln22_fu_311_p3;
        vector_rows_read_reg_1141 <= vector_rows_0_data_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln24_reg_1151_pp0_iter5_reg == 1'd0) & (or_ln603_2_reg_1263 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        select_ln603_2_reg_1268 <= select_ln603_2_fu_602_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1339_pp1_iter6_reg == 1'd0) & (icmp_ln33_reg_1308_pp1_iter6_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        select_ln964_reg_1450[0] <= select_ln964_fu_1049_p3[0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_1339 == 1'd0) & (icmp_ln33_reg_1308_pp1_iter1_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        sub_ln944_reg_1362 <= sub_ln944_fu_869_p2;
        sub_ln947_reg_1374 <= sub_ln947_fu_882_p2;
        trunc_ln944_reg_1369 <= trunc_ln944_fu_874_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((((vector_rows_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | ((vector_rows_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (vector_rows_0_vld_reg == 1'b1)))) begin
        vector_rows_0_data_reg <= vector_rows;
    end
end

always @ (*) begin
    if ((icmp_ln24_fu_325_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln33_fu_761_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state14 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state14 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter9 == 1'b0) & (ap_enable_reg_pp1_iter8 == 1'b0) & (ap_enable_reg_pp1_iter7 == 1'b0) & (ap_enable_reg_pp1_iter6 == 1'b0) & (ap_enable_reg_pp1_iter5 == 1'b0) & (ap_enable_reg_pp1_iter4 == 1'b0) & (ap_enable_reg_pp1_iter3 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_1007_ce = 1'b1;
    end else begin
        grp_fu_1007_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_292_ce = 1'b1;
    end else begin
        grp_fu_292_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        grp_fu_477_ce = 1'b1;
    end else begin
        grp_fu_477_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        grp_fu_999_ce = 1'b1;
    end else begin
        grp_fu_999_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state13_on_subcall_done) & (1'b1 == ap_CS_fsm_state13))) begin
        grp_myproject_fu_266_ap_continue = 1'b1;
    end else begin
        grp_myproject_fu_266_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln24_fu_325_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((in_r_TVALID == 1'b1) & (regslice_both_in_data_U_ack_in == 1'b1))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln24_fu_325_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        in_r_TREADY_int = 1'b1;
    end else begin
        in_r_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (icmp_ln33_reg_1308_pp1_iter8_reg == 1'd0) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0) & (icmp_ln33_reg_1308_pp1_iter7_reg == 1'd0) & (ap_enable_reg_pp1_iter8 == 1'b1)))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln33_reg_1308_pp1_iter7_reg == 1'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter8 == 1'b1))) begin
        out_r_TVALID_int = 1'b1;
    end else begin
        out_r_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b1 == ap_CS_fsm_state24) & (regslice_both_out_data_U_apdone_blk == 1'b0)))) begin
        vector_rows_0_ack_out = 1'b1;
    end else begin
        vector_rows_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln24_fu_325_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln24_fu_325_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((ap_enable_reg_pp0_iter7 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b0 == ap_block_state13_on_subcall_done) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln33_fu_761_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((ap_enable_reg_pp1_iter8 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((ap_enable_reg_pp1_iter1 == 1'b0) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln33_fu_761_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((1'b1 == ap_CS_fsm_state24) & (regslice_both_out_data_U_apdone_blk == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_408_p2 = (12'd1075 - zext_ln461_fu_376_p1);

assign a_fu_938_p2 = (icmp_ln947_fu_933_p2 & icmp_ln947_1_reg_1390);

assign add_ln22_fu_305_p2 = (row_count + 32'd1);

assign add_ln581_fu_420_p2 = ($signed(12'd4086) + $signed(F2_fu_408_p2));

assign add_ln949_fu_956_p2 = ($signed(16'd65512) + $signed(trunc_ln944_reg_1369_pp1_iter3_reg));

assign add_ln958_fu_923_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_1362));

assign add_ln964_fu_1064_p2 = (sub_ln964_fu_1059_p2 + select_ln964_reg_1450);

assign and_ln203_1_fu_735_p2 = (xor_ln203_2_fu_730_p2 & in_local_V_fu_196);

assign and_ln203_2_fu_741_p2 = (select_ln203_3_fu_724_p3 & and_ln203_reg_1297);

assign and_ln203_fu_706_p2 = (shl_ln203_1_fu_694_p2 & lshr_ln203_fu_700_p2);

assign and_ln37_fu_824_p2 = (icmp_ln37_fu_818_p2 & icmp_ln37_1_reg_1303);

assign and_ln581_fu_511_p2 = (xor_ln582_fu_505_p2 & icmp_ln581_reg_1202);

assign and_ln582_fu_569_p2 = (xor_ln571_fu_564_p2 & icmp_ln582_reg_1215_pp0_iter4_reg);

assign and_ln585_1_fu_528_p2 = (icmp_ln585_fu_463_p2 & and_ln581_fu_511_p2);

assign and_ln585_fu_522_p2 = (xor_ln585_fu_516_p2 & and_ln581_fu_511_p2);

assign and_ln603_fu_545_p2 = (xor_ln581_fu_539_p2 & icmp_ln603_fu_468_p2);

assign and_ln949_fu_968_p2 = (xor_ln949_fu_950_p2 & p_Result_2_fu_961_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd6];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((icmp_ln24_fu_325_p2 == 1'd0) & (in_r_TVALID_int == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((icmp_ln24_fu_325_p2 == 1'd0) & (in_r_TVALID_int == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_01001 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = (((1'b1 == ap_block_state23_io) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp1_iter8 == 1'b1)));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = (((1'b1 == ap_block_state23_io) & (ap_enable_reg_pp1_iter9 == 1'b1)) | ((1'b1 == ap_block_state22_io) & (ap_enable_reg_pp1_iter8 == 1'b1)));
end

assign ap_block_state10_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state13_on_subcall_done = ((ap_sync_grp_myproject_fu_266_ap_ready & ap_sync_grp_myproject_fu_266_ap_done) == 1'b0);
end

assign ap_block_state14_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp1_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state22_io = ((icmp_ln33_reg_1308_pp1_iter7_reg == 1'd0) & (out_r_TREADY_int == 1'b0));
end

assign ap_block_state22_pp1_stage0_iter8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state23_io = ((icmp_ln33_reg_1308_pp1_iter8_reg == 1'd0) & (out_r_TREADY_int == 1'b0));
end

assign ap_block_state23_pp1_stage0_iter9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter0 = ((icmp_ln24_fu_325_p2 == 1'd0) & (in_r_TVALID_int == 1'b0));
end

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_myproject_fu_266_ap_done = (grp_myproject_fu_266_ap_done | ap_sync_reg_grp_myproject_fu_266_ap_done);

assign ap_sync_grp_myproject_fu_266_ap_ready = (grp_myproject_fu_266_ap_ready | ap_sync_reg_grp_myproject_fu_266_ap_ready);

assign bitcast_ln696_fu_482_p1 = in_data_tmp_reg_1160_pp0_iter3_reg;

assign bitcast_ln739_fu_1092_p1 = trunc_ln738_fu_1088_p1;

assign empty_37_fu_615_p2 = (shl_ln_fu_608_p3 | 8'd15);

assign grp_fu_1007_p0 = tmp_V_4_reg_1344_pp1_iter3_reg;

assign grp_fu_1007_p1 = sub_ln958_reg_1400;

assign grp_fu_477_p1 = $unsigned(sext_ln581_1_fu_460_p1);

assign grp_fu_999_p0 = tmp_V_4_reg_1344_pp1_iter3_reg;

assign grp_myproject_fu_266_ap_start = grp_myproject_fu_266_ap_start_reg;

assign i_1_fu_767_p2 = (i2_0_reg_255 + 3'd1);

assign i_fu_331_p2 = (i_0_reg_244 + 5'd1);

assign icmp_ln203_fu_621_p2 = ((shl_ln_fu_608_p3 > empty_37_fu_615_p2) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_299_p2 = ((row_count == vector_rows_0_data_reg) ? 1'b1 : 1'b0);

assign icmp_ln24_fu_325_p2 = ((i_0_reg_244 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_761_p2 = ((i2_0_reg_255 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln37_1_fu_757_p2 = ((select_ln22_reg_1146 == vector_rows_read_reg_1141) ? 1'b1 : 1'b0);

assign icmp_ln37_fu_818_p2 = ((i2_0_reg_255 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_403_p2 = ((trunc_ln556_reg_1171 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_414_p2 = (($signed(F2_fu_408_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_440_p2 = ((F2_fu_408_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_463_p2 = ((sh_amt_reg_1208 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_468_p2 = ((tmp_514_reg_1227 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_829_p2 = ((tmp_V_3_reg_1317 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_917_p2 = ((p_Result_s_fu_912_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_933_p2 = (($signed(tmp_518_reg_1385) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_994_p2 = (($signed(lsb_index_reg_1379) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign in_local_V_1_fu_746_p2 = (and_ln203_2_fu_741_p2 | and_ln203_1_fu_735_p2);

assign ireg_V_fu_346_p1 = grp_fu_292_p1;


always @ (p_Result_10_fu_849_p3) begin
    if (p_Result_10_fu_849_p3[0] == 1'b1) begin
        l_fu_857_p3 = 32'd0;
    end else if (p_Result_10_fu_849_p3[1] == 1'b1) begin
        l_fu_857_p3 = 32'd1;
    end else if (p_Result_10_fu_849_p3[2] == 1'b1) begin
        l_fu_857_p3 = 32'd2;
    end else if (p_Result_10_fu_849_p3[3] == 1'b1) begin
        l_fu_857_p3 = 32'd3;
    end else if (p_Result_10_fu_849_p3[4] == 1'b1) begin
        l_fu_857_p3 = 32'd4;
    end else if (p_Result_10_fu_849_p3[5] == 1'b1) begin
        l_fu_857_p3 = 32'd5;
    end else if (p_Result_10_fu_849_p3[6] == 1'b1) begin
        l_fu_857_p3 = 32'd6;
    end else if (p_Result_10_fu_849_p3[7] == 1'b1) begin
        l_fu_857_p3 = 32'd7;
    end else if (p_Result_10_fu_849_p3[8] == 1'b1) begin
        l_fu_857_p3 = 32'd8;
    end else if (p_Result_10_fu_849_p3[9] == 1'b1) begin
        l_fu_857_p3 = 32'd9;
    end else if (p_Result_10_fu_849_p3[10] == 1'b1) begin
        l_fu_857_p3 = 32'd10;
    end else if (p_Result_10_fu_849_p3[11] == 1'b1) begin
        l_fu_857_p3 = 32'd11;
    end else if (p_Result_10_fu_849_p3[12] == 1'b1) begin
        l_fu_857_p3 = 32'd12;
    end else if (p_Result_10_fu_849_p3[13] == 1'b1) begin
        l_fu_857_p3 = 32'd13;
    end else if (p_Result_10_fu_849_p3[14] == 1'b1) begin
        l_fu_857_p3 = 32'd14;
    end else if (p_Result_10_fu_849_p3[15] == 1'b1) begin
        l_fu_857_p3 = 32'd15;
    end else if (p_Result_10_fu_849_p3[16] == 1'b1) begin
        l_fu_857_p3 = 32'd16;
    end else if (p_Result_10_fu_849_p3[17] == 1'b1) begin
        l_fu_857_p3 = 32'd17;
    end else if (p_Result_10_fu_849_p3[18] == 1'b1) begin
        l_fu_857_p3 = 32'd18;
    end else if (p_Result_10_fu_849_p3[19] == 1'b1) begin
        l_fu_857_p3 = 32'd19;
    end else if (p_Result_10_fu_849_p3[20] == 1'b1) begin
        l_fu_857_p3 = 32'd20;
    end else if (p_Result_10_fu_849_p3[21] == 1'b1) begin
        l_fu_857_p3 = 32'd21;
    end else if (p_Result_10_fu_849_p3[22] == 1'b1) begin
        l_fu_857_p3 = 32'd22;
    end else if (p_Result_10_fu_849_p3[23] == 1'b1) begin
        l_fu_857_p3 = 32'd23;
    end else if (p_Result_10_fu_849_p3[24] == 1'b1) begin
        l_fu_857_p3 = 32'd24;
    end else if (p_Result_10_fu_849_p3[25] == 1'b1) begin
        l_fu_857_p3 = 32'd25;
    end else if (p_Result_10_fu_849_p3[26] == 1'b1) begin
        l_fu_857_p3 = 32'd26;
    end else if (p_Result_10_fu_849_p3[27] == 1'b1) begin
        l_fu_857_p3 = 32'd27;
    end else if (p_Result_10_fu_849_p3[28] == 1'b1) begin
        l_fu_857_p3 = 32'd28;
    end else if (p_Result_10_fu_849_p3[29] == 1'b1) begin
        l_fu_857_p3 = 32'd29;
    end else if (p_Result_10_fu_849_p3[30] == 1'b1) begin
        l_fu_857_p3 = 32'd30;
    end else if (p_Result_10_fu_849_p3[31] == 1'b1) begin
        l_fu_857_p3 = 32'd31;
    end else begin
        l_fu_857_p3 = 32'd32;
    end
end

assign lsb_index_fu_888_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_reg_1362));

assign lshr_ln203_fu_700_p2 = 256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 >> zext_ln203_5_fu_684_p1;

assign lshr_ln947_fu_906_p2 = 16'd65535 >> zext_ln947_fu_903_p1;

assign m_1_fu_1016_p3 = ((icmp_ln958_reg_1420_pp1_iter5_reg[0:0] === 1'b1) ? zext_ln958_fu_1013_p1 : shl_ln958_reg_1435);

assign m_2_fu_1025_p2 = (zext_ln961_fu_1022_p1 + m_1_fu_1016_p3);

assign m_6_fu_1056_p1 = m_5_reg_1440_pp1_iter7_reg;

assign man_V_1_fu_390_p2 = (54'd0 - p_Result_8_fu_386_p1);

assign man_V_2_fu_396_p3 = ((p_Result_7_reg_1176[0:0] === 1'b1) ? man_V_1_fu_390_p2 : p_Result_8_fu_386_p1);

assign or_ln581_fu_534_p2 = (or_ln582_fu_501_p2 | icmp_ln581_reg_1202);

assign or_ln582_fu_501_p2 = (icmp_ln582_reg_1215 | icmp_ln571_reg_1196);

assign or_ln603_1_fu_574_p2 = (and_ln585_reg_1237 | and_ln582_fu_569_p2);

assign or_ln603_2_fu_579_p2 = (or_ln603_reg_1247 | or_ln603_1_fu_574_p2);

assign or_ln603_fu_551_p2 = (and_ln603_fu_545_p2 | and_ln585_1_fu_528_p2);

assign or_ln949_fu_974_p2 = (and_ln949_fu_968_p2 | a_fu_938_p2);

assign or_ln_fu_980_p3 = {{31'd0}, {or_ln949_fu_974_p2}};

assign out_r_TDATA_int = ((icmp_ln935_reg_1339_pp1_iter7_reg[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_1092_p1);

assign out_r_TVALID = regslice_both_out_data_U_vld_out;

assign p_Result_10_fu_849_p3 = {{16'd65535}, {p_Result_1_fu_839_p4}};

assign p_Result_11_fu_1076_p5 = {{m_6_fu_1056_p1[63:32]}, {tmp_3_fu_1069_p3}, {m_6_fu_1056_p1[22:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_4_fu_834_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_1_fu_839_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_1_fu_839_p4[ap_tvar_int_0] = tmp_V_4_fu_834_p3[15 - ap_tvar_int_0];
        end
    end
end

assign p_Result_2_fu_961_p3 = tmp_V_4_reg_1344_pp1_iter3_reg[add_ln949_fu_956_p2];

assign p_Result_8_fu_386_p1 = tmp_s_fu_379_p3;

assign p_Result_s_fu_912_p2 = (tmp_V_4_reg_1344_pp1_iter2_reg & lshr_ln947_fu_906_p2);

assign select_ln203_1_fu_656_p3 = ((icmp_ln203_reg_1283[0:0] === 1'b1) ? zext_ln203_1_fu_636_p1 : zext_ln203_fu_633_p1);

assign select_ln203_2_fu_663_p3 = ((icmp_ln203_reg_1283[0:0] === 1'b1) ? xor_ln203_fu_643_p2 : zext_ln203_fu_633_p1);

assign select_ln203_3_fu_724_p3 = ((icmp_ln203_reg_1283_pp0_iter7_reg[0:0] === 1'b1) ? tmp_516_fu_715_p4 : shl_ln203_reg_1291);

assign select_ln203_fu_649_p3 = ((icmp_ln203_reg_1283[0:0] === 1'b1) ? zext_ln203_fu_633_p1 : zext_ln203_1_fu_636_p1);

assign select_ln22_fu_311_p3 = ((icmp_ln20_fu_299_p2[0:0] === 1'b1) ? 32'd1 : add_ln22_fu_305_p2);

assign select_ln588_fu_493_p3 = ((tmp_515_fu_485_p3[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign select_ln603_1_fu_557_p3 = ((and_ln585_fu_522_p2[0:0] === 1'b1) ? select_ln588_fu_493_p3 : trunc_ln583_reg_1221);

assign select_ln603_2_fu_602_p3 = ((or_ln603_reg_1247_pp0_iter5_reg[0:0] === 1'b1) ? select_ln603_fu_595_p3 : select_ln603_1_reg_1253_pp0_iter5_reg);

assign select_ln603_3_fu_627_p3 = ((or_ln603_2_reg_1263_pp0_iter6_reg[0:0] === 1'b1) ? select_ln603_2_reg_1268 : 16'd0);

assign select_ln603_fu_595_p3 = ((and_ln603_reg_1242_pp0_iter5_reg[0:0] === 1'b1) ? shl_ln604_fu_590_p2 : trunc_ln586_fu_587_p1);

assign select_ln964_fu_1049_p3 = ((tmp_520_reg_1445[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln581_1_fu_460_p1 = sh_amt_reg_1208;

assign sext_ln581_fu_584_p1 = sh_amt_reg_1208_pp0_iter5_reg;

assign sh_amt_fu_432_p3 = ((icmp_ln581_fu_414_p2[0:0] === 1'b1) ? add_ln581_fu_420_p2 : sub_ln581_fu_426_p2);

assign shl_ln203_1_fu_694_p2 = 256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 << zext_ln203_4_fu_680_p1;

assign shl_ln203_fu_688_p2 = zext_ln203_2_fu_639_p1 << zext_ln203_3_fu_676_p1;

assign shl_ln604_fu_590_p2 = trunc_ln583_reg_1221_pp0_iter5_reg << sext_ln581_fu_584_p1;

assign shl_ln_fu_608_p3 = {{trunc_ln203_reg_1166_pp0_iter5_reg}, {4'd0}};

assign sub_ln581_fu_426_p2 = (12'd10 - F2_fu_408_p2);

assign sub_ln944_fu_869_p2 = (32'd16 - l_reg_1352);

assign sub_ln947_fu_882_p2 = (5'd9 - trunc_ln947_fu_878_p1);

assign sub_ln958_fu_928_p2 = (32'd25 - sub_ln944_reg_1362);

assign sub_ln964_fu_1059_p2 = (8'd6 - trunc_ln943_reg_1357_pp1_iter7_reg);

assign tmp_3_fu_1069_p3 = {{p_Result_9_reg_1323_pp1_iter7_reg}, {add_ln964_fu_1064_p2}};

assign tmp_515_fu_485_p3 = bitcast_ln696_fu_482_p1[32'd31];

integer ap_tvar_int_1;

always @ (shl_ln203_reg_1291) begin
    for (ap_tvar_int_1 = 256 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 255 - 0) begin
            tmp_516_fu_715_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_516_fu_715_p4[ap_tvar_int_1] = shl_ln203_reg_1291[255 - ap_tvar_int_1];
        end
    end
end

assign tmp_519_fu_943_p3 = lsb_index_reg_1379[32'd31];

assign tmp_V_4_fu_834_p3 = ((p_Result_9_reg_1323[0:0] === 1'b1) ? tmp_V_reg_1329 : tmp_V_3_reg_1317);

assign tmp_V_fu_812_p2 = (16'd0 - tmp_V_3_fu_788_p7);

assign tmp_s_fu_379_p3 = {{1'd1}, {trunc_ln565_reg_1186}};

assign trunc_ln203_fu_342_p1 = i_0_reg_244[3:0];

assign trunc_ln556_fu_350_p1 = ireg_V_fu_346_p1[62:0];

assign trunc_ln565_fu_372_p1 = ireg_V_fu_346_p1[51:0];

assign trunc_ln583_fu_446_p1 = man_V_2_fu_396_p3[15:0];

assign trunc_ln586_fu_587_p1 = ashr_ln586_reg_1258[15:0];

assign trunc_ln738_fu_1088_p1 = p_Result_11_fu_1076_p5[31:0];

assign trunc_ln943_fu_865_p1 = l_fu_857_p3[7:0];

assign trunc_ln944_fu_874_p1 = sub_ln944_fu_869_p2[15:0];

assign trunc_ln947_fu_878_p1 = sub_ln944_fu_869_p2[4:0];

assign xor_ln203_1_fu_670_p2 = (select_ln203_fu_649_p3 ^ 9'd255);

assign xor_ln203_2_fu_730_p2 = (256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 ^ and_ln203_reg_1297);

assign xor_ln203_fu_643_p2 = (zext_ln203_fu_633_p1 ^ 9'd255);

assign xor_ln571_fu_564_p2 = (icmp_ln571_reg_1196_pp0_iter4_reg ^ 1'd1);

assign xor_ln581_fu_539_p2 = (or_ln581_fu_534_p2 ^ 1'd1);

assign xor_ln582_fu_505_p2 = (or_ln582_fu_501_p2 ^ 1'd1);

assign xor_ln585_fu_516_p2 = (icmp_ln585_fu_463_p2 ^ 1'd1);

assign xor_ln949_fu_950_p2 = (tmp_519_fu_943_p3 ^ 1'd1);

assign zext_ln203_1_fu_636_p1 = empty_37_reg_1278;

assign zext_ln203_2_fu_639_p1 = select_ln603_3_fu_627_p3;

assign zext_ln203_3_fu_676_p1 = select_ln203_2_fu_663_p3;

assign zext_ln203_4_fu_680_p1 = select_ln203_1_fu_656_p3;

assign zext_ln203_5_fu_684_p1 = xor_ln203_1_fu_670_p2;

assign zext_ln203_fu_633_p1 = shl_ln_reg_1273;

assign zext_ln461_fu_376_p1 = exp_tmp_V_reg_1181;

assign zext_ln947_fu_903_p1 = sub_ln947_reg_1374;

assign zext_ln958_fu_1013_p1 = lshr_ln958_reg_1430;

assign zext_ln961_fu_1022_p1 = or_ln_reg_1405_pp1_iter5_reg;

always @ (posedge ap_clk) begin
    shl_ln_reg_1273[3:0] <= 4'b0000;
    empty_37_reg_1278[3:0] <= 4'b1111;
    or_ln_reg_1405[31:1] <= 31'b0000000000000000000000000000000;
    or_ln_reg_1405_pp1_iter5_reg[31:1] <= 31'b0000000000000000000000000000000;
    select_ln964_reg_1450[7:1] <= 7'b0111111;
end

endmodule //myproject_axi
