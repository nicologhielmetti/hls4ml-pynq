// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_resource_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        data_0_V,
        data_1_V,
        data_2_V,
        data_3_V,
        data_4_V,
        data_5_V,
        data_6_V,
        data_7_V,
        data_8_V,
        data_9_V,
        data_10_V,
        data_11_V,
        data_12_V,
        data_13_V,
        data_14_V,
        data_15_V,
        data_16_V,
        data_17_V,
        data_18_V,
        data_19_V,
        data_20_V,
        data_21_V,
        data_22_V,
        data_23_V,
        data_24_V,
        data_25_V,
        data_26_V,
        data_27_V,
        data_28_V,
        data_29_V,
        data_30_V,
        data_31_V,
        data_32_V,
        data_33_V,
        data_34_V,
        data_35_V,
        data_36_V,
        data_37_V,
        data_38_V,
        data_39_V,
        data_40_V,
        data_41_V,
        data_42_V,
        data_43_V,
        data_44_V,
        data_45_V,
        data_46_V,
        data_47_V,
        data_48_V,
        data_49_V,
        data_50_V,
        data_51_V,
        data_52_V,
        data_53_V,
        data_54_V,
        data_55_V,
        data_56_V,
        data_57_V,
        data_58_V,
        data_59_V,
        data_60_V,
        data_61_V,
        data_62_V,
        data_63_V,
        res_0_V,
        res_0_V_ap_vld,
        res_1_V,
        res_1_V_ap_vld,
        res_2_V,
        res_2_V_ap_vld,
        res_3_V,
        res_3_V_ap_vld,
        res_4_V,
        res_4_V_ap_vld,
        res_5_V,
        res_5_V_ap_vld,
        res_6_V,
        res_6_V_ap_vld,
        res_7_V,
        res_7_V_ap_vld,
        res_8_V,
        res_8_V_ap_vld,
        res_9_V,
        res_9_V_ap_vld,
        res_10_V,
        res_10_V_ap_vld,
        res_11_V,
        res_11_V_ap_vld,
        res_12_V,
        res_12_V_ap_vld,
        res_13_V,
        res_13_V_ap_vld,
        res_14_V,
        res_14_V_ap_vld,
        res_15_V,
        res_15_V_ap_vld,
        res_16_V,
        res_16_V_ap_vld,
        res_17_V,
        res_17_V_ap_vld,
        res_18_V,
        res_18_V_ap_vld,
        res_19_V,
        res_19_V_ap_vld,
        res_20_V,
        res_20_V_ap_vld,
        res_21_V,
        res_21_V_ap_vld,
        res_22_V,
        res_22_V_ap_vld,
        res_23_V,
        res_23_V_ap_vld,
        res_24_V,
        res_24_V_ap_vld,
        res_25_V,
        res_25_V_ap_vld,
        res_26_V,
        res_26_V_ap_vld,
        res_27_V,
        res_27_V_ap_vld,
        res_28_V,
        res_28_V_ap_vld,
        res_29_V,
        res_29_V_ap_vld,
        res_30_V,
        res_30_V_ap_vld,
        res_31_V,
        res_31_V_ap_vld
);

parameter    ap_ST_fsm_state1 = 2'd1;
parameter    ap_ST_fsm_pp0_stage0 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [5:0] data_0_V;
input  [5:0] data_1_V;
input  [5:0] data_2_V;
input  [5:0] data_3_V;
input  [5:0] data_4_V;
input  [5:0] data_5_V;
input  [5:0] data_6_V;
input  [5:0] data_7_V;
input  [5:0] data_8_V;
input  [5:0] data_9_V;
input  [5:0] data_10_V;
input  [5:0] data_11_V;
input  [5:0] data_12_V;
input  [5:0] data_13_V;
input  [5:0] data_14_V;
input  [5:0] data_15_V;
input  [5:0] data_16_V;
input  [5:0] data_17_V;
input  [5:0] data_18_V;
input  [5:0] data_19_V;
input  [5:0] data_20_V;
input  [5:0] data_21_V;
input  [5:0] data_22_V;
input  [5:0] data_23_V;
input  [5:0] data_24_V;
input  [5:0] data_25_V;
input  [5:0] data_26_V;
input  [5:0] data_27_V;
input  [5:0] data_28_V;
input  [5:0] data_29_V;
input  [5:0] data_30_V;
input  [5:0] data_31_V;
input  [5:0] data_32_V;
input  [5:0] data_33_V;
input  [5:0] data_34_V;
input  [5:0] data_35_V;
input  [5:0] data_36_V;
input  [5:0] data_37_V;
input  [5:0] data_38_V;
input  [5:0] data_39_V;
input  [5:0] data_40_V;
input  [5:0] data_41_V;
input  [5:0] data_42_V;
input  [5:0] data_43_V;
input  [5:0] data_44_V;
input  [5:0] data_45_V;
input  [5:0] data_46_V;
input  [5:0] data_47_V;
input  [5:0] data_48_V;
input  [5:0] data_49_V;
input  [5:0] data_50_V;
input  [5:0] data_51_V;
input  [5:0] data_52_V;
input  [5:0] data_53_V;
input  [5:0] data_54_V;
input  [5:0] data_55_V;
input  [5:0] data_56_V;
input  [5:0] data_57_V;
input  [5:0] data_58_V;
input  [5:0] data_59_V;
input  [5:0] data_60_V;
input  [5:0] data_61_V;
input  [5:0] data_62_V;
input  [5:0] data_63_V;
output  [15:0] res_0_V;
output   res_0_V_ap_vld;
output  [15:0] res_1_V;
output   res_1_V_ap_vld;
output  [15:0] res_2_V;
output   res_2_V_ap_vld;
output  [15:0] res_3_V;
output   res_3_V_ap_vld;
output  [15:0] res_4_V;
output   res_4_V_ap_vld;
output  [15:0] res_5_V;
output   res_5_V_ap_vld;
output  [15:0] res_6_V;
output   res_6_V_ap_vld;
output  [15:0] res_7_V;
output   res_7_V_ap_vld;
output  [15:0] res_8_V;
output   res_8_V_ap_vld;
output  [15:0] res_9_V;
output   res_9_V_ap_vld;
output  [15:0] res_10_V;
output   res_10_V_ap_vld;
output  [15:0] res_11_V;
output   res_11_V_ap_vld;
output  [15:0] res_12_V;
output   res_12_V_ap_vld;
output  [15:0] res_13_V;
output   res_13_V_ap_vld;
output  [15:0] res_14_V;
output   res_14_V_ap_vld;
output  [15:0] res_15_V;
output   res_15_V_ap_vld;
output  [15:0] res_16_V;
output   res_16_V_ap_vld;
output  [15:0] res_17_V;
output   res_17_V_ap_vld;
output  [15:0] res_18_V;
output   res_18_V_ap_vld;
output  [15:0] res_19_V;
output   res_19_V_ap_vld;
output  [15:0] res_20_V;
output   res_20_V_ap_vld;
output  [15:0] res_21_V;
output   res_21_V_ap_vld;
output  [15:0] res_22_V;
output   res_22_V_ap_vld;
output  [15:0] res_23_V;
output   res_23_V_ap_vld;
output  [15:0] res_24_V;
output   res_24_V_ap_vld;
output  [15:0] res_25_V;
output   res_25_V_ap_vld;
output  [15:0] res_26_V;
output   res_26_V_ap_vld;
output  [15:0] res_27_V;
output   res_27_V_ap_vld;
output  [15:0] res_28_V;
output   res_28_V_ap_vld;
output  [15:0] res_29_V;
output   res_29_V_ap_vld;
output  [15:0] res_30_V;
output   res_30_V_ap_vld;
output  [15:0] res_31_V;
output   res_31_V_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg res_0_V_ap_vld;
reg res_1_V_ap_vld;
reg res_2_V_ap_vld;
reg res_3_V_ap_vld;
reg res_4_V_ap_vld;
reg res_5_V_ap_vld;
reg res_6_V_ap_vld;
reg res_7_V_ap_vld;
reg res_8_V_ap_vld;
reg res_9_V_ap_vld;
reg res_10_V_ap_vld;
reg res_11_V_ap_vld;
reg res_12_V_ap_vld;
reg res_13_V_ap_vld;
reg res_14_V_ap_vld;
reg res_15_V_ap_vld;
reg res_16_V_ap_vld;
reg res_17_V_ap_vld;
reg res_18_V_ap_vld;
reg res_19_V_ap_vld;
reg res_20_V_ap_vld;
reg res_21_V_ap_vld;
reg res_22_V_ap_vld;
reg res_23_V_ap_vld;
reg res_24_V_ap_vld;
reg res_25_V_ap_vld;
reg res_26_V_ap_vld;
reg res_27_V_ap_vld;
reg res_28_V_ap_vld;
reg res_29_V_ap_vld;
reg res_30_V_ap_vld;
reg res_31_V_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [0:0] icmp_ln64_fu_1891_p2;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
reg    ap_block_pp0_stage0_11001;
wire   [5:0] w5_V_address0;
reg    w5_V_ce0;
wire   [223:0] w5_V_q0;
reg   [5:0] w_index69_reg_1028;
reg   [15:0] acc_V_0_067_reg_1042;
reg   [15:0] acc_V_1_065_reg_1056;
reg   [15:0] acc_V_2_063_reg_1070;
reg   [15:0] acc_V_3_061_reg_1084;
reg   [15:0] acc_V_4_059_reg_1098;
reg   [15:0] acc_V_5_057_reg_1112;
reg   [15:0] acc_V_6_055_reg_1126;
reg   [15:0] acc_V_7_053_reg_1140;
reg   [15:0] acc_V_8_051_reg_1154;
reg   [15:0] acc_V_9_049_reg_1168;
reg   [15:0] acc_V_10_047_reg_1182;
reg   [15:0] acc_V_11_045_reg_1196;
reg   [15:0] acc_V_12_043_reg_1210;
reg   [15:0] acc_V_13_041_reg_1224;
reg   [15:0] acc_V_14_039_reg_1238;
reg   [15:0] acc_V_15_037_reg_1252;
reg   [15:0] acc_V_16_035_reg_1266;
reg   [15:0] acc_V_17_033_reg_1280;
reg   [15:0] acc_V_18_031_reg_1294;
reg   [15:0] acc_V_19_029_reg_1308;
reg   [15:0] acc_V_20_027_reg_1322;
reg   [15:0] acc_V_21_025_reg_1336;
reg   [15:0] acc_V_22_023_reg_1350;
reg   [15:0] acc_V_23_021_reg_1364;
reg   [15:0] acc_V_24_019_reg_1378;
reg   [15:0] acc_V_25_017_reg_1392;
reg   [15:0] acc_V_26_015_reg_1406;
reg   [15:0] acc_V_27_013_reg_1420;
reg   [15:0] acc_V_28_011_reg_1434;
reg   [15:0] acc_V_29_09_reg_1448;
reg   [15:0] acc_V_30_07_reg_1462;
reg   [15:0] acc_V_31_05_reg_1476;
wire   [6:0] tmp_9_fu_1746_p66;
reg   [6:0] tmp_9_reg_3144;
reg   [6:0] tmp_9_reg_3144_pp0_iter1_reg;
wire   [5:0] w_index_fu_1885_p2;
reg   [5:0] w_index_reg_3154;
reg   [0:0] icmp_ln64_reg_3159;
reg   [0:0] icmp_ln64_reg_3159_pp0_iter1_reg;
reg   [0:0] icmp_ln64_reg_3159_pp0_iter2_reg;
wire   [6:0] trunc_ln76_fu_1897_p1;
reg   [6:0] trunc_ln76_reg_3163;
reg   [6:0] tmp_s_reg_3168;
reg   [6:0] tmp_1_reg_3173;
reg   [6:0] tmp_2_reg_3178;
reg   [6:0] tmp_3_reg_3183;
reg   [6:0] tmp_4_reg_3188;
reg   [6:0] tmp_5_reg_3193;
reg   [6:0] tmp_6_reg_3198;
reg   [6:0] tmp_7_reg_3203;
reg   [6:0] tmp_8_reg_3208;
reg   [6:0] tmp_10_reg_3213;
reg   [6:0] tmp_11_reg_3218;
reg   [6:0] tmp_12_reg_3223;
reg   [6:0] tmp_13_reg_3228;
reg   [6:0] tmp_14_reg_3233;
reg   [6:0] tmp_15_reg_3238;
reg   [6:0] tmp_16_reg_3243;
reg   [6:0] tmp_17_reg_3248;
reg   [6:0] tmp_18_reg_3253;
reg   [6:0] tmp_19_reg_3258;
reg   [6:0] tmp_20_reg_3263;
reg   [6:0] tmp_21_reg_3268;
reg   [6:0] tmp_22_reg_3273;
reg   [6:0] tmp_23_reg_3278;
reg   [6:0] tmp_24_reg_3283;
reg   [6:0] tmp_25_reg_3288;
reg   [6:0] tmp_26_reg_3293;
reg   [6:0] tmp_27_reg_3298;
reg   [6:0] tmp_28_reg_3303;
reg   [6:0] tmp_29_reg_3308;
reg   [6:0] tmp_30_reg_3313;
reg   [6:0] tmp_31_reg_3318;
reg   [11:0] trunc_ln_reg_3323;
reg   [11:0] trunc_ln708_s_reg_3328;
reg   [11:0] trunc_ln708_110_reg_3333;
reg   [11:0] trunc_ln708_111_reg_3338;
reg   [11:0] trunc_ln708_112_reg_3343;
reg   [11:0] trunc_ln708_113_reg_3348;
reg   [11:0] trunc_ln708_114_reg_3353;
reg   [11:0] trunc_ln708_115_reg_3358;
reg   [11:0] trunc_ln708_116_reg_3363;
reg   [11:0] trunc_ln708_117_reg_3368;
reg   [11:0] trunc_ln708_118_reg_3373;
reg   [11:0] trunc_ln708_119_reg_3378;
reg   [11:0] trunc_ln708_120_reg_3383;
reg   [11:0] trunc_ln708_121_reg_3388;
reg   [11:0] trunc_ln708_122_reg_3393;
reg   [11:0] trunc_ln708_123_reg_3398;
reg   [11:0] trunc_ln708_124_reg_3403;
reg   [11:0] trunc_ln708_125_reg_3408;
reg   [11:0] trunc_ln708_126_reg_3413;
reg   [11:0] trunc_ln708_127_reg_3418;
reg   [11:0] trunc_ln708_128_reg_3423;
reg   [11:0] trunc_ln708_129_reg_3428;
reg   [11:0] trunc_ln708_130_reg_3433;
reg   [11:0] trunc_ln708_131_reg_3438;
reg   [11:0] trunc_ln708_132_reg_3443;
reg   [11:0] trunc_ln708_133_reg_3448;
reg   [11:0] trunc_ln708_134_reg_3453;
reg   [11:0] trunc_ln708_135_reg_3458;
reg   [11:0] trunc_ln708_136_reg_3463;
reg   [11:0] trunc_ln708_137_reg_3468;
reg   [11:0] trunc_ln708_138_reg_3473;
reg   [11:0] trunc_ln708_139_reg_3478;
wire   [15:0] acc_0_V_fu_2825_p2;
reg    ap_enable_reg_pp0_iter3;
wire   [15:0] acc_1_V_fu_2835_p2;
wire   [15:0] acc_2_V_fu_2845_p2;
wire   [15:0] acc_3_V_fu_2855_p2;
wire   [15:0] acc_4_V_fu_2865_p2;
wire   [15:0] acc_5_V_fu_2875_p2;
wire   [15:0] acc_6_V_fu_2885_p2;
wire   [15:0] acc_7_V_fu_2895_p2;
wire   [15:0] acc_8_V_fu_2905_p2;
wire   [15:0] acc_9_V_fu_2915_p2;
wire   [15:0] acc_10_V_fu_2925_p2;
wire   [15:0] acc_11_V_fu_2935_p2;
wire   [15:0] acc_12_V_fu_2945_p2;
wire   [15:0] acc_13_V_fu_2955_p2;
wire   [15:0] acc_14_V_fu_2965_p2;
wire   [15:0] acc_15_V_fu_2975_p2;
wire   [15:0] acc_16_V_fu_2985_p2;
wire   [15:0] acc_17_V_fu_2995_p2;
wire   [15:0] acc_18_V_fu_3005_p2;
wire   [15:0] acc_19_V_fu_3015_p2;
wire   [15:0] acc_20_V_fu_3025_p2;
wire   [15:0] acc_21_V_fu_3035_p2;
wire   [15:0] acc_22_V_fu_3045_p2;
wire   [15:0] acc_23_V_fu_3055_p2;
wire   [15:0] acc_24_V_fu_3065_p2;
wire   [15:0] acc_25_V_fu_3075_p2;
wire   [15:0] acc_26_V_fu_3085_p2;
wire   [15:0] acc_27_V_fu_3095_p2;
wire   [15:0] acc_28_V_fu_3105_p2;
wire   [15:0] acc_29_V_fu_3115_p2;
wire   [15:0] acc_30_V_fu_3125_p2;
wire   [15:0] acc_31_V_fu_3135_p2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_block_state1;
reg    ap_block_pp0_stage0_subdone;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [5:0] ap_phi_mux_w_index69_phi_fu_1032_p6;
wire   [63:0] zext_ln76_fu_1880_p1;
reg    ap_block_pp0_stage0_01001;
wire   [6:0] tmp_9_fu_1746_p1;
wire   [6:0] tmp_9_fu_1746_p2;
wire   [6:0] tmp_9_fu_1746_p3;
wire   [6:0] tmp_9_fu_1746_p4;
wire   [6:0] tmp_9_fu_1746_p5;
wire   [6:0] tmp_9_fu_1746_p6;
wire   [6:0] tmp_9_fu_1746_p7;
wire   [6:0] tmp_9_fu_1746_p8;
wire   [6:0] tmp_9_fu_1746_p9;
wire   [6:0] tmp_9_fu_1746_p10;
wire   [6:0] tmp_9_fu_1746_p11;
wire   [6:0] tmp_9_fu_1746_p12;
wire   [6:0] tmp_9_fu_1746_p13;
wire   [6:0] tmp_9_fu_1746_p14;
wire   [6:0] tmp_9_fu_1746_p15;
wire   [6:0] tmp_9_fu_1746_p16;
wire   [6:0] tmp_9_fu_1746_p17;
wire   [6:0] tmp_9_fu_1746_p18;
wire   [6:0] tmp_9_fu_1746_p19;
wire   [6:0] tmp_9_fu_1746_p20;
wire   [6:0] tmp_9_fu_1746_p21;
wire   [6:0] tmp_9_fu_1746_p22;
wire   [6:0] tmp_9_fu_1746_p23;
wire   [6:0] tmp_9_fu_1746_p24;
wire   [6:0] tmp_9_fu_1746_p25;
wire   [6:0] tmp_9_fu_1746_p26;
wire   [6:0] tmp_9_fu_1746_p27;
wire   [6:0] tmp_9_fu_1746_p28;
wire   [6:0] tmp_9_fu_1746_p29;
wire   [6:0] tmp_9_fu_1746_p30;
wire   [6:0] tmp_9_fu_1746_p31;
wire   [6:0] tmp_9_fu_1746_p32;
wire   [6:0] tmp_9_fu_1746_p33;
wire   [6:0] tmp_9_fu_1746_p34;
wire   [6:0] tmp_9_fu_1746_p35;
wire   [6:0] tmp_9_fu_1746_p36;
wire   [6:0] tmp_9_fu_1746_p37;
wire   [6:0] tmp_9_fu_1746_p38;
wire   [6:0] tmp_9_fu_1746_p39;
wire   [6:0] tmp_9_fu_1746_p40;
wire   [6:0] tmp_9_fu_1746_p41;
wire   [6:0] tmp_9_fu_1746_p42;
wire   [6:0] tmp_9_fu_1746_p43;
wire   [6:0] tmp_9_fu_1746_p44;
wire   [6:0] tmp_9_fu_1746_p45;
wire   [6:0] tmp_9_fu_1746_p46;
wire   [6:0] tmp_9_fu_1746_p47;
wire   [6:0] tmp_9_fu_1746_p48;
wire   [6:0] tmp_9_fu_1746_p49;
wire   [6:0] tmp_9_fu_1746_p50;
wire   [6:0] tmp_9_fu_1746_p51;
wire   [6:0] tmp_9_fu_1746_p52;
wire   [6:0] tmp_9_fu_1746_p53;
wire   [6:0] tmp_9_fu_1746_p54;
wire   [6:0] tmp_9_fu_1746_p55;
wire   [6:0] tmp_9_fu_1746_p56;
wire   [6:0] tmp_9_fu_1746_p57;
wire   [6:0] tmp_9_fu_1746_p58;
wire   [6:0] tmp_9_fu_1746_p59;
wire   [6:0] tmp_9_fu_1746_p60;
wire   [6:0] tmp_9_fu_1746_p61;
wire   [6:0] tmp_9_fu_1746_p62;
wire   [6:0] tmp_9_fu_1746_p63;
wire   [6:0] tmp_9_fu_1746_p64;
wire  signed [6:0] mul_ln1118_fu_2217_p0;
wire  signed [13:0] sext_ln1116_fu_2211_p1;
wire  signed [6:0] mul_ln1118_fu_2217_p1;
wire   [13:0] mul_ln1118_fu_2217_p2;
wire  signed [6:0] mul_ln1118_20_fu_2236_p0;
wire  signed [6:0] mul_ln1118_20_fu_2236_p1;
wire   [13:0] mul_ln1118_20_fu_2236_p2;
wire  signed [6:0] mul_ln1118_21_fu_2255_p0;
wire  signed [6:0] mul_ln1118_21_fu_2255_p1;
wire   [13:0] mul_ln1118_21_fu_2255_p2;
wire  signed [6:0] mul_ln1118_22_fu_2274_p0;
wire  signed [6:0] mul_ln1118_22_fu_2274_p1;
wire   [13:0] mul_ln1118_22_fu_2274_p2;
wire  signed [6:0] mul_ln1118_23_fu_2293_p0;
wire  signed [6:0] mul_ln1118_23_fu_2293_p1;
wire   [13:0] mul_ln1118_23_fu_2293_p2;
wire  signed [6:0] mul_ln1118_24_fu_2312_p0;
wire  signed [6:0] mul_ln1118_24_fu_2312_p1;
wire   [13:0] mul_ln1118_24_fu_2312_p2;
wire  signed [6:0] mul_ln1118_25_fu_2331_p0;
wire  signed [6:0] mul_ln1118_25_fu_2331_p1;
wire   [13:0] mul_ln1118_25_fu_2331_p2;
wire  signed [6:0] mul_ln1118_26_fu_2350_p0;
wire  signed [6:0] mul_ln1118_26_fu_2350_p1;
wire   [13:0] mul_ln1118_26_fu_2350_p2;
wire  signed [6:0] mul_ln1118_27_fu_2369_p0;
wire  signed [6:0] mul_ln1118_27_fu_2369_p1;
wire   [13:0] mul_ln1118_27_fu_2369_p2;
wire  signed [6:0] mul_ln1118_28_fu_2388_p0;
wire  signed [6:0] mul_ln1118_28_fu_2388_p1;
wire   [13:0] mul_ln1118_28_fu_2388_p2;
wire  signed [6:0] mul_ln1118_29_fu_2407_p0;
wire  signed [6:0] mul_ln1118_29_fu_2407_p1;
wire   [13:0] mul_ln1118_29_fu_2407_p2;
wire  signed [6:0] mul_ln1118_30_fu_2426_p0;
wire  signed [6:0] mul_ln1118_30_fu_2426_p1;
wire   [13:0] mul_ln1118_30_fu_2426_p2;
wire  signed [6:0] mul_ln1118_31_fu_2445_p0;
wire  signed [6:0] mul_ln1118_31_fu_2445_p1;
wire   [13:0] mul_ln1118_31_fu_2445_p2;
wire  signed [6:0] mul_ln1118_32_fu_2464_p0;
wire  signed [6:0] mul_ln1118_32_fu_2464_p1;
wire   [13:0] mul_ln1118_32_fu_2464_p2;
wire  signed [6:0] mul_ln1118_33_fu_2483_p0;
wire  signed [6:0] mul_ln1118_33_fu_2483_p1;
wire   [13:0] mul_ln1118_33_fu_2483_p2;
wire  signed [6:0] mul_ln1118_34_fu_2502_p0;
wire  signed [6:0] mul_ln1118_34_fu_2502_p1;
wire   [13:0] mul_ln1118_34_fu_2502_p2;
wire  signed [6:0] mul_ln1118_35_fu_2521_p0;
wire  signed [6:0] mul_ln1118_35_fu_2521_p1;
wire   [13:0] mul_ln1118_35_fu_2521_p2;
wire  signed [6:0] mul_ln1118_36_fu_2540_p0;
wire  signed [6:0] mul_ln1118_36_fu_2540_p1;
wire   [13:0] mul_ln1118_36_fu_2540_p2;
wire  signed [6:0] mul_ln1118_37_fu_2559_p0;
wire  signed [6:0] mul_ln1118_37_fu_2559_p1;
wire   [13:0] mul_ln1118_37_fu_2559_p2;
wire  signed [6:0] mul_ln1118_38_fu_2578_p0;
wire  signed [6:0] mul_ln1118_38_fu_2578_p1;
wire   [13:0] mul_ln1118_38_fu_2578_p2;
wire  signed [6:0] mul_ln1118_39_fu_2597_p0;
wire  signed [6:0] mul_ln1118_39_fu_2597_p1;
wire   [13:0] mul_ln1118_39_fu_2597_p2;
wire  signed [6:0] mul_ln1118_40_fu_2616_p0;
wire  signed [6:0] mul_ln1118_40_fu_2616_p1;
wire   [13:0] mul_ln1118_40_fu_2616_p2;
wire  signed [6:0] mul_ln1118_41_fu_2635_p0;
wire  signed [6:0] mul_ln1118_41_fu_2635_p1;
wire   [13:0] mul_ln1118_41_fu_2635_p2;
wire  signed [6:0] mul_ln1118_42_fu_2654_p0;
wire  signed [6:0] mul_ln1118_42_fu_2654_p1;
wire   [13:0] mul_ln1118_42_fu_2654_p2;
wire  signed [6:0] mul_ln1118_43_fu_2673_p0;
wire  signed [6:0] mul_ln1118_43_fu_2673_p1;
wire   [13:0] mul_ln1118_43_fu_2673_p2;
wire  signed [6:0] mul_ln1118_44_fu_2692_p0;
wire  signed [6:0] mul_ln1118_44_fu_2692_p1;
wire   [13:0] mul_ln1118_44_fu_2692_p2;
wire  signed [6:0] mul_ln1118_45_fu_2711_p0;
wire  signed [6:0] mul_ln1118_45_fu_2711_p1;
wire   [13:0] mul_ln1118_45_fu_2711_p2;
wire  signed [6:0] mul_ln1118_46_fu_2730_p0;
wire  signed [6:0] mul_ln1118_46_fu_2730_p1;
wire   [13:0] mul_ln1118_46_fu_2730_p2;
wire  signed [6:0] mul_ln1118_47_fu_2749_p0;
wire  signed [6:0] mul_ln1118_47_fu_2749_p1;
wire   [13:0] mul_ln1118_47_fu_2749_p2;
wire  signed [6:0] mul_ln1118_48_fu_2768_p0;
wire  signed [6:0] mul_ln1118_48_fu_2768_p1;
wire   [13:0] mul_ln1118_48_fu_2768_p2;
wire  signed [6:0] mul_ln1118_49_fu_2787_p0;
wire  signed [6:0] mul_ln1118_49_fu_2787_p1;
wire   [13:0] mul_ln1118_49_fu_2787_p2;
wire  signed [6:0] mul_ln1118_50_fu_2806_p0;
wire  signed [6:0] mul_ln1118_50_fu_2806_p1;
wire   [13:0] mul_ln1118_50_fu_2806_p2;
wire  signed [15:0] sext_ln708_fu_2822_p1;
wire  signed [15:0] sext_ln708_5_fu_2832_p1;
wire  signed [15:0] sext_ln708_6_fu_2842_p1;
wire  signed [15:0] sext_ln708_7_fu_2852_p1;
wire  signed [15:0] sext_ln708_8_fu_2862_p1;
wire  signed [15:0] sext_ln708_9_fu_2872_p1;
wire  signed [15:0] sext_ln708_10_fu_2882_p1;
wire  signed [15:0] sext_ln708_11_fu_2892_p1;
wire  signed [15:0] sext_ln708_12_fu_2902_p1;
wire  signed [15:0] sext_ln708_13_fu_2912_p1;
wire  signed [15:0] sext_ln708_14_fu_2922_p1;
wire  signed [15:0] sext_ln708_15_fu_2932_p1;
wire  signed [15:0] sext_ln708_16_fu_2942_p1;
wire  signed [15:0] sext_ln708_17_fu_2952_p1;
wire  signed [15:0] sext_ln708_18_fu_2962_p1;
wire  signed [15:0] sext_ln708_19_fu_2972_p1;
wire  signed [15:0] sext_ln708_20_fu_2982_p1;
wire  signed [15:0] sext_ln708_21_fu_2992_p1;
wire  signed [15:0] sext_ln708_22_fu_3002_p1;
wire  signed [15:0] sext_ln708_23_fu_3012_p1;
wire  signed [15:0] sext_ln708_24_fu_3022_p1;
wire  signed [15:0] sext_ln708_25_fu_3032_p1;
wire  signed [15:0] sext_ln708_26_fu_3042_p1;
wire  signed [15:0] sext_ln708_27_fu_3052_p1;
wire  signed [15:0] sext_ln708_28_fu_3062_p1;
wire  signed [15:0] sext_ln708_29_fu_3072_p1;
wire  signed [15:0] sext_ln708_30_fu_3082_p1;
wire  signed [15:0] sext_ln708_31_fu_3092_p1;
wire  signed [15:0] sext_ln708_32_fu_3102_p1;
wire  signed [15:0] sext_ln708_33_fu_3112_p1;
wire  signed [15:0] sext_ln708_34_fu_3122_p1;
wire  signed [15:0] sext_ln708_35_fu_3132_p1;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to2;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_477;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
end

dense_resource_1_hbi #(
    .DataWidth( 224 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
w5_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w5_V_address0),
    .ce0(w5_V_ce0),
    .q0(w5_V_q0)
);

myproject_axi_muxibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 7 ),
    .din2_WIDTH( 7 ),
    .din3_WIDTH( 7 ),
    .din4_WIDTH( 7 ),
    .din5_WIDTH( 7 ),
    .din6_WIDTH( 7 ),
    .din7_WIDTH( 7 ),
    .din8_WIDTH( 7 ),
    .din9_WIDTH( 7 ),
    .din10_WIDTH( 7 ),
    .din11_WIDTH( 7 ),
    .din12_WIDTH( 7 ),
    .din13_WIDTH( 7 ),
    .din14_WIDTH( 7 ),
    .din15_WIDTH( 7 ),
    .din16_WIDTH( 7 ),
    .din17_WIDTH( 7 ),
    .din18_WIDTH( 7 ),
    .din19_WIDTH( 7 ),
    .din20_WIDTH( 7 ),
    .din21_WIDTH( 7 ),
    .din22_WIDTH( 7 ),
    .din23_WIDTH( 7 ),
    .din24_WIDTH( 7 ),
    .din25_WIDTH( 7 ),
    .din26_WIDTH( 7 ),
    .din27_WIDTH( 7 ),
    .din28_WIDTH( 7 ),
    .din29_WIDTH( 7 ),
    .din30_WIDTH( 7 ),
    .din31_WIDTH( 7 ),
    .din32_WIDTH( 7 ),
    .din33_WIDTH( 7 ),
    .din34_WIDTH( 7 ),
    .din35_WIDTH( 7 ),
    .din36_WIDTH( 7 ),
    .din37_WIDTH( 7 ),
    .din38_WIDTH( 7 ),
    .din39_WIDTH( 7 ),
    .din40_WIDTH( 7 ),
    .din41_WIDTH( 7 ),
    .din42_WIDTH( 7 ),
    .din43_WIDTH( 7 ),
    .din44_WIDTH( 7 ),
    .din45_WIDTH( 7 ),
    .din46_WIDTH( 7 ),
    .din47_WIDTH( 7 ),
    .din48_WIDTH( 7 ),
    .din49_WIDTH( 7 ),
    .din50_WIDTH( 7 ),
    .din51_WIDTH( 7 ),
    .din52_WIDTH( 7 ),
    .din53_WIDTH( 7 ),
    .din54_WIDTH( 7 ),
    .din55_WIDTH( 7 ),
    .din56_WIDTH( 7 ),
    .din57_WIDTH( 7 ),
    .din58_WIDTH( 7 ),
    .din59_WIDTH( 7 ),
    .din60_WIDTH( 7 ),
    .din61_WIDTH( 7 ),
    .din62_WIDTH( 7 ),
    .din63_WIDTH( 7 ),
    .din64_WIDTH( 6 ),
    .dout_WIDTH( 7 ))
myproject_axi_muxibs_U235(
    .din0(tmp_9_fu_1746_p1),
    .din1(tmp_9_fu_1746_p2),
    .din2(tmp_9_fu_1746_p3),
    .din3(tmp_9_fu_1746_p4),
    .din4(tmp_9_fu_1746_p5),
    .din5(tmp_9_fu_1746_p6),
    .din6(tmp_9_fu_1746_p7),
    .din7(tmp_9_fu_1746_p8),
    .din8(tmp_9_fu_1746_p9),
    .din9(tmp_9_fu_1746_p10),
    .din10(tmp_9_fu_1746_p11),
    .din11(tmp_9_fu_1746_p12),
    .din12(tmp_9_fu_1746_p13),
    .din13(tmp_9_fu_1746_p14),
    .din14(tmp_9_fu_1746_p15),
    .din15(tmp_9_fu_1746_p16),
    .din16(tmp_9_fu_1746_p17),
    .din17(tmp_9_fu_1746_p18),
    .din18(tmp_9_fu_1746_p19),
    .din19(tmp_9_fu_1746_p20),
    .din20(tmp_9_fu_1746_p21),
    .din21(tmp_9_fu_1746_p22),
    .din22(tmp_9_fu_1746_p23),
    .din23(tmp_9_fu_1746_p24),
    .din24(tmp_9_fu_1746_p25),
    .din25(tmp_9_fu_1746_p26),
    .din26(tmp_9_fu_1746_p27),
    .din27(tmp_9_fu_1746_p28),
    .din28(tmp_9_fu_1746_p29),
    .din29(tmp_9_fu_1746_p30),
    .din30(tmp_9_fu_1746_p31),
    .din31(tmp_9_fu_1746_p32),
    .din32(tmp_9_fu_1746_p33),
    .din33(tmp_9_fu_1746_p34),
    .din34(tmp_9_fu_1746_p35),
    .din35(tmp_9_fu_1746_p36),
    .din36(tmp_9_fu_1746_p37),
    .din37(tmp_9_fu_1746_p38),
    .din38(tmp_9_fu_1746_p39),
    .din39(tmp_9_fu_1746_p40),
    .din40(tmp_9_fu_1746_p41),
    .din41(tmp_9_fu_1746_p42),
    .din42(tmp_9_fu_1746_p43),
    .din43(tmp_9_fu_1746_p44),
    .din44(tmp_9_fu_1746_p45),
    .din45(tmp_9_fu_1746_p46),
    .din46(tmp_9_fu_1746_p47),
    .din47(tmp_9_fu_1746_p48),
    .din48(tmp_9_fu_1746_p49),
    .din49(tmp_9_fu_1746_p50),
    .din50(tmp_9_fu_1746_p51),
    .din51(tmp_9_fu_1746_p52),
    .din52(tmp_9_fu_1746_p53),
    .din53(tmp_9_fu_1746_p54),
    .din54(tmp_9_fu_1746_p55),
    .din55(tmp_9_fu_1746_p56),
    .din56(tmp_9_fu_1746_p57),
    .din57(tmp_9_fu_1746_p58),
    .din58(tmp_9_fu_1746_p59),
    .din59(tmp_9_fu_1746_p60),
    .din60(tmp_9_fu_1746_p61),
    .din61(tmp_9_fu_1746_p62),
    .din62(tmp_9_fu_1746_p63),
    .din63(tmp_9_fu_1746_p64),
    .din64(ap_phi_mux_w_index69_phi_fu_1032_p6),
    .dout(tmp_9_fu_1746_p66)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_0_067_reg_1042 <= acc_0_V_fu_2825_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_0_067_reg_1042 <= 16'd96;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_10_047_reg_1182 <= acc_10_V_fu_2925_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_10_047_reg_1182 <= 16'd96;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_11_045_reg_1196 <= acc_11_V_fu_2935_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_11_045_reg_1196 <= 16'd64;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_12_043_reg_1210 <= acc_12_V_fu_2945_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_12_043_reg_1210 <= 16'd192;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_13_041_reg_1224 <= acc_13_V_fu_2955_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_13_041_reg_1224 <= 16'd64;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_14_039_reg_1238 <= acc_14_V_fu_2965_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_14_039_reg_1238 <= 16'd32;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_15_037_reg_1252 <= acc_15_V_fu_2975_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_15_037_reg_1252 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_16_035_reg_1266 <= acc_16_V_fu_2985_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_16_035_reg_1266 <= 16'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_17_033_reg_1280 <= acc_17_V_fu_2995_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_17_033_reg_1280 <= 16'd224;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_18_031_reg_1294 <= acc_18_V_fu_3005_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_18_031_reg_1294 <= 16'd65472;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_19_029_reg_1308 <= acc_19_V_fu_3015_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_19_029_reg_1308 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_1_065_reg_1056 <= acc_1_V_fu_2835_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_1_065_reg_1056 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_20_027_reg_1322 <= acc_20_V_fu_3025_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_20_027_reg_1322 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_21_025_reg_1336 <= acc_21_V_fu_3035_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_21_025_reg_1336 <= 16'd96;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_22_023_reg_1350 <= acc_22_V_fu_3045_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_22_023_reg_1350 <= 16'd65344;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_23_021_reg_1364 <= acc_23_V_fu_3055_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_23_021_reg_1364 <= 16'd256;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_24_019_reg_1378 <= acc_24_V_fu_3065_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_24_019_reg_1378 <= 16'd32;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_25_017_reg_1392 <= acc_25_V_fu_3075_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_25_017_reg_1392 <= 16'd64;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_26_015_reg_1406 <= acc_26_V_fu_3085_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_26_015_reg_1406 <= 16'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_27_013_reg_1420 <= acc_27_V_fu_3095_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_27_013_reg_1420 <= 16'd64;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_28_011_reg_1434 <= acc_28_V_fu_3105_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_28_011_reg_1434 <= 16'd128;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_29_09_reg_1448 <= acc_29_V_fu_3115_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_29_09_reg_1448 <= 16'd32;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_2_063_reg_1070 <= acc_2_V_fu_2845_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_2_063_reg_1070 <= 16'd288;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_30_07_reg_1462 <= acc_30_V_fu_3125_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_30_07_reg_1462 <= 16'd160;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_31_05_reg_1476 <= acc_31_V_fu_3135_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_31_05_reg_1476 <= 16'd96;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_3_061_reg_1084 <= acc_3_V_fu_2855_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_3_061_reg_1084 <= 16'd65312;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_4_059_reg_1098 <= acc_4_V_fu_2865_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_4_059_reg_1098 <= 16'd64;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_5_057_reg_1112 <= acc_5_V_fu_2875_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_5_057_reg_1112 <= 16'd32;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_6_055_reg_1126 <= acc_6_V_fu_2885_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_6_055_reg_1126 <= 16'd32;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_7_053_reg_1140 <= acc_7_V_fu_2895_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_7_053_reg_1140 <= 16'd65472;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_8_051_reg_1154 <= acc_8_V_fu_2905_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_8_051_reg_1154 <= 16'd160;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        acc_V_9_049_reg_1168 <= acc_9_V_fu_2915_p2;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        acc_V_9_049_reg_1168 <= 16'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index69_reg_1028 <= w_index_reg_3154;
    end else if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | (~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1)))) begin
        w_index69_reg_1028 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln64_reg_3159 <= icmp_ln64_fu_1891_p2;
        icmp_ln64_reg_3159_pp0_iter1_reg <= icmp_ln64_reg_3159;
        tmp_10_reg_3213 <= {{w5_V_q0[76:70]}};
        tmp_11_reg_3218 <= {{w5_V_q0[83:77]}};
        tmp_12_reg_3223 <= {{w5_V_q0[90:84]}};
        tmp_13_reg_3228 <= {{w5_V_q0[97:91]}};
        tmp_14_reg_3233 <= {{w5_V_q0[104:98]}};
        tmp_15_reg_3238 <= {{w5_V_q0[111:105]}};
        tmp_16_reg_3243 <= {{w5_V_q0[118:112]}};
        tmp_17_reg_3248 <= {{w5_V_q0[125:119]}};
        tmp_18_reg_3253 <= {{w5_V_q0[132:126]}};
        tmp_19_reg_3258 <= {{w5_V_q0[139:133]}};
        tmp_1_reg_3173 <= {{w5_V_q0[20:14]}};
        tmp_20_reg_3263 <= {{w5_V_q0[146:140]}};
        tmp_21_reg_3268 <= {{w5_V_q0[153:147]}};
        tmp_22_reg_3273 <= {{w5_V_q0[160:154]}};
        tmp_23_reg_3278 <= {{w5_V_q0[167:161]}};
        tmp_24_reg_3283 <= {{w5_V_q0[174:168]}};
        tmp_25_reg_3288 <= {{w5_V_q0[181:175]}};
        tmp_26_reg_3293 <= {{w5_V_q0[188:182]}};
        tmp_27_reg_3298 <= {{w5_V_q0[195:189]}};
        tmp_28_reg_3303 <= {{w5_V_q0[202:196]}};
        tmp_29_reg_3308 <= {{w5_V_q0[209:203]}};
        tmp_2_reg_3178 <= {{w5_V_q0[27:21]}};
        tmp_30_reg_3313 <= {{w5_V_q0[216:210]}};
        tmp_31_reg_3318 <= {{w5_V_q0[223:217]}};
        tmp_3_reg_3183 <= {{w5_V_q0[34:28]}};
        tmp_4_reg_3188 <= {{w5_V_q0[41:35]}};
        tmp_5_reg_3193 <= {{w5_V_q0[48:42]}};
        tmp_6_reg_3198 <= {{w5_V_q0[55:49]}};
        tmp_7_reg_3203 <= {{w5_V_q0[62:56]}};
        tmp_8_reg_3208 <= {{w5_V_q0[69:63]}};
        tmp_9_reg_3144 <= tmp_9_fu_1746_p66;
        tmp_9_reg_3144_pp0_iter1_reg <= tmp_9_reg_3144;
        tmp_s_reg_3168 <= {{w5_V_q0[13:7]}};
        trunc_ln76_reg_3163 <= trunc_ln76_fu_1897_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        icmp_ln64_reg_3159_pp0_iter2_reg <= icmp_ln64_reg_3159_pp0_iter1_reg;
        trunc_ln708_110_reg_3333 <= {{mul_ln1118_21_fu_2255_p2[13:2]}};
        trunc_ln708_111_reg_3338 <= {{mul_ln1118_22_fu_2274_p2[13:2]}};
        trunc_ln708_112_reg_3343 <= {{mul_ln1118_23_fu_2293_p2[13:2]}};
        trunc_ln708_113_reg_3348 <= {{mul_ln1118_24_fu_2312_p2[13:2]}};
        trunc_ln708_114_reg_3353 <= {{mul_ln1118_25_fu_2331_p2[13:2]}};
        trunc_ln708_115_reg_3358 <= {{mul_ln1118_26_fu_2350_p2[13:2]}};
        trunc_ln708_116_reg_3363 <= {{mul_ln1118_27_fu_2369_p2[13:2]}};
        trunc_ln708_117_reg_3368 <= {{mul_ln1118_28_fu_2388_p2[13:2]}};
        trunc_ln708_118_reg_3373 <= {{mul_ln1118_29_fu_2407_p2[13:2]}};
        trunc_ln708_119_reg_3378 <= {{mul_ln1118_30_fu_2426_p2[13:2]}};
        trunc_ln708_120_reg_3383 <= {{mul_ln1118_31_fu_2445_p2[13:2]}};
        trunc_ln708_121_reg_3388 <= {{mul_ln1118_32_fu_2464_p2[13:2]}};
        trunc_ln708_122_reg_3393 <= {{mul_ln1118_33_fu_2483_p2[13:2]}};
        trunc_ln708_123_reg_3398 <= {{mul_ln1118_34_fu_2502_p2[13:2]}};
        trunc_ln708_124_reg_3403 <= {{mul_ln1118_35_fu_2521_p2[13:2]}};
        trunc_ln708_125_reg_3408 <= {{mul_ln1118_36_fu_2540_p2[13:2]}};
        trunc_ln708_126_reg_3413 <= {{mul_ln1118_37_fu_2559_p2[13:2]}};
        trunc_ln708_127_reg_3418 <= {{mul_ln1118_38_fu_2578_p2[13:2]}};
        trunc_ln708_128_reg_3423 <= {{mul_ln1118_39_fu_2597_p2[13:2]}};
        trunc_ln708_129_reg_3428 <= {{mul_ln1118_40_fu_2616_p2[13:2]}};
        trunc_ln708_130_reg_3433 <= {{mul_ln1118_41_fu_2635_p2[13:2]}};
        trunc_ln708_131_reg_3438 <= {{mul_ln1118_42_fu_2654_p2[13:2]}};
        trunc_ln708_132_reg_3443 <= {{mul_ln1118_43_fu_2673_p2[13:2]}};
        trunc_ln708_133_reg_3448 <= {{mul_ln1118_44_fu_2692_p2[13:2]}};
        trunc_ln708_134_reg_3453 <= {{mul_ln1118_45_fu_2711_p2[13:2]}};
        trunc_ln708_135_reg_3458 <= {{mul_ln1118_46_fu_2730_p2[13:2]}};
        trunc_ln708_136_reg_3463 <= {{mul_ln1118_47_fu_2749_p2[13:2]}};
        trunc_ln708_137_reg_3468 <= {{mul_ln1118_48_fu_2768_p2[13:2]}};
        trunc_ln708_138_reg_3473 <= {{mul_ln1118_49_fu_2787_p2[13:2]}};
        trunc_ln708_139_reg_3478 <= {{mul_ln1118_50_fu_2806_p2[13:2]}};
        trunc_ln708_s_reg_3328 <= {{mul_ln1118_20_fu_2236_p2[13:2]}};
        trunc_ln_reg_3323 <= {{mul_ln1118_fu_2217_p2[13:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w_index_reg_3154 <= w_index_fu_1885_p2;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to2 = 1'b1;
    end else begin
        ap_idle_pp0_0to2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_477)) begin
        if ((icmp_ln64_reg_3159 == 1'd1)) begin
            ap_phi_mux_w_index69_phi_fu_1032_p6 = 6'd0;
        end else if ((icmp_ln64_reg_3159 == 1'd0)) begin
            ap_phi_mux_w_index69_phi_fu_1032_p6 = w_index_reg_3154;
        end else begin
            ap_phi_mux_w_index69_phi_fu_1032_p6 = w_index69_reg_1028;
        end
    end else begin
        ap_phi_mux_w_index69_phi_fu_1032_p6 = w_index69_reg_1028;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_fu_1891_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to2 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_0_V_ap_vld = 1'b1;
    end else begin
        res_0_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_10_V_ap_vld = 1'b1;
    end else begin
        res_10_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_11_V_ap_vld = 1'b1;
    end else begin
        res_11_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_12_V_ap_vld = 1'b1;
    end else begin
        res_12_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_13_V_ap_vld = 1'b1;
    end else begin
        res_13_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_14_V_ap_vld = 1'b1;
    end else begin
        res_14_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_15_V_ap_vld = 1'b1;
    end else begin
        res_15_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_16_V_ap_vld = 1'b1;
    end else begin
        res_16_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_17_V_ap_vld = 1'b1;
    end else begin
        res_17_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_18_V_ap_vld = 1'b1;
    end else begin
        res_18_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_19_V_ap_vld = 1'b1;
    end else begin
        res_19_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_1_V_ap_vld = 1'b1;
    end else begin
        res_1_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_20_V_ap_vld = 1'b1;
    end else begin
        res_20_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_21_V_ap_vld = 1'b1;
    end else begin
        res_21_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_22_V_ap_vld = 1'b1;
    end else begin
        res_22_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_23_V_ap_vld = 1'b1;
    end else begin
        res_23_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_24_V_ap_vld = 1'b1;
    end else begin
        res_24_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_25_V_ap_vld = 1'b1;
    end else begin
        res_25_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_26_V_ap_vld = 1'b1;
    end else begin
        res_26_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_27_V_ap_vld = 1'b1;
    end else begin
        res_27_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_28_V_ap_vld = 1'b1;
    end else begin
        res_28_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_29_V_ap_vld = 1'b1;
    end else begin
        res_29_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_2_V_ap_vld = 1'b1;
    end else begin
        res_2_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_30_V_ap_vld = 1'b1;
    end else begin
        res_30_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_31_V_ap_vld = 1'b1;
    end else begin
        res_31_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_3_V_ap_vld = 1'b1;
    end else begin
        res_3_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_4_V_ap_vld = 1'b1;
    end else begin
        res_4_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_5_V_ap_vld = 1'b1;
    end else begin
        res_5_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_6_V_ap_vld = 1'b1;
    end else begin
        res_6_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_7_V_ap_vld = 1'b1;
    end else begin
        res_7_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_8_V_ap_vld = 1'b1;
    end else begin
        res_8_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln64_reg_3159_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        res_9_V_ap_vld = 1'b1;
    end else begin
        res_9_V_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        w5_V_ce0 = 1'b1;
    end else begin
        w5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((ap_reset_idle_pp0 == 1'b0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_reset_idle_pp0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign acc_0_V_fu_2825_p2 = ($signed(sext_ln708_fu_2822_p1) + $signed(acc_V_0_067_reg_1042));

assign acc_10_V_fu_2925_p2 = ($signed(sext_ln708_14_fu_2922_p1) + $signed(acc_V_10_047_reg_1182));

assign acc_11_V_fu_2935_p2 = ($signed(sext_ln708_15_fu_2932_p1) + $signed(acc_V_11_045_reg_1196));

assign acc_12_V_fu_2945_p2 = ($signed(sext_ln708_16_fu_2942_p1) + $signed(acc_V_12_043_reg_1210));

assign acc_13_V_fu_2955_p2 = ($signed(sext_ln708_17_fu_2952_p1) + $signed(acc_V_13_041_reg_1224));

assign acc_14_V_fu_2965_p2 = ($signed(sext_ln708_18_fu_2962_p1) + $signed(acc_V_14_039_reg_1238));

assign acc_15_V_fu_2975_p2 = ($signed(sext_ln708_19_fu_2972_p1) + $signed(acc_V_15_037_reg_1252));

assign acc_16_V_fu_2985_p2 = ($signed(sext_ln708_20_fu_2982_p1) + $signed(acc_V_16_035_reg_1266));

assign acc_17_V_fu_2995_p2 = ($signed(sext_ln708_21_fu_2992_p1) + $signed(acc_V_17_033_reg_1280));

assign acc_18_V_fu_3005_p2 = ($signed(sext_ln708_22_fu_3002_p1) + $signed(acc_V_18_031_reg_1294));

assign acc_19_V_fu_3015_p2 = ($signed(sext_ln708_23_fu_3012_p1) + $signed(acc_V_19_029_reg_1308));

assign acc_1_V_fu_2835_p2 = ($signed(sext_ln708_5_fu_2832_p1) + $signed(acc_V_1_065_reg_1056));

assign acc_20_V_fu_3025_p2 = ($signed(sext_ln708_24_fu_3022_p1) + $signed(acc_V_20_027_reg_1322));

assign acc_21_V_fu_3035_p2 = ($signed(sext_ln708_25_fu_3032_p1) + $signed(acc_V_21_025_reg_1336));

assign acc_22_V_fu_3045_p2 = ($signed(sext_ln708_26_fu_3042_p1) + $signed(acc_V_22_023_reg_1350));

assign acc_23_V_fu_3055_p2 = ($signed(sext_ln708_27_fu_3052_p1) + $signed(acc_V_23_021_reg_1364));

assign acc_24_V_fu_3065_p2 = ($signed(sext_ln708_28_fu_3062_p1) + $signed(acc_V_24_019_reg_1378));

assign acc_25_V_fu_3075_p2 = ($signed(sext_ln708_29_fu_3072_p1) + $signed(acc_V_25_017_reg_1392));

assign acc_26_V_fu_3085_p2 = ($signed(sext_ln708_30_fu_3082_p1) + $signed(acc_V_26_015_reg_1406));

assign acc_27_V_fu_3095_p2 = ($signed(sext_ln708_31_fu_3092_p1) + $signed(acc_V_27_013_reg_1420));

assign acc_28_V_fu_3105_p2 = ($signed(sext_ln708_32_fu_3102_p1) + $signed(acc_V_28_011_reg_1434));

assign acc_29_V_fu_3115_p2 = ($signed(sext_ln708_33_fu_3112_p1) + $signed(acc_V_29_09_reg_1448));

assign acc_2_V_fu_2845_p2 = ($signed(sext_ln708_6_fu_2842_p1) + $signed(acc_V_2_063_reg_1070));

assign acc_30_V_fu_3125_p2 = ($signed(sext_ln708_34_fu_3122_p1) + $signed(acc_V_30_07_reg_1462));

assign acc_31_V_fu_3135_p2 = ($signed(sext_ln708_35_fu_3132_p1) + $signed(acc_V_31_05_reg_1476));

assign acc_3_V_fu_2855_p2 = ($signed(sext_ln708_7_fu_2852_p1) + $signed(acc_V_3_061_reg_1084));

assign acc_4_V_fu_2865_p2 = ($signed(sext_ln708_8_fu_2862_p1) + $signed(acc_V_4_059_reg_1098));

assign acc_5_V_fu_2875_p2 = ($signed(sext_ln708_9_fu_2872_p1) + $signed(acc_V_5_057_reg_1112));

assign acc_6_V_fu_2885_p2 = ($signed(sext_ln708_10_fu_2882_p1) + $signed(acc_V_6_055_reg_1126));

assign acc_7_V_fu_2895_p2 = ($signed(sext_ln708_11_fu_2892_p1) + $signed(acc_V_7_053_reg_1140));

assign acc_8_V_fu_2905_p2 = ($signed(sext_ln708_12_fu_2902_p1) + $signed(acc_V_8_051_reg_1154));

assign acc_9_V_fu_2915_p2 = ($signed(sext_ln708_13_fu_2912_p1) + $signed(acc_V_9_049_reg_1168));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (ap_done_reg == 1'b1);
end

always @ (*) begin
    ap_block_state1 = ((ap_start == 1'b0) | (ap_done_reg == 1'b1));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_477 = ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign icmp_ln64_fu_1891_p2 = ((ap_phi_mux_w_index69_phi_fu_1032_p6 == 6'd63) ? 1'b1 : 1'b0);

assign mul_ln1118_20_fu_2236_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_20_fu_2236_p1 = tmp_s_reg_3168;

assign mul_ln1118_20_fu_2236_p2 = ($signed(mul_ln1118_20_fu_2236_p0) * $signed(mul_ln1118_20_fu_2236_p1));

assign mul_ln1118_21_fu_2255_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_21_fu_2255_p1 = tmp_1_reg_3173;

assign mul_ln1118_21_fu_2255_p2 = ($signed(mul_ln1118_21_fu_2255_p0) * $signed(mul_ln1118_21_fu_2255_p1));

assign mul_ln1118_22_fu_2274_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_22_fu_2274_p1 = tmp_2_reg_3178;

assign mul_ln1118_22_fu_2274_p2 = ($signed(mul_ln1118_22_fu_2274_p0) * $signed(mul_ln1118_22_fu_2274_p1));

assign mul_ln1118_23_fu_2293_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_23_fu_2293_p1 = tmp_3_reg_3183;

assign mul_ln1118_23_fu_2293_p2 = ($signed(mul_ln1118_23_fu_2293_p0) * $signed(mul_ln1118_23_fu_2293_p1));

assign mul_ln1118_24_fu_2312_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_24_fu_2312_p1 = tmp_4_reg_3188;

assign mul_ln1118_24_fu_2312_p2 = ($signed(mul_ln1118_24_fu_2312_p0) * $signed(mul_ln1118_24_fu_2312_p1));

assign mul_ln1118_25_fu_2331_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_25_fu_2331_p1 = tmp_5_reg_3193;

assign mul_ln1118_25_fu_2331_p2 = ($signed(mul_ln1118_25_fu_2331_p0) * $signed(mul_ln1118_25_fu_2331_p1));

assign mul_ln1118_26_fu_2350_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_26_fu_2350_p1 = tmp_6_reg_3198;

assign mul_ln1118_26_fu_2350_p2 = ($signed(mul_ln1118_26_fu_2350_p0) * $signed(mul_ln1118_26_fu_2350_p1));

assign mul_ln1118_27_fu_2369_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_27_fu_2369_p1 = tmp_7_reg_3203;

assign mul_ln1118_27_fu_2369_p2 = ($signed(mul_ln1118_27_fu_2369_p0) * $signed(mul_ln1118_27_fu_2369_p1));

assign mul_ln1118_28_fu_2388_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_28_fu_2388_p1 = tmp_8_reg_3208;

assign mul_ln1118_28_fu_2388_p2 = ($signed(mul_ln1118_28_fu_2388_p0) * $signed(mul_ln1118_28_fu_2388_p1));

assign mul_ln1118_29_fu_2407_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_29_fu_2407_p1 = tmp_10_reg_3213;

assign mul_ln1118_29_fu_2407_p2 = ($signed(mul_ln1118_29_fu_2407_p0) * $signed(mul_ln1118_29_fu_2407_p1));

assign mul_ln1118_30_fu_2426_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_30_fu_2426_p1 = tmp_11_reg_3218;

assign mul_ln1118_30_fu_2426_p2 = ($signed(mul_ln1118_30_fu_2426_p0) * $signed(mul_ln1118_30_fu_2426_p1));

assign mul_ln1118_31_fu_2445_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_31_fu_2445_p1 = tmp_12_reg_3223;

assign mul_ln1118_31_fu_2445_p2 = ($signed(mul_ln1118_31_fu_2445_p0) * $signed(mul_ln1118_31_fu_2445_p1));

assign mul_ln1118_32_fu_2464_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_32_fu_2464_p1 = tmp_13_reg_3228;

assign mul_ln1118_32_fu_2464_p2 = ($signed(mul_ln1118_32_fu_2464_p0) * $signed(mul_ln1118_32_fu_2464_p1));

assign mul_ln1118_33_fu_2483_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_33_fu_2483_p1 = tmp_14_reg_3233;

assign mul_ln1118_33_fu_2483_p2 = ($signed(mul_ln1118_33_fu_2483_p0) * $signed(mul_ln1118_33_fu_2483_p1));

assign mul_ln1118_34_fu_2502_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_34_fu_2502_p1 = tmp_15_reg_3238;

assign mul_ln1118_34_fu_2502_p2 = ($signed(mul_ln1118_34_fu_2502_p0) * $signed(mul_ln1118_34_fu_2502_p1));

assign mul_ln1118_35_fu_2521_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_35_fu_2521_p1 = tmp_16_reg_3243;

assign mul_ln1118_35_fu_2521_p2 = ($signed(mul_ln1118_35_fu_2521_p0) * $signed(mul_ln1118_35_fu_2521_p1));

assign mul_ln1118_36_fu_2540_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_36_fu_2540_p1 = tmp_17_reg_3248;

assign mul_ln1118_36_fu_2540_p2 = ($signed(mul_ln1118_36_fu_2540_p0) * $signed(mul_ln1118_36_fu_2540_p1));

assign mul_ln1118_37_fu_2559_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_37_fu_2559_p1 = tmp_18_reg_3253;

assign mul_ln1118_37_fu_2559_p2 = ($signed(mul_ln1118_37_fu_2559_p0) * $signed(mul_ln1118_37_fu_2559_p1));

assign mul_ln1118_38_fu_2578_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_38_fu_2578_p1 = tmp_19_reg_3258;

assign mul_ln1118_38_fu_2578_p2 = ($signed(mul_ln1118_38_fu_2578_p0) * $signed(mul_ln1118_38_fu_2578_p1));

assign mul_ln1118_39_fu_2597_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_39_fu_2597_p1 = tmp_20_reg_3263;

assign mul_ln1118_39_fu_2597_p2 = ($signed(mul_ln1118_39_fu_2597_p0) * $signed(mul_ln1118_39_fu_2597_p1));

assign mul_ln1118_40_fu_2616_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_40_fu_2616_p1 = tmp_21_reg_3268;

assign mul_ln1118_40_fu_2616_p2 = ($signed(mul_ln1118_40_fu_2616_p0) * $signed(mul_ln1118_40_fu_2616_p1));

assign mul_ln1118_41_fu_2635_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_41_fu_2635_p1 = tmp_22_reg_3273;

assign mul_ln1118_41_fu_2635_p2 = ($signed(mul_ln1118_41_fu_2635_p0) * $signed(mul_ln1118_41_fu_2635_p1));

assign mul_ln1118_42_fu_2654_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_42_fu_2654_p1 = tmp_23_reg_3278;

assign mul_ln1118_42_fu_2654_p2 = ($signed(mul_ln1118_42_fu_2654_p0) * $signed(mul_ln1118_42_fu_2654_p1));

assign mul_ln1118_43_fu_2673_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_43_fu_2673_p1 = tmp_24_reg_3283;

assign mul_ln1118_43_fu_2673_p2 = ($signed(mul_ln1118_43_fu_2673_p0) * $signed(mul_ln1118_43_fu_2673_p1));

assign mul_ln1118_44_fu_2692_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_44_fu_2692_p1 = tmp_25_reg_3288;

assign mul_ln1118_44_fu_2692_p2 = ($signed(mul_ln1118_44_fu_2692_p0) * $signed(mul_ln1118_44_fu_2692_p1));

assign mul_ln1118_45_fu_2711_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_45_fu_2711_p1 = tmp_26_reg_3293;

assign mul_ln1118_45_fu_2711_p2 = ($signed(mul_ln1118_45_fu_2711_p0) * $signed(mul_ln1118_45_fu_2711_p1));

assign mul_ln1118_46_fu_2730_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_46_fu_2730_p1 = tmp_27_reg_3298;

assign mul_ln1118_46_fu_2730_p2 = ($signed(mul_ln1118_46_fu_2730_p0) * $signed(mul_ln1118_46_fu_2730_p1));

assign mul_ln1118_47_fu_2749_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_47_fu_2749_p1 = tmp_28_reg_3303;

assign mul_ln1118_47_fu_2749_p2 = ($signed(mul_ln1118_47_fu_2749_p0) * $signed(mul_ln1118_47_fu_2749_p1));

assign mul_ln1118_48_fu_2768_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_48_fu_2768_p1 = tmp_29_reg_3308;

assign mul_ln1118_48_fu_2768_p2 = ($signed(mul_ln1118_48_fu_2768_p0) * $signed(mul_ln1118_48_fu_2768_p1));

assign mul_ln1118_49_fu_2787_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_49_fu_2787_p1 = tmp_30_reg_3313;

assign mul_ln1118_49_fu_2787_p2 = ($signed(mul_ln1118_49_fu_2787_p0) * $signed(mul_ln1118_49_fu_2787_p1));

assign mul_ln1118_50_fu_2806_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_50_fu_2806_p1 = tmp_31_reg_3318;

assign mul_ln1118_50_fu_2806_p2 = ($signed(mul_ln1118_50_fu_2806_p0) * $signed(mul_ln1118_50_fu_2806_p1));

assign mul_ln1118_fu_2217_p0 = sext_ln1116_fu_2211_p1;

assign mul_ln1118_fu_2217_p1 = trunc_ln76_reg_3163;

assign mul_ln1118_fu_2217_p2 = ($signed(mul_ln1118_fu_2217_p0) * $signed(mul_ln1118_fu_2217_p1));

assign res_0_V = ($signed(sext_ln708_fu_2822_p1) + $signed(acc_V_0_067_reg_1042));

assign res_10_V = ($signed(sext_ln708_14_fu_2922_p1) + $signed(acc_V_10_047_reg_1182));

assign res_11_V = ($signed(sext_ln708_15_fu_2932_p1) + $signed(acc_V_11_045_reg_1196));

assign res_12_V = ($signed(sext_ln708_16_fu_2942_p1) + $signed(acc_V_12_043_reg_1210));

assign res_13_V = ($signed(sext_ln708_17_fu_2952_p1) + $signed(acc_V_13_041_reg_1224));

assign res_14_V = ($signed(sext_ln708_18_fu_2962_p1) + $signed(acc_V_14_039_reg_1238));

assign res_15_V = ($signed(sext_ln708_19_fu_2972_p1) + $signed(acc_V_15_037_reg_1252));

assign res_16_V = ($signed(sext_ln708_20_fu_2982_p1) + $signed(acc_V_16_035_reg_1266));

assign res_17_V = ($signed(sext_ln708_21_fu_2992_p1) + $signed(acc_V_17_033_reg_1280));

assign res_18_V = ($signed(sext_ln708_22_fu_3002_p1) + $signed(acc_V_18_031_reg_1294));

assign res_19_V = ($signed(sext_ln708_23_fu_3012_p1) + $signed(acc_V_19_029_reg_1308));

assign res_1_V = ($signed(sext_ln708_5_fu_2832_p1) + $signed(acc_V_1_065_reg_1056));

assign res_20_V = ($signed(sext_ln708_24_fu_3022_p1) + $signed(acc_V_20_027_reg_1322));

assign res_21_V = ($signed(sext_ln708_25_fu_3032_p1) + $signed(acc_V_21_025_reg_1336));

assign res_22_V = ($signed(sext_ln708_26_fu_3042_p1) + $signed(acc_V_22_023_reg_1350));

assign res_23_V = ($signed(sext_ln708_27_fu_3052_p1) + $signed(acc_V_23_021_reg_1364));

assign res_24_V = ($signed(sext_ln708_28_fu_3062_p1) + $signed(acc_V_24_019_reg_1378));

assign res_25_V = ($signed(sext_ln708_29_fu_3072_p1) + $signed(acc_V_25_017_reg_1392));

assign res_26_V = ($signed(sext_ln708_30_fu_3082_p1) + $signed(acc_V_26_015_reg_1406));

assign res_27_V = ($signed(sext_ln708_31_fu_3092_p1) + $signed(acc_V_27_013_reg_1420));

assign res_28_V = ($signed(sext_ln708_32_fu_3102_p1) + $signed(acc_V_28_011_reg_1434));

assign res_29_V = ($signed(sext_ln708_33_fu_3112_p1) + $signed(acc_V_29_09_reg_1448));

assign res_2_V = ($signed(sext_ln708_6_fu_2842_p1) + $signed(acc_V_2_063_reg_1070));

assign res_30_V = ($signed(sext_ln708_34_fu_3122_p1) + $signed(acc_V_30_07_reg_1462));

assign res_31_V = ($signed(sext_ln708_35_fu_3132_p1) + $signed(acc_V_31_05_reg_1476));

assign res_3_V = ($signed(sext_ln708_7_fu_2852_p1) + $signed(acc_V_3_061_reg_1084));

assign res_4_V = ($signed(sext_ln708_8_fu_2862_p1) + $signed(acc_V_4_059_reg_1098));

assign res_5_V = ($signed(sext_ln708_9_fu_2872_p1) + $signed(acc_V_5_057_reg_1112));

assign res_6_V = ($signed(sext_ln708_10_fu_2882_p1) + $signed(acc_V_6_055_reg_1126));

assign res_7_V = ($signed(sext_ln708_11_fu_2892_p1) + $signed(acc_V_7_053_reg_1140));

assign res_8_V = ($signed(sext_ln708_12_fu_2902_p1) + $signed(acc_V_8_051_reg_1154));

assign res_9_V = ($signed(sext_ln708_13_fu_2912_p1) + $signed(acc_V_9_049_reg_1168));

assign sext_ln1116_fu_2211_p1 = $signed(tmp_9_reg_3144_pp0_iter1_reg);

assign sext_ln708_10_fu_2882_p1 = $signed(trunc_ln708_114_reg_3353);

assign sext_ln708_11_fu_2892_p1 = $signed(trunc_ln708_115_reg_3358);

assign sext_ln708_12_fu_2902_p1 = $signed(trunc_ln708_116_reg_3363);

assign sext_ln708_13_fu_2912_p1 = $signed(trunc_ln708_117_reg_3368);

assign sext_ln708_14_fu_2922_p1 = $signed(trunc_ln708_118_reg_3373);

assign sext_ln708_15_fu_2932_p1 = $signed(trunc_ln708_119_reg_3378);

assign sext_ln708_16_fu_2942_p1 = $signed(trunc_ln708_120_reg_3383);

assign sext_ln708_17_fu_2952_p1 = $signed(trunc_ln708_121_reg_3388);

assign sext_ln708_18_fu_2962_p1 = $signed(trunc_ln708_122_reg_3393);

assign sext_ln708_19_fu_2972_p1 = $signed(trunc_ln708_123_reg_3398);

assign sext_ln708_20_fu_2982_p1 = $signed(trunc_ln708_124_reg_3403);

assign sext_ln708_21_fu_2992_p1 = $signed(trunc_ln708_125_reg_3408);

assign sext_ln708_22_fu_3002_p1 = $signed(trunc_ln708_126_reg_3413);

assign sext_ln708_23_fu_3012_p1 = $signed(trunc_ln708_127_reg_3418);

assign sext_ln708_24_fu_3022_p1 = $signed(trunc_ln708_128_reg_3423);

assign sext_ln708_25_fu_3032_p1 = $signed(trunc_ln708_129_reg_3428);

assign sext_ln708_26_fu_3042_p1 = $signed(trunc_ln708_130_reg_3433);

assign sext_ln708_27_fu_3052_p1 = $signed(trunc_ln708_131_reg_3438);

assign sext_ln708_28_fu_3062_p1 = $signed(trunc_ln708_132_reg_3443);

assign sext_ln708_29_fu_3072_p1 = $signed(trunc_ln708_133_reg_3448);

assign sext_ln708_30_fu_3082_p1 = $signed(trunc_ln708_134_reg_3453);

assign sext_ln708_31_fu_3092_p1 = $signed(trunc_ln708_135_reg_3458);

assign sext_ln708_32_fu_3102_p1 = $signed(trunc_ln708_136_reg_3463);

assign sext_ln708_33_fu_3112_p1 = $signed(trunc_ln708_137_reg_3468);

assign sext_ln708_34_fu_3122_p1 = $signed(trunc_ln708_138_reg_3473);

assign sext_ln708_35_fu_3132_p1 = $signed(trunc_ln708_139_reg_3478);

assign sext_ln708_5_fu_2832_p1 = $signed(trunc_ln708_s_reg_3328);

assign sext_ln708_6_fu_2842_p1 = $signed(trunc_ln708_110_reg_3333);

assign sext_ln708_7_fu_2852_p1 = $signed(trunc_ln708_111_reg_3338);

assign sext_ln708_8_fu_2862_p1 = $signed(trunc_ln708_112_reg_3343);

assign sext_ln708_9_fu_2872_p1 = $signed(trunc_ln708_113_reg_3348);

assign sext_ln708_fu_2822_p1 = $signed(trunc_ln_reg_3323);

assign tmp_9_fu_1746_p1 = data_0_V;

assign tmp_9_fu_1746_p10 = data_9_V;

assign tmp_9_fu_1746_p11 = data_10_V;

assign tmp_9_fu_1746_p12 = data_11_V;

assign tmp_9_fu_1746_p13 = data_12_V;

assign tmp_9_fu_1746_p14 = data_13_V;

assign tmp_9_fu_1746_p15 = data_14_V;

assign tmp_9_fu_1746_p16 = data_15_V;

assign tmp_9_fu_1746_p17 = data_16_V;

assign tmp_9_fu_1746_p18 = data_17_V;

assign tmp_9_fu_1746_p19 = data_18_V;

assign tmp_9_fu_1746_p2 = data_1_V;

assign tmp_9_fu_1746_p20 = data_19_V;

assign tmp_9_fu_1746_p21 = data_20_V;

assign tmp_9_fu_1746_p22 = data_21_V;

assign tmp_9_fu_1746_p23 = data_22_V;

assign tmp_9_fu_1746_p24 = data_23_V;

assign tmp_9_fu_1746_p25 = data_24_V;

assign tmp_9_fu_1746_p26 = data_25_V;

assign tmp_9_fu_1746_p27 = data_26_V;

assign tmp_9_fu_1746_p28 = data_27_V;

assign tmp_9_fu_1746_p29 = data_28_V;

assign tmp_9_fu_1746_p3 = data_2_V;

assign tmp_9_fu_1746_p30 = data_29_V;

assign tmp_9_fu_1746_p31 = data_30_V;

assign tmp_9_fu_1746_p32 = data_31_V;

assign tmp_9_fu_1746_p33 = data_32_V;

assign tmp_9_fu_1746_p34 = data_33_V;

assign tmp_9_fu_1746_p35 = data_34_V;

assign tmp_9_fu_1746_p36 = data_35_V;

assign tmp_9_fu_1746_p37 = data_36_V;

assign tmp_9_fu_1746_p38 = data_37_V;

assign tmp_9_fu_1746_p39 = data_38_V;

assign tmp_9_fu_1746_p4 = data_3_V;

assign tmp_9_fu_1746_p40 = data_39_V;

assign tmp_9_fu_1746_p41 = data_40_V;

assign tmp_9_fu_1746_p42 = data_41_V;

assign tmp_9_fu_1746_p43 = data_42_V;

assign tmp_9_fu_1746_p44 = data_43_V;

assign tmp_9_fu_1746_p45 = data_44_V;

assign tmp_9_fu_1746_p46 = data_45_V;

assign tmp_9_fu_1746_p47 = data_46_V;

assign tmp_9_fu_1746_p48 = data_47_V;

assign tmp_9_fu_1746_p49 = data_48_V;

assign tmp_9_fu_1746_p5 = data_4_V;

assign tmp_9_fu_1746_p50 = data_49_V;

assign tmp_9_fu_1746_p51 = data_50_V;

assign tmp_9_fu_1746_p52 = data_51_V;

assign tmp_9_fu_1746_p53 = data_52_V;

assign tmp_9_fu_1746_p54 = data_53_V;

assign tmp_9_fu_1746_p55 = data_54_V;

assign tmp_9_fu_1746_p56 = data_55_V;

assign tmp_9_fu_1746_p57 = data_56_V;

assign tmp_9_fu_1746_p58 = data_57_V;

assign tmp_9_fu_1746_p59 = data_58_V;

assign tmp_9_fu_1746_p6 = data_5_V;

assign tmp_9_fu_1746_p60 = data_59_V;

assign tmp_9_fu_1746_p61 = data_60_V;

assign tmp_9_fu_1746_p62 = data_61_V;

assign tmp_9_fu_1746_p63 = data_62_V;

assign tmp_9_fu_1746_p64 = data_63_V;

assign tmp_9_fu_1746_p7 = data_6_V;

assign tmp_9_fu_1746_p8 = data_7_V;

assign tmp_9_fu_1746_p9 = data_8_V;

assign trunc_ln76_fu_1897_p1 = w5_V_q0[6:0];

assign w5_V_address0 = zext_ln76_fu_1880_p1;

assign w_index_fu_1885_p2 = (6'd1 + ap_phi_mux_w_index69_phi_fu_1032_p6);

assign zext_ln76_fu_1880_p1 = ap_phi_mux_w_index69_phi_fu_1032_p6;

endmodule //dense_resource_1
