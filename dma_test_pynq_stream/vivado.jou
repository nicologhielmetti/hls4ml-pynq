#-----------------------------------------------------------
# Vivado v2019.2 (64-bit)
# SW Build 2708876 on Wed Nov  6 21:39:14 MST 2019
# IP Build 2700528 on Thu Nov  7 00:09:20 MST 2019
# Start of session at: Tue Apr  6 00:26:51 2021
# Process ID: 17790
# Current directory: /home/nicolo/cernbox/pynq_nn_axis/dma_test_pynq_stream
# Command line: vivado dma_test_pynq_v2/dma_test_pynq.xpr
# Log file: /home/nicolo/cernbox/pynq_nn_axis/dma_test_pynq_stream/vivado.log
# Journal file: /home/nicolo/cernbox/pynq_nn_axis/dma_test_pynq_stream/vivado.jou
#-----------------------------------------------------------
start_gui
open_project dma_test_pynq_v2/dma_test_pynq.xpr
open_bd_design {/home/nicolo/cernbox/pynq_nn_axis/dma_test_pynq_stream/dma_test_pynq_v2/dma_test_pynq.srcs/sources_1/bd/design_1/design_1.bd}
update_compile_order -fileset sources_1
delete_bd_objs [get_bd_intf_nets hier_0/Conn1] [get_bd_intf_nets hier_0/axi_dma_0_M_AXIS_MM2S] [get_bd_intf_nets hier_0/myproject_axi_0_out_r] [get_bd_cells hier_0/myproject_axi_0]
set_property  ip_repo_paths  {} [current_project]
update_ip_catalog
set_property  ip_repo_paths  /home/nicolo/cernbox/pynq_nn_axis/dma_test_pynq_stream/cpp_nn_v3/myproject_prj/solution1/impl/ip [current_project]
update_ip_catalog
startgroup
create_bd_cell -type ip -vlnv xilinx.com:hls:myproject_axi:1.0 hier_0/myproject_axi_0
endgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_slave {Auto} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/processing_system7_0/M_AXI_GP0} Slave {/hier_0/myproject_axi_0/s_axi_AXILiteS} ddr_seg {Auto} intc_ip {/ps7_0_axi_periph} master_apm {0}}  [get_bd_intf_pins hier_0/myproject_axi_0/s_axi_AXILiteS]
connect_bd_intf_net [get_bd_intf_pins hier_0/myproject_axi_0/in_r] [get_bd_intf_pins hier_0/axi_dma_0/M_AXIS_MM2S]
connect_bd_intf_net [get_bd_intf_pins hier_0/myproject_axi_0/out_r] [get_bd_intf_pins hier_0/axi_dma_0/S_AXIS_S2MM]
regenerate_bd_layout -hierarchy [get_bd_cells hier_0]
save_bd_design
validate_bd_design
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
set_property  ip_repo_paths  {} [current_project]
update_ip_catalog
update_ip_catalog -rebuild
set_property  ip_repo_paths  /home/nicolo/cernbox/pynq_nn_axis/dma_test_pynq_stream/cpp_nn_v3/myproject_prj/solution1/impl/ip [current_project]
update_ip_catalog
report_ip_status -name ip_status 
upgrade_ip -vlnv xilinx.com:hls:myproject_axi:1.0 [get_ips  design_1_myproject_axi_0_8] -log ip_upgrade.log
export_ip_user_files -of_objects [get_ips design_1_myproject_axi_0_8] -no_script -sync -force -quiet
report_ip_status -name ip_status 
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
report_ip_status -name ip_status 
update_ip_catalog -rebuild
report_ip_status -name ip_status 
upgrade_ip -vlnv xilinx.com:hls:myproject_axi:1.0 [get_ips  design_1_myproject_axi_0_8] -log ip_upgrade.log
export_ip_user_files -of_objects [get_ips design_1_myproject_axi_0_8] -no_script -sync -force -quiet
report_ip_status -name ip_status 
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
report_ip_status -name ip_status 
open_run impl_1; report_utilization -file util.rpt -hierarchical -hierarchical_percentages
open_run impl_1; report_utilization -file util.rpt -hierarchical -hierarchical_percentages
open_bd_design {/home/nicolo/cernbox/pynq_nn_axis/dma_test_pynq_stream/dma_test_pynq_v2/dma_test_pynq.srcs/sources_1/bd/design_1/design_1.bd}
delete_bd_objs [get_bd_intf_nets hier_0/s_axi_AXILiteS1_1] [get_bd_intf_nets hier_0/axi_dma_0_M_AXIS_MM2S] [get_bd_intf_nets hier_0/myproject_axi_0_out_r] [get_bd_cells hier_0/myproject_axi_0]
startgroup
create_bd_cell -type ip -vlnv xilinx.com:hls:myproject_axi:1.0 hier_0/myproject_axi_0
endgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_slave {Auto} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/processing_system7_0/M_AXI_GP0} Slave {/hier_0/myproject_axi_0/s_axi_AXILiteS} ddr_seg {Auto} intc_ip {/ps7_0_axi_periph} master_apm {0}}  [get_bd_intf_pins hier_0/myproject_axi_0/s_axi_AXILiteS]
connect_bd_intf_net [get_bd_intf_pins hier_0/myproject_axi_0/in_r] [get_bd_intf_pins hier_0/axi_dma_0/M_AXIS_MM2S]
connect_bd_intf_net [get_bd_intf_pins hier_0/myproject_axi_0/out_r] [get_bd_intf_pins hier_0/axi_dma_0/S_AXIS_S2MM]
regenerate_bd_layout -hierarchy [get_bd_cells hier_0]
validate_bd_design
save_bd_design
reset_run synth_1
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
reset_run synth_1
report_ip_status -name ip_status 
update_ip_catalog -rebuild -scan_changes
report_ip_status -name ip_status
set_property  ip_repo_paths  {} [current_project]
update_ip_catalog
set_property  ip_repo_paths  /home/nicolo/cernbox/pynq_nn_axis/dma_test_pynq_stream/cpp_nn_v3/myproject_prj/solution1/impl/ip [current_project]
update_ip_catalog
delete_bd_objs [get_bd_intf_nets hier_0/s_axi_AXILiteS1_1] [get_bd_intf_nets hier_0/myproject_axi_0_out_r] [get_bd_intf_nets hier_0/axi_dma_0_M_AXIS_MM2S] [get_bd_cells hier_0/myproject_axi_0]
startgroup
create_bd_cell -type ip -vlnv CERN:hls4ml:myproject_axi:1.0 hier_0/myproject_axi_0
endgroup
apply_bd_automation -rule xilinx.com:bd_rule:axi4 -config { Clk_master {/processing_system7_0/FCLK_CLK0 (100 MHz)} Clk_slave {Auto} Clk_xbar {/processing_system7_0/FCLK_CLK0 (100 MHz)} Master {/processing_system7_0/M_AXI_GP0} Slave {/hier_0/myproject_axi_0/s_axi_AXILiteS} ddr_seg {Auto} intc_ip {/ps7_0_axi_periph} master_apm {0}}  [get_bd_intf_pins hier_0/myproject_axi_0/s_axi_AXILiteS]
connect_bd_intf_net [get_bd_intf_pins hier_0/myproject_axi_0/in_r] [get_bd_intf_pins hier_0/axi_dma_0/M_AXIS_MM2S]
connect_bd_intf_net [get_bd_intf_pins hier_0/myproject_axi_0/out_r] [get_bd_intf_pins hier_0/axi_dma_0/S_AXIS_S2MM]
regenerate_bd_layout -hierarchy [get_bd_cells hier_0]
validate_bd_design
save_bd_design
launch_runs impl_1 -to_step write_bitstream -jobs 6
wait_on_run impl_1
