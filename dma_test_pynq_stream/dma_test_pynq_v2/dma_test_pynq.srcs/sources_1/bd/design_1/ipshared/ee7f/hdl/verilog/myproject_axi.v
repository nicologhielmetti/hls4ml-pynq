// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="myproject_axi,hls_ip_2019_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.670000,HLS_SYN_LAT=172,HLS_SYN_TPT=none,HLS_SYN_MEM=20,HLS_SYN_DSP=21,HLS_SYN_FF=14170,HLS_SYN_LUT=44027,HLS_VERSION=2019_2}" *)

module myproject_axi (
        ap_clk,
        ap_rst_n,
        in_r_TDATA,
        in_r_TVALID,
        in_r_TREADY,
        in_r_TLAST,
        out_r_TDATA,
        out_r_TVALID,
        out_r_TREADY,
        out_r_TLAST,
        s_axi_AXILiteS_AWVALID,
        s_axi_AXILiteS_AWREADY,
        s_axi_AXILiteS_AWADDR,
        s_axi_AXILiteS_WVALID,
        s_axi_AXILiteS_WREADY,
        s_axi_AXILiteS_WDATA,
        s_axi_AXILiteS_WSTRB,
        s_axi_AXILiteS_ARVALID,
        s_axi_AXILiteS_ARREADY,
        s_axi_AXILiteS_ARADDR,
        s_axi_AXILiteS_RVALID,
        s_axi_AXILiteS_RREADY,
        s_axi_AXILiteS_RDATA,
        s_axi_AXILiteS_RRESP,
        s_axi_AXILiteS_BVALID,
        s_axi_AXILiteS_BREADY,
        s_axi_AXILiteS_BRESP
);

parameter    ap_ST_fsm_state1 = 14'd1;
parameter    ap_ST_fsm_state2 = 14'd2;
parameter    ap_ST_fsm_state3 = 14'd4;
parameter    ap_ST_fsm_state4 = 14'd8;
parameter    ap_ST_fsm_state5 = 14'd16;
parameter    ap_ST_fsm_state6 = 14'd32;
parameter    ap_ST_fsm_state7 = 14'd64;
parameter    ap_ST_fsm_state8 = 14'd128;
parameter    ap_ST_fsm_state9 = 14'd256;
parameter    ap_ST_fsm_state10 = 14'd512;
parameter    ap_ST_fsm_state11 = 14'd1024;
parameter    ap_ST_fsm_state12 = 14'd2048;
parameter    ap_ST_fsm_state13 = 14'd4096;
parameter    ap_ST_fsm_state14 = 14'd8192;
parameter    C_S_AXI_AXILITES_DATA_WIDTH = 32;
parameter    C_S_AXI_AXILITES_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXILITES_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [31:0] in_r_TDATA;
input   in_r_TVALID;
output   in_r_TREADY;
input  [0:0] in_r_TLAST;
output  [31:0] out_r_TDATA;
output   out_r_TVALID;
input   out_r_TREADY;
output  [0:0] out_r_TLAST;
input   s_axi_AXILiteS_AWVALID;
output   s_axi_AXILiteS_AWREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_AWADDR;
input   s_axi_AXILiteS_WVALID;
output   s_axi_AXILiteS_WREADY;
input  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_WDATA;
input  [C_S_AXI_AXILITES_WSTRB_WIDTH - 1:0] s_axi_AXILiteS_WSTRB;
input   s_axi_AXILiteS_ARVALID;
output   s_axi_AXILiteS_ARREADY;
input  [C_S_AXI_AXILITES_ADDR_WIDTH - 1:0] s_axi_AXILiteS_ARADDR;
output   s_axi_AXILiteS_RVALID;
input   s_axi_AXILiteS_RREADY;
output  [C_S_AXI_AXILITES_DATA_WIDTH - 1:0] s_axi_AXILiteS_RDATA;
output  [1:0] s_axi_AXILiteS_RRESP;
output   s_axi_AXILiteS_BVALID;
input   s_axi_AXILiteS_BREADY;
output  [1:0] s_axi_AXILiteS_BRESP;

reg in_r_TREADY;

 reg    ap_rst_n_inv;
wire   [31:0] vector_rows;
reg   [31:0] vector_rows_0_data_reg;
reg    vector_rows_0_vld_reg;
reg    vector_rows_0_ack_out;
reg   [31:0] row_count;
reg    in_r_TDATA_blk_n;
(* fsm_encoding = "none" *) reg   [13:0] ap_CS_fsm;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln32_fu_855_p2;
reg    out_r_TDATA_blk_n;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg   [31:0] vector_rows_read_reg_1959;
wire    ap_CS_fsm_state2;
wire   [31:0] select_ln20_fu_841_p3;
reg   [31:0] select_ln20_reg_1964;
wire   [4:0] j_fu_861_p2;
reg   [4:0] j_reg_1972;
wire   [15:0] in_local_V_data_0_V_din;
wire    in_local_V_data_0_V_full_n;
reg    in_local_V_data_0_V_write;
wire   [15:0] in_local_V_data_1_V_din;
wire    in_local_V_data_1_V_full_n;
reg    in_local_V_data_1_V_write;
wire   [15:0] in_local_V_data_2_V_din;
wire    in_local_V_data_2_V_full_n;
reg    in_local_V_data_2_V_write;
wire   [15:0] in_local_V_data_3_V_din;
wire    in_local_V_data_3_V_full_n;
reg    in_local_V_data_3_V_write;
wire   [15:0] in_local_V_data_4_V_din;
wire    in_local_V_data_4_V_full_n;
reg    in_local_V_data_4_V_write;
wire   [15:0] in_local_V_data_5_V_din;
wire    in_local_V_data_5_V_full_n;
reg    in_local_V_data_5_V_write;
wire   [15:0] in_local_V_data_6_V_din;
wire    in_local_V_data_6_V_full_n;
reg    in_local_V_data_6_V_write;
wire   [15:0] in_local_V_data_7_V_din;
wire    in_local_V_data_7_V_full_n;
reg    in_local_V_data_7_V_write;
wire   [15:0] in_local_V_data_8_V_din;
wire    in_local_V_data_8_V_full_n;
reg    in_local_V_data_8_V_write;
wire   [15:0] in_local_V_data_9_V_din;
wire    in_local_V_data_9_V_full_n;
reg    in_local_V_data_9_V_write;
wire   [15:0] in_local_V_data_10_V_din;
wire    in_local_V_data_10_V_full_n;
reg    in_local_V_data_10_V_write;
wire   [15:0] in_local_V_data_11_V_din;
wire    in_local_V_data_11_V_full_n;
reg    in_local_V_data_11_V_write;
wire   [15:0] in_local_V_data_12_V_din;
wire    in_local_V_data_12_V_full_n;
reg    in_local_V_data_12_V_write;
wire   [15:0] in_local_V_data_13_V_din;
wire    in_local_V_data_13_V_full_n;
reg    in_local_V_data_13_V_write;
wire   [15:0] in_local_V_data_14_V_din;
wire    in_local_V_data_14_V_full_n;
reg    in_local_V_data_14_V_write;
wire   [15:0] in_local_V_data_15_V_din;
wire    in_local_V_data_15_V_full_n;
reg    in_local_V_data_15_V_write;
wire    io_acc_block_signal_op123;
reg    ap_block_state3;
reg   [31:0] in_data_tmp_reg_1977;
wire   [3:0] trunc_ln203_fu_872_p1;
reg   [3:0] trunc_ln203_reg_1983;
wire   [0:0] icmp_ln44_1_fu_1046_p2;
reg   [0:0] icmp_ln44_1_reg_1988;
wire   [53:0] man_V_2_fu_1102_p3;
reg   [53:0] man_V_2_reg_1993;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln571_fu_1110_p2;
reg   [0:0] icmp_ln571_reg_1998;
wire   [0:0] icmp_ln581_fu_1122_p2;
reg   [0:0] icmp_ln581_reg_2004;
wire  signed [11:0] sh_amt_fu_1140_p3;
reg  signed [11:0] sh_amt_reg_2010;
wire   [0:0] icmp_ln582_fu_1148_p2;
reg   [0:0] icmp_ln582_reg_2017;
wire   [15:0] trunc_ln583_fu_1154_p1;
reg   [15:0] trunc_ln583_reg_2023;
reg   [7:0] tmp_514_reg_2029;
wire   [15:0] select_ln603_3_fu_1322_p3;
reg   [15:0] select_ln603_3_reg_2034;
wire    ap_CS_fsm_state5;
wire   [255:0] ctype_data_V_fu_1468_p2;
wire    ap_CS_fsm_state6;
reg   [15:0] tmp_data_V_9_0_reg_2044;
wire    ap_CS_fsm_state9;
wire   [15:0] out_local_V_data_0_V_dout;
wire    out_local_V_data_0_V_empty_n;
reg    out_local_V_data_0_V_read;
wire   [15:0] out_local_V_data_1_V_dout;
wire    out_local_V_data_1_V_empty_n;
reg    out_local_V_data_1_V_read;
wire   [15:0] out_local_V_data_2_V_dout;
wire    out_local_V_data_2_V_empty_n;
reg    out_local_V_data_2_V_read;
wire   [15:0] out_local_V_data_3_V_dout;
wire    out_local_V_data_3_V_empty_n;
reg    out_local_V_data_3_V_read;
wire   [15:0] out_local_V_data_4_V_dout;
wire    out_local_V_data_4_V_empty_n;
reg    out_local_V_data_4_V_read;
wire    io_acc_block_signal_op202;
reg   [15:0] tmp_data_V_9_1_reg_2049;
reg   [15:0] tmp_data_V_9_2_reg_2054;
reg   [15:0] tmp_data_V_9_3_reg_2059;
reg   [15:0] tmp_data_V_9_4_reg_2064;
wire   [2:0] j_1_fu_1500_p2;
reg   [2:0] j_1_reg_2072;
wire    ap_CS_fsm_state10;
wire    regslice_both_out_data_U_apdone_blk;
wire   [0:0] last_fu_1512_p2;
reg   [0:0] last_reg_2077;
wire   [0:0] icmp_ln43_fu_1494_p2;
wire   [0:0] icmp_ln935_fu_1528_p2;
reg   [0:0] icmp_ln935_reg_2082;
wire   [0:0] p_Result_9_fu_1534_p3;
reg   [0:0] p_Result_9_reg_2087;
wire   [15:0] tmp_V_4_fu_1548_p3;
reg   [15:0] tmp_V_4_reg_2092;
reg   [31:0] l_fu_1574_p3;
reg   [31:0] l_reg_2100;
wire   [7:0] trunc_ln943_fu_1582_p1;
reg   [7:0] trunc_ln943_reg_2105;
wire   [31:0] sub_ln944_fu_1586_p2;
reg   [31:0] sub_ln944_reg_2110;
wire    ap_CS_fsm_state11;
wire   [31:0] or_ln_fu_1693_p3;
reg   [31:0] or_ln_reg_2116;
wire   [0:0] icmp_ln958_fu_1701_p2;
reg   [0:0] icmp_ln958_reg_2121;
reg   [62:0] m_5_reg_2126;
wire    ap_CS_fsm_state12;
reg   [0:0] tmp_520_reg_2131;
wire    grp_myproject_fu_781_fc1_input_V_data_0_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_1_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_2_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_3_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_4_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_5_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_6_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_7_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_8_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_9_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_10_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_11_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_12_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_13_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_14_V_read;
wire    grp_myproject_fu_781_fc1_input_V_data_15_V_read;
wire   [15:0] grp_myproject_fu_781_layer13_out_V_data_0_V_din;
wire    grp_myproject_fu_781_layer13_out_V_data_0_V_write;
wire   [15:0] grp_myproject_fu_781_layer13_out_V_data_1_V_din;
wire    grp_myproject_fu_781_layer13_out_V_data_1_V_write;
wire   [15:0] grp_myproject_fu_781_layer13_out_V_data_2_V_din;
wire    grp_myproject_fu_781_layer13_out_V_data_2_V_write;
wire   [15:0] grp_myproject_fu_781_layer13_out_V_data_3_V_din;
wire    grp_myproject_fu_781_layer13_out_V_data_3_V_write;
wire   [15:0] grp_myproject_fu_781_layer13_out_V_data_4_V_din;
wire    grp_myproject_fu_781_layer13_out_V_data_4_V_write;
wire    grp_myproject_fu_781_ap_start;
wire    grp_myproject_fu_781_ap_done;
wire    grp_myproject_fu_781_ap_ready;
wire    grp_myproject_fu_781_ap_idle;
reg    grp_myproject_fu_781_ap_continue;
reg   [255:0] ctype_data_V_026_reg_747;
reg   [4:0] j_0_reg_759;
reg   [2:0] j3_0_reg_770;
reg    grp_myproject_fu_781_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
wire    ap_sync_grp_myproject_fu_781_ap_ready;
wire    ap_sync_grp_myproject_fu_781_ap_done;
reg    ap_block_state8_on_subcall_done;
reg    ap_sync_reg_grp_myproject_fu_781_ap_ready;
reg    ap_sync_reg_grp_myproject_fu_781_ap_done;
wire   [15:0] in_local_V_data_0_V_dout;
wire    in_local_V_data_0_V_empty_n;
reg    in_local_V_data_0_V_read;
wire   [15:0] in_local_V_data_1_V_dout;
wire    in_local_V_data_1_V_empty_n;
reg    in_local_V_data_1_V_read;
wire   [15:0] in_local_V_data_2_V_dout;
wire    in_local_V_data_2_V_empty_n;
reg    in_local_V_data_2_V_read;
wire   [15:0] in_local_V_data_3_V_dout;
wire    in_local_V_data_3_V_empty_n;
reg    in_local_V_data_3_V_read;
wire   [15:0] in_local_V_data_4_V_dout;
wire    in_local_V_data_4_V_empty_n;
reg    in_local_V_data_4_V_read;
wire   [15:0] in_local_V_data_5_V_dout;
wire    in_local_V_data_5_V_empty_n;
reg    in_local_V_data_5_V_read;
wire   [15:0] in_local_V_data_6_V_dout;
wire    in_local_V_data_6_V_empty_n;
reg    in_local_V_data_6_V_read;
wire   [15:0] in_local_V_data_7_V_dout;
wire    in_local_V_data_7_V_empty_n;
reg    in_local_V_data_7_V_read;
wire   [15:0] in_local_V_data_8_V_dout;
wire    in_local_V_data_8_V_empty_n;
reg    in_local_V_data_8_V_read;
wire   [15:0] in_local_V_data_9_V_dout;
wire    in_local_V_data_9_V_empty_n;
reg    in_local_V_data_9_V_read;
wire   [15:0] in_local_V_data_10_V_dout;
wire    in_local_V_data_10_V_empty_n;
reg    in_local_V_data_10_V_read;
wire   [15:0] in_local_V_data_11_V_dout;
wire    in_local_V_data_11_V_empty_n;
reg    in_local_V_data_11_V_read;
wire   [15:0] in_local_V_data_12_V_dout;
wire    in_local_V_data_12_V_empty_n;
reg    in_local_V_data_12_V_read;
wire   [15:0] in_local_V_data_13_V_dout;
wire    in_local_V_data_13_V_empty_n;
reg    in_local_V_data_13_V_read;
wire   [15:0] in_local_V_data_14_V_dout;
wire    in_local_V_data_14_V_empty_n;
reg    in_local_V_data_14_V_read;
wire   [15:0] in_local_V_data_15_V_dout;
wire    in_local_V_data_15_V_empty_n;
reg    in_local_V_data_15_V_read;
wire    out_local_V_data_0_V_full_n;
reg    out_local_V_data_0_V_write;
wire    out_local_V_data_1_V_full_n;
reg    out_local_V_data_1_V_write;
wire    out_local_V_data_2_V_full_n;
reg    out_local_V_data_2_V_write;
wire    out_local_V_data_3_V_full_n;
reg    out_local_V_data_3_V_write;
wire    out_local_V_data_4_V_full_n;
reg    out_local_V_data_4_V_write;
wire   [0:0] icmp_ln18_fu_829_p2;
wire   [31:0] add_ln20_fu_835_p2;
wire   [63:0] grp_fu_822_p1;
wire   [63:0] ireg_V_fu_1050_p1;
wire   [10:0] exp_tmp_V_fu_1066_p4;
wire   [51:0] trunc_ln565_fu_1080_p1;
wire   [52:0] tmp_s_fu_1084_p3;
wire   [53:0] p_Result_8_fu_1092_p1;
wire   [0:0] p_Result_7_fu_1058_p3;
wire   [53:0] man_V_1_fu_1096_p2;
wire   [62:0] trunc_ln556_fu_1054_p1;
wire   [11:0] zext_ln461_fu_1076_p1;
wire   [11:0] F2_fu_1116_p2;
wire   [11:0] add_ln581_fu_1128_p2;
wire   [11:0] sub_ln581_fu_1134_p2;
wire  signed [31:0] sext_ln581_1_fu_1171_p1;
wire   [53:0] zext_ln586_fu_1184_p1;
wire   [53:0] ashr_ln586_fu_1188_p2;
wire   [31:0] bitcast_ln696_fu_1197_p1;
wire   [0:0] tmp_515_fu_1200_p3;
wire  signed [15:0] sext_ln581_fu_1168_p1;
wire   [0:0] xor_ln571_fu_1221_p2;
wire   [0:0] or_ln582_fu_1231_p2;
wire   [0:0] xor_ln582_fu_1235_p2;
wire   [0:0] icmp_ln585_fu_1174_p2;
wire   [0:0] and_ln581_fu_1241_p2;
wire   [0:0] xor_ln585_fu_1246_p2;
wire   [0:0] or_ln581_fu_1264_p2;
wire   [0:0] icmp_ln603_fu_1179_p2;
wire   [0:0] xor_ln581_fu_1269_p2;
wire   [0:0] and_ln603_fu_1275_p2;
wire   [15:0] shl_ln604_fu_1216_p2;
wire   [15:0] trunc_ln586_fu_1193_p1;
wire   [0:0] and_ln585_1_fu_1258_p2;
wire   [0:0] and_ln585_fu_1252_p2;
wire   [15:0] select_ln588_fu_1208_p3;
wire   [0:0] and_ln582_fu_1226_p2;
wire   [0:0] or_ln603_fu_1289_p2;
wire   [15:0] select_ln603_fu_1281_p3;
wire   [15:0] select_ln603_1_fu_1295_p3;
wire   [0:0] or_ln603_1_fu_1302_p2;
wire   [0:0] or_ln603_2_fu_1316_p2;
wire   [15:0] select_ln603_2_fu_1308_p3;
wire   [7:0] shl_ln_fu_1330_p3;
wire   [7:0] empty_68_fu_1337_p2;
wire   [8:0] zext_ln203_fu_1349_p1;
wire   [0:0] icmp_ln203_fu_1343_p2;
wire   [8:0] zext_ln203_1_fu_1353_p1;
wire   [8:0] xor_ln203_fu_1360_p2;
wire   [8:0] select_ln203_fu_1366_p3;
wire   [8:0] select_ln203_2_fu_1382_p3;
wire   [8:0] select_ln203_1_fu_1374_p3;
wire   [8:0] xor_ln203_1_fu_1390_p2;
wire   [255:0] zext_ln203_2_fu_1357_p1;
wire   [255:0] zext_ln203_3_fu_1396_p1;
wire   [255:0] shl_ln203_fu_1408_p2;
reg   [255:0] tmp_516_fu_1414_p4;
wire   [255:0] zext_ln203_4_fu_1400_p1;
wire   [255:0] zext_ln203_5_fu_1404_p1;
wire   [255:0] shl_ln203_1_fu_1432_p2;
wire   [255:0] lshr_ln203_fu_1438_p2;
wire   [255:0] and_ln203_fu_1444_p2;
wire   [255:0] xor_ln203_2_fu_1450_p2;
wire   [255:0] select_ln203_3_fu_1424_p3;
wire   [255:0] and_ln203_1_fu_1456_p2;
wire   [255:0] and_ln203_2_fu_1462_p2;
wire   [0:0] icmp_ln44_fu_1506_p2;
wire   [15:0] tmp_V_3_fu_1517_p7;
wire   [15:0] tmp_V_fu_1542_p2;
reg   [15:0] p_Result_1_fu_1556_p4;
wire   [31:0] p_Result_10_fu_1566_p3;
wire   [31:0] lsb_index_fu_1595_p2;
wire   [30:0] tmp_518_fu_1601_p4;
wire   [4:0] trunc_ln947_fu_1617_p1;
wire   [4:0] sub_ln947_fu_1621_p2;
wire   [15:0] zext_ln947_fu_1627_p1;
wire   [15:0] lshr_ln947_fu_1631_p2;
wire   [15:0] p_Result_s_fu_1637_p2;
wire   [0:0] icmp_ln947_fu_1611_p2;
wire   [0:0] icmp_ln947_1_fu_1642_p2;
wire   [0:0] tmp_519_fu_1654_p3;
wire   [15:0] trunc_ln944_fu_1591_p1;
wire   [15:0] add_ln949_fu_1668_p2;
wire   [0:0] p_Result_2_fu_1674_p3;
wire   [0:0] xor_ln949_fu_1662_p2;
wire   [0:0] and_ln949_fu_1681_p2;
wire   [0:0] a_fu_1648_p2;
wire   [0:0] or_ln949_fu_1687_p2;
wire   [31:0] zext_ln957_1_fu_1710_p1;
wire   [31:0] add_ln958_fu_1713_p2;
wire   [31:0] lshr_ln958_fu_1718_p2;
wire   [31:0] sub_ln958_fu_1728_p2;
wire   [63:0] m_fu_1707_p1;
wire   [63:0] zext_ln958_1_fu_1733_p1;
wire   [63:0] zext_ln958_fu_1724_p1;
wire   [63:0] shl_ln958_fu_1737_p2;
wire   [63:0] zext_ln961_fu_1750_p1;
wire   [63:0] m_1_fu_1743_p3;
wire   [63:0] m_2_fu_1753_p2;
wire   [7:0] sub_ln964_fu_1787_p2;
wire   [7:0] select_ln964_fu_1780_p3;
wire   [7:0] add_ln964_fu_1792_p2;
wire   [63:0] m_6_fu_1777_p1;
wire   [8:0] tmp_2_fu_1798_p3;
wire   [63:0] p_Result_11_fu_1805_p5;
wire   [31:0] trunc_ln738_fu_1817_p1;
wire   [31:0] bitcast_ln739_fu_1821_p1;
reg    grp_fu_822_ce;
reg   [13:0] ap_NS_fsm;
wire    regslice_both_in_data_U_apdone_blk;
wire   [31:0] in_r_TDATA_int;
wire    in_r_TVALID_int;
reg    in_r_TREADY_int;
wire    regslice_both_in_data_U_ack_in;
wire    regslice_both_in_last_V_U_apdone_blk;
wire   [0:0] in_r_TLAST_int;
wire    regslice_both_in_last_V_U_vld_out;
wire    regslice_both_in_last_V_U_ack_in;
wire   [31:0] out_r_TDATA_int;
reg    out_r_TVALID_int;
wire    out_r_TREADY_int;
wire    regslice_both_out_data_U_vld_out;
wire    regslice_both_out_last_V_U_apdone_blk;
wire    regslice_both_out_last_V_U_ack_in_dummy;
wire    regslice_both_out_last_V_U_vld_out;

// power-on initialization
initial begin
#0 vector_rows_0_data_reg = 32'd0;
#0 vector_rows_0_vld_reg = 1'b0;
#0 row_count = 32'd0;
#0 ap_CS_fsm = 14'd1;
#0 grp_myproject_fu_781_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_myproject_fu_781_ap_ready = 1'b0;
#0 ap_sync_reg_grp_myproject_fu_781_ap_done = 1'b0;
end

myproject_axi_AXILiteS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXILITES_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXILITES_DATA_WIDTH ))
myproject_axi_AXILiteS_s_axi_U(
    .AWVALID(s_axi_AXILiteS_AWVALID),
    .AWREADY(s_axi_AXILiteS_AWREADY),
    .AWADDR(s_axi_AXILiteS_AWADDR),
    .WVALID(s_axi_AXILiteS_WVALID),
    .WREADY(s_axi_AXILiteS_WREADY),
    .WDATA(s_axi_AXILiteS_WDATA),
    .WSTRB(s_axi_AXILiteS_WSTRB),
    .ARVALID(s_axi_AXILiteS_ARVALID),
    .ARREADY(s_axi_AXILiteS_ARREADY),
    .ARADDR(s_axi_AXILiteS_ARADDR),
    .RVALID(s_axi_AXILiteS_RVALID),
    .RREADY(s_axi_AXILiteS_RREADY),
    .RDATA(s_axi_AXILiteS_RDATA),
    .RRESP(s_axi_AXILiteS_RRESP),
    .BVALID(s_axi_AXILiteS_BVALID),
    .BREADY(s_axi_AXILiteS_BREADY),
    .BRESP(s_axi_AXILiteS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .vector_rows(vector_rows)
);

myproject grp_myproject_fu_781(
    .fc1_input_V_data_0_V_dout(in_local_V_data_0_V_dout),
    .fc1_input_V_data_0_V_empty_n(in_local_V_data_0_V_empty_n),
    .fc1_input_V_data_0_V_read(grp_myproject_fu_781_fc1_input_V_data_0_V_read),
    .fc1_input_V_data_1_V_dout(in_local_V_data_1_V_dout),
    .fc1_input_V_data_1_V_empty_n(in_local_V_data_1_V_empty_n),
    .fc1_input_V_data_1_V_read(grp_myproject_fu_781_fc1_input_V_data_1_V_read),
    .fc1_input_V_data_2_V_dout(in_local_V_data_2_V_dout),
    .fc1_input_V_data_2_V_empty_n(in_local_V_data_2_V_empty_n),
    .fc1_input_V_data_2_V_read(grp_myproject_fu_781_fc1_input_V_data_2_V_read),
    .fc1_input_V_data_3_V_dout(in_local_V_data_3_V_dout),
    .fc1_input_V_data_3_V_empty_n(in_local_V_data_3_V_empty_n),
    .fc1_input_V_data_3_V_read(grp_myproject_fu_781_fc1_input_V_data_3_V_read),
    .fc1_input_V_data_4_V_dout(in_local_V_data_4_V_dout),
    .fc1_input_V_data_4_V_empty_n(in_local_V_data_4_V_empty_n),
    .fc1_input_V_data_4_V_read(grp_myproject_fu_781_fc1_input_V_data_4_V_read),
    .fc1_input_V_data_5_V_dout(in_local_V_data_5_V_dout),
    .fc1_input_V_data_5_V_empty_n(in_local_V_data_5_V_empty_n),
    .fc1_input_V_data_5_V_read(grp_myproject_fu_781_fc1_input_V_data_5_V_read),
    .fc1_input_V_data_6_V_dout(in_local_V_data_6_V_dout),
    .fc1_input_V_data_6_V_empty_n(in_local_V_data_6_V_empty_n),
    .fc1_input_V_data_6_V_read(grp_myproject_fu_781_fc1_input_V_data_6_V_read),
    .fc1_input_V_data_7_V_dout(in_local_V_data_7_V_dout),
    .fc1_input_V_data_7_V_empty_n(in_local_V_data_7_V_empty_n),
    .fc1_input_V_data_7_V_read(grp_myproject_fu_781_fc1_input_V_data_7_V_read),
    .fc1_input_V_data_8_V_dout(in_local_V_data_8_V_dout),
    .fc1_input_V_data_8_V_empty_n(in_local_V_data_8_V_empty_n),
    .fc1_input_V_data_8_V_read(grp_myproject_fu_781_fc1_input_V_data_8_V_read),
    .fc1_input_V_data_9_V_dout(in_local_V_data_9_V_dout),
    .fc1_input_V_data_9_V_empty_n(in_local_V_data_9_V_empty_n),
    .fc1_input_V_data_9_V_read(grp_myproject_fu_781_fc1_input_V_data_9_V_read),
    .fc1_input_V_data_10_V_dout(in_local_V_data_10_V_dout),
    .fc1_input_V_data_10_V_empty_n(in_local_V_data_10_V_empty_n),
    .fc1_input_V_data_10_V_read(grp_myproject_fu_781_fc1_input_V_data_10_V_read),
    .fc1_input_V_data_11_V_dout(in_local_V_data_11_V_dout),
    .fc1_input_V_data_11_V_empty_n(in_local_V_data_11_V_empty_n),
    .fc1_input_V_data_11_V_read(grp_myproject_fu_781_fc1_input_V_data_11_V_read),
    .fc1_input_V_data_12_V_dout(in_local_V_data_12_V_dout),
    .fc1_input_V_data_12_V_empty_n(in_local_V_data_12_V_empty_n),
    .fc1_input_V_data_12_V_read(grp_myproject_fu_781_fc1_input_V_data_12_V_read),
    .fc1_input_V_data_13_V_dout(in_local_V_data_13_V_dout),
    .fc1_input_V_data_13_V_empty_n(in_local_V_data_13_V_empty_n),
    .fc1_input_V_data_13_V_read(grp_myproject_fu_781_fc1_input_V_data_13_V_read),
    .fc1_input_V_data_14_V_dout(in_local_V_data_14_V_dout),
    .fc1_input_V_data_14_V_empty_n(in_local_V_data_14_V_empty_n),
    .fc1_input_V_data_14_V_read(grp_myproject_fu_781_fc1_input_V_data_14_V_read),
    .fc1_input_V_data_15_V_dout(in_local_V_data_15_V_dout),
    .fc1_input_V_data_15_V_empty_n(in_local_V_data_15_V_empty_n),
    .fc1_input_V_data_15_V_read(grp_myproject_fu_781_fc1_input_V_data_15_V_read),
    .layer13_out_V_data_0_V_din(grp_myproject_fu_781_layer13_out_V_data_0_V_din),
    .layer13_out_V_data_0_V_full_n(out_local_V_data_0_V_full_n),
    .layer13_out_V_data_0_V_write(grp_myproject_fu_781_layer13_out_V_data_0_V_write),
    .layer13_out_V_data_1_V_din(grp_myproject_fu_781_layer13_out_V_data_1_V_din),
    .layer13_out_V_data_1_V_full_n(out_local_V_data_1_V_full_n),
    .layer13_out_V_data_1_V_write(grp_myproject_fu_781_layer13_out_V_data_1_V_write),
    .layer13_out_V_data_2_V_din(grp_myproject_fu_781_layer13_out_V_data_2_V_din),
    .layer13_out_V_data_2_V_full_n(out_local_V_data_2_V_full_n),
    .layer13_out_V_data_2_V_write(grp_myproject_fu_781_layer13_out_V_data_2_V_write),
    .layer13_out_V_data_3_V_din(grp_myproject_fu_781_layer13_out_V_data_3_V_din),
    .layer13_out_V_data_3_V_full_n(out_local_V_data_3_V_full_n),
    .layer13_out_V_data_3_V_write(grp_myproject_fu_781_layer13_out_V_data_3_V_write),
    .layer13_out_V_data_4_V_din(grp_myproject_fu_781_layer13_out_V_data_4_V_din),
    .layer13_out_V_data_4_V_full_n(out_local_V_data_4_V_full_n),
    .layer13_out_V_data_4_V_write(grp_myproject_fu_781_layer13_out_V_data_4_V_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_myproject_fu_781_ap_start),
    .ap_done(grp_myproject_fu_781_ap_done),
    .ap_ready(grp_myproject_fu_781_ap_ready),
    .ap_idle(grp_myproject_fu_781_ap_idle),
    .ap_continue(grp_myproject_fu_781_ap_continue)
);

myproject_axi_fpext_32ns_64_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
myproject_axi_fpext_32ns_64_2_1_U1037(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(in_r_TDATA_int),
    .ce(grp_fu_822_ce),
    .dout(grp_fu_822_p1)
);

myproject_axi_mux_53_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 3 ),
    .dout_WIDTH( 16 ))
myproject_axi_mux_53_16_1_1_U1038(
    .din0(tmp_data_V_9_0_reg_2044),
    .din1(tmp_data_V_9_1_reg_2049),
    .din2(tmp_data_V_9_2_reg_2054),
    .din3(tmp_data_V_9_3_reg_2059),
    .din4(tmp_data_V_9_4_reg_2064),
    .din5(j3_0_reg_770),
    .dout(tmp_V_3_fu_1517_p7)
);

fifo_w16_d16_A in_local_V_data_0_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_0_V_din),
    .if_full_n(in_local_V_data_0_V_full_n),
    .if_write(in_local_V_data_0_V_write),
    .if_dout(in_local_V_data_0_V_dout),
    .if_empty_n(in_local_V_data_0_V_empty_n),
    .if_read(in_local_V_data_0_V_read)
);

fifo_w16_d16_A in_local_V_data_1_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_1_V_din),
    .if_full_n(in_local_V_data_1_V_full_n),
    .if_write(in_local_V_data_1_V_write),
    .if_dout(in_local_V_data_1_V_dout),
    .if_empty_n(in_local_V_data_1_V_empty_n),
    .if_read(in_local_V_data_1_V_read)
);

fifo_w16_d16_A in_local_V_data_2_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_2_V_din),
    .if_full_n(in_local_V_data_2_V_full_n),
    .if_write(in_local_V_data_2_V_write),
    .if_dout(in_local_V_data_2_V_dout),
    .if_empty_n(in_local_V_data_2_V_empty_n),
    .if_read(in_local_V_data_2_V_read)
);

fifo_w16_d16_A in_local_V_data_3_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_3_V_din),
    .if_full_n(in_local_V_data_3_V_full_n),
    .if_write(in_local_V_data_3_V_write),
    .if_dout(in_local_V_data_3_V_dout),
    .if_empty_n(in_local_V_data_3_V_empty_n),
    .if_read(in_local_V_data_3_V_read)
);

fifo_w16_d16_A in_local_V_data_4_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_4_V_din),
    .if_full_n(in_local_V_data_4_V_full_n),
    .if_write(in_local_V_data_4_V_write),
    .if_dout(in_local_V_data_4_V_dout),
    .if_empty_n(in_local_V_data_4_V_empty_n),
    .if_read(in_local_V_data_4_V_read)
);

fifo_w16_d16_A in_local_V_data_5_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_5_V_din),
    .if_full_n(in_local_V_data_5_V_full_n),
    .if_write(in_local_V_data_5_V_write),
    .if_dout(in_local_V_data_5_V_dout),
    .if_empty_n(in_local_V_data_5_V_empty_n),
    .if_read(in_local_V_data_5_V_read)
);

fifo_w16_d16_A in_local_V_data_6_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_6_V_din),
    .if_full_n(in_local_V_data_6_V_full_n),
    .if_write(in_local_V_data_6_V_write),
    .if_dout(in_local_V_data_6_V_dout),
    .if_empty_n(in_local_V_data_6_V_empty_n),
    .if_read(in_local_V_data_6_V_read)
);

fifo_w16_d16_A in_local_V_data_7_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_7_V_din),
    .if_full_n(in_local_V_data_7_V_full_n),
    .if_write(in_local_V_data_7_V_write),
    .if_dout(in_local_V_data_7_V_dout),
    .if_empty_n(in_local_V_data_7_V_empty_n),
    .if_read(in_local_V_data_7_V_read)
);

fifo_w16_d16_A in_local_V_data_8_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_8_V_din),
    .if_full_n(in_local_V_data_8_V_full_n),
    .if_write(in_local_V_data_8_V_write),
    .if_dout(in_local_V_data_8_V_dout),
    .if_empty_n(in_local_V_data_8_V_empty_n),
    .if_read(in_local_V_data_8_V_read)
);

fifo_w16_d16_A in_local_V_data_9_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_9_V_din),
    .if_full_n(in_local_V_data_9_V_full_n),
    .if_write(in_local_V_data_9_V_write),
    .if_dout(in_local_V_data_9_V_dout),
    .if_empty_n(in_local_V_data_9_V_empty_n),
    .if_read(in_local_V_data_9_V_read)
);

fifo_w16_d16_A in_local_V_data_10_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_10_V_din),
    .if_full_n(in_local_V_data_10_V_full_n),
    .if_write(in_local_V_data_10_V_write),
    .if_dout(in_local_V_data_10_V_dout),
    .if_empty_n(in_local_V_data_10_V_empty_n),
    .if_read(in_local_V_data_10_V_read)
);

fifo_w16_d16_A in_local_V_data_11_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_11_V_din),
    .if_full_n(in_local_V_data_11_V_full_n),
    .if_write(in_local_V_data_11_V_write),
    .if_dout(in_local_V_data_11_V_dout),
    .if_empty_n(in_local_V_data_11_V_empty_n),
    .if_read(in_local_V_data_11_V_read)
);

fifo_w16_d16_A in_local_V_data_12_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_12_V_din),
    .if_full_n(in_local_V_data_12_V_full_n),
    .if_write(in_local_V_data_12_V_write),
    .if_dout(in_local_V_data_12_V_dout),
    .if_empty_n(in_local_V_data_12_V_empty_n),
    .if_read(in_local_V_data_12_V_read)
);

fifo_w16_d16_A in_local_V_data_13_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_13_V_din),
    .if_full_n(in_local_V_data_13_V_full_n),
    .if_write(in_local_V_data_13_V_write),
    .if_dout(in_local_V_data_13_V_dout),
    .if_empty_n(in_local_V_data_13_V_empty_n),
    .if_read(in_local_V_data_13_V_read)
);

fifo_w16_d16_A in_local_V_data_14_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_14_V_din),
    .if_full_n(in_local_V_data_14_V_full_n),
    .if_write(in_local_V_data_14_V_write),
    .if_dout(in_local_V_data_14_V_dout),
    .if_empty_n(in_local_V_data_14_V_empty_n),
    .if_read(in_local_V_data_14_V_read)
);

fifo_w16_d16_A in_local_V_data_15_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(in_local_V_data_15_V_din),
    .if_full_n(in_local_V_data_15_V_full_n),
    .if_write(in_local_V_data_15_V_write),
    .if_dout(in_local_V_data_15_V_dout),
    .if_empty_n(in_local_V_data_15_V_empty_n),
    .if_read(in_local_V_data_15_V_read)
);

fifo_w16_d5_A out_local_V_data_0_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_myproject_fu_781_layer13_out_V_data_0_V_din),
    .if_full_n(out_local_V_data_0_V_full_n),
    .if_write(out_local_V_data_0_V_write),
    .if_dout(out_local_V_data_0_V_dout),
    .if_empty_n(out_local_V_data_0_V_empty_n),
    .if_read(out_local_V_data_0_V_read)
);

fifo_w16_d5_A out_local_V_data_1_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_myproject_fu_781_layer13_out_V_data_1_V_din),
    .if_full_n(out_local_V_data_1_V_full_n),
    .if_write(out_local_V_data_1_V_write),
    .if_dout(out_local_V_data_1_V_dout),
    .if_empty_n(out_local_V_data_1_V_empty_n),
    .if_read(out_local_V_data_1_V_read)
);

fifo_w16_d5_A out_local_V_data_2_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_myproject_fu_781_layer13_out_V_data_2_V_din),
    .if_full_n(out_local_V_data_2_V_full_n),
    .if_write(out_local_V_data_2_V_write),
    .if_dout(out_local_V_data_2_V_dout),
    .if_empty_n(out_local_V_data_2_V_empty_n),
    .if_read(out_local_V_data_2_V_read)
);

fifo_w16_d5_A out_local_V_data_3_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_myproject_fu_781_layer13_out_V_data_3_V_din),
    .if_full_n(out_local_V_data_3_V_full_n),
    .if_write(out_local_V_data_3_V_write),
    .if_dout(out_local_V_data_3_V_dout),
    .if_empty_n(out_local_V_data_3_V_empty_n),
    .if_read(out_local_V_data_3_V_read)
);

fifo_w16_d5_A out_local_V_data_4_V_fifo_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(grp_myproject_fu_781_layer13_out_V_data_4_V_din),
    .if_full_n(out_local_V_data_4_V_full_n),
    .if_write(out_local_V_data_4_V_write),
    .if_dout(out_local_V_data_4_V_dout),
    .if_empty_n(out_local_V_data_4_V_empty_n),
    .if_read(out_local_V_data_4_V_read)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_in_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TDATA),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_data_U_ack_in),
    .data_out(in_r_TDATA_int),
    .vld_out(in_r_TVALID_int),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_data_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_in_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(in_r_TLAST),
    .vld_in(in_r_TVALID),
    .ack_in(regslice_both_in_last_V_U_ack_in),
    .data_out(in_r_TLAST_int),
    .vld_out(regslice_both_in_last_V_U_vld_out),
    .ack_out(in_r_TREADY_int),
    .apdone_blk(regslice_both_in_last_V_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 32 ))
regslice_both_out_data_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(out_r_TDATA_int),
    .vld_in(out_r_TVALID_int),
    .ack_in(out_r_TREADY_int),
    .data_out(out_r_TDATA),
    .vld_out(regslice_both_out_data_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_data_U_apdone_blk)
);

regslice_both #(
    .DataWidth( 1 ))
regslice_both_out_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(last_reg_2077),
    .vld_in(out_r_TVALID_int),
    .ack_in(regslice_both_out_last_V_U_ack_in_dummy),
    .data_out(out_r_TLAST),
    .vld_out(regslice_both_out_last_V_U_vld_out),
    .ack_out(out_r_TREADY),
    .apdone_blk(regslice_both_out_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_myproject_fu_781_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_sync_reg_grp_myproject_fu_781_ap_done <= 1'b0;
        end else if ((grp_myproject_fu_781_ap_done == 1'b1)) begin
            ap_sync_reg_grp_myproject_fu_781_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_grp_myproject_fu_781_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
            ap_sync_reg_grp_myproject_fu_781_ap_ready <= 1'b0;
        end else if ((grp_myproject_fu_781_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_myproject_fu_781_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_myproject_fu_781_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state7) | ((ap_sync_grp_myproject_fu_781_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state8)))) begin
            grp_myproject_fu_781_ap_start_reg <= 1'b1;
        end else if ((grp_myproject_fu_781_ap_ready == 1'b1)) begin
            grp_myproject_fu_781_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (out_r_TREADY_int == 1'b1))) begin
        j3_0_reg_770 <= j_1_reg_2072;
    end else if (((io_acc_block_signal_op202 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        j3_0_reg_770 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_0_reg_759 <= j_reg_1972;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        j_0_reg_759 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        ctype_data_V_026_reg_747 <= ctype_data_V_fu_1468_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        icmp_ln44_1_reg_1988 <= icmp_ln44_1_fu_1046_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        icmp_ln571_reg_1998 <= icmp_ln571_fu_1110_p2;
        icmp_ln581_reg_2004 <= icmp_ln581_fu_1122_p2;
        icmp_ln582_reg_2017 <= icmp_ln582_fu_1148_p2;
        man_V_2_reg_1993 <= man_V_2_fu_1102_p3;
        sh_amt_reg_2010 <= sh_amt_fu_1140_p3;
        tmp_514_reg_2029 <= {{sh_amt_fu_1140_p3[11:4]}};
        trunc_ln583_reg_2023 <= trunc_ln583_fu_1154_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln43_fu_1494_p2 == 1'd0) & (regslice_both_out_data_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10))) begin
        icmp_ln935_reg_2082 <= icmp_ln935_fu_1528_p2;
        l_reg_2100 <= l_fu_1574_p3;
        last_reg_2077 <= last_fu_1512_p2;
        p_Result_9_reg_2087 <= tmp_V_3_fu_1517_p7[32'd15];
        tmp_V_4_reg_2092 <= tmp_V_4_fu_1548_p3;
        trunc_ln943_reg_2105 <= trunc_ln943_fu_1582_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_2082 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        icmp_ln958_reg_2121 <= icmp_ln958_fu_1701_p2;
        or_ln_reg_2116[0] <= or_ln_fu_1693_p3[0];
        sub_ln944_reg_2110 <= sub_ln944_fu_1586_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        in_data_tmp_reg_1977 <= in_r_TDATA_int;
        trunc_ln203_reg_1983 <= trunc_ln203_fu_872_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((regslice_both_out_data_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10))) begin
        j_1_reg_2072 <= j_1_fu_1500_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (1'b1 == ap_CS_fsm_state3))) begin
        j_reg_1972 <= j_fu_861_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln935_reg_2082 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        m_5_reg_2126 <= {{m_2_fu_1753_p2[63:1]}};
        tmp_520_reg_2131 <= m_2_fu_1753_p2[32'd25];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        row_count <= select_ln20_fu_841_p3;
        select_ln20_reg_1964 <= select_ln20_fu_841_p3;
        vector_rows_read_reg_1959 <= vector_rows_0_data_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        select_ln603_3_reg_2034 <= select_ln603_3_fu_1322_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((io_acc_block_signal_op202 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        tmp_data_V_9_0_reg_2044 <= out_local_V_data_0_V_dout;
        tmp_data_V_9_1_reg_2049 <= out_local_V_data_1_V_dout;
        tmp_data_V_9_2_reg_2054 <= out_local_V_data_2_V_dout;
        tmp_data_V_9_3_reg_2059 <= out_local_V_data_3_V_dout;
        tmp_data_V_9_4_reg_2064 <= out_local_V_data_4_V_dout;
    end
end

always @ (posedge ap_clk) begin
    if ((((vector_rows_0_vld_reg == 1'b0) & (1'b1 == 1'b1)) | ((vector_rows_0_ack_out == 1'b1) & (1'b1 == 1'b1) & (vector_rows_0_vld_reg == 1'b1)))) begin
        vector_rows_0_data_reg <= vector_rows;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (1'b1 == ap_CS_fsm_state3)))) begin
        grp_fu_822_ce = 1'b1;
    end else begin
        grp_fu_822_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_myproject_fu_781_ap_continue = 1'b1;
    end else begin
        grp_myproject_fu_781_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_0_V_read = grp_myproject_fu_781_fc1_input_V_data_0_V_read;
    end else begin
        in_local_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_0_V_write = 1'b1;
    end else begin
        in_local_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_10_V_read = grp_myproject_fu_781_fc1_input_V_data_10_V_read;
    end else begin
        in_local_V_data_10_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_10_V_write = 1'b1;
    end else begin
        in_local_V_data_10_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_11_V_read = grp_myproject_fu_781_fc1_input_V_data_11_V_read;
    end else begin
        in_local_V_data_11_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_11_V_write = 1'b1;
    end else begin
        in_local_V_data_11_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_12_V_read = grp_myproject_fu_781_fc1_input_V_data_12_V_read;
    end else begin
        in_local_V_data_12_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_12_V_write = 1'b1;
    end else begin
        in_local_V_data_12_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_13_V_read = grp_myproject_fu_781_fc1_input_V_data_13_V_read;
    end else begin
        in_local_V_data_13_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_13_V_write = 1'b1;
    end else begin
        in_local_V_data_13_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_14_V_read = grp_myproject_fu_781_fc1_input_V_data_14_V_read;
    end else begin
        in_local_V_data_14_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_14_V_write = 1'b1;
    end else begin
        in_local_V_data_14_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_15_V_read = grp_myproject_fu_781_fc1_input_V_data_15_V_read;
    end else begin
        in_local_V_data_15_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_15_V_write = 1'b1;
    end else begin
        in_local_V_data_15_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_1_V_read = grp_myproject_fu_781_fc1_input_V_data_1_V_read;
    end else begin
        in_local_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_1_V_write = 1'b1;
    end else begin
        in_local_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_2_V_read = grp_myproject_fu_781_fc1_input_V_data_2_V_read;
    end else begin
        in_local_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_2_V_write = 1'b1;
    end else begin
        in_local_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_3_V_read = grp_myproject_fu_781_fc1_input_V_data_3_V_read;
    end else begin
        in_local_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_3_V_write = 1'b1;
    end else begin
        in_local_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_4_V_read = grp_myproject_fu_781_fc1_input_V_data_4_V_read;
    end else begin
        in_local_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_4_V_write = 1'b1;
    end else begin
        in_local_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_5_V_read = grp_myproject_fu_781_fc1_input_V_data_5_V_read;
    end else begin
        in_local_V_data_5_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_5_V_write = 1'b1;
    end else begin
        in_local_V_data_5_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_6_V_read = grp_myproject_fu_781_fc1_input_V_data_6_V_read;
    end else begin
        in_local_V_data_6_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_6_V_write = 1'b1;
    end else begin
        in_local_V_data_6_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_7_V_read = grp_myproject_fu_781_fc1_input_V_data_7_V_read;
    end else begin
        in_local_V_data_7_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_7_V_write = 1'b1;
    end else begin
        in_local_V_data_7_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_8_V_read = grp_myproject_fu_781_fc1_input_V_data_8_V_read;
    end else begin
        in_local_V_data_8_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_8_V_write = 1'b1;
    end else begin
        in_local_V_data_8_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        in_local_V_data_9_V_read = grp_myproject_fu_781_fc1_input_V_data_9_V_read;
    end else begin
        in_local_V_data_9_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        in_local_V_data_9_V_write = 1'b1;
    end else begin
        in_local_V_data_9_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln32_fu_855_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        in_r_TDATA_blk_n = in_r_TVALID_int;
    end else begin
        in_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((in_r_TVALID == 1'b1) & (regslice_both_in_data_U_ack_in == 1'b1))) begin
        in_r_TREADY = 1'b1;
    end else begin
        in_r_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        in_r_TREADY_int = 1'b1;
    end else begin
        in_r_TREADY_int = 1'b0;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op202 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        out_local_V_data_0_V_read = 1'b1;
    end else begin
        out_local_V_data_0_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_local_V_data_0_V_write = grp_myproject_fu_781_layer13_out_V_data_0_V_write;
    end else begin
        out_local_V_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op202 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        out_local_V_data_1_V_read = 1'b1;
    end else begin
        out_local_V_data_1_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_local_V_data_1_V_write = grp_myproject_fu_781_layer13_out_V_data_1_V_write;
    end else begin
        out_local_V_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op202 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        out_local_V_data_2_V_read = 1'b1;
    end else begin
        out_local_V_data_2_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_local_V_data_2_V_write = grp_myproject_fu_781_layer13_out_V_data_2_V_write;
    end else begin
        out_local_V_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op202 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        out_local_V_data_3_V_read = 1'b1;
    end else begin
        out_local_V_data_3_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_local_V_data_3_V_write = grp_myproject_fu_781_layer13_out_V_data_3_V_write;
    end else begin
        out_local_V_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((io_acc_block_signal_op202 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        out_local_V_data_4_V_read = 1'b1;
    end else begin
        out_local_V_data_4_V_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        out_local_V_data_4_V_write = grp_myproject_fu_781_layer13_out_V_data_4_V_write;
    end else begin
        out_local_V_data_4_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        out_r_TDATA_blk_n = out_r_TREADY_int;
    end else begin
        out_r_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) & (out_r_TREADY_int == 1'b1))) begin
        out_r_TVALID_int = 1'b1;
    end else begin
        out_r_TVALID_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((regslice_both_out_data_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln43_fu_1494_p2 == 1'd1)))) begin
        vector_rows_0_ack_out = 1'b1;
    end else begin
        vector_rows_0_ack_out = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if ((~(((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0))) & (icmp_ln32_fu_855_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b0 == ap_block_state8_on_subcall_done) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((io_acc_block_signal_op202 == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((regslice_both_out_data_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (icmp_ln43_fu_1494_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln43_fu_1494_p2 == 1'd0) & (regslice_both_out_data_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (out_r_TREADY_int == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (out_r_TREADY_int == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_1116_p2 = (12'd1075 - zext_ln461_fu_1076_p1);

assign a_fu_1648_p2 = (icmp_ln947_fu_1611_p2 & icmp_ln947_1_fu_1642_p2);

assign add_ln20_fu_835_p2 = (row_count + 32'd1);

assign add_ln581_fu_1128_p2 = ($signed(12'd4086) + $signed(F2_fu_1116_p2));

assign add_ln949_fu_1668_p2 = ($signed(16'd65512) + $signed(trunc_ln944_fu_1591_p1));

assign add_ln958_fu_1713_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_reg_2110));

assign add_ln964_fu_1792_p2 = (sub_ln964_fu_1787_p2 + select_ln964_fu_1780_p3);

assign and_ln203_1_fu_1456_p2 = (xor_ln203_2_fu_1450_p2 & ctype_data_V_026_reg_747);

assign and_ln203_2_fu_1462_p2 = (select_ln203_3_fu_1424_p3 & and_ln203_fu_1444_p2);

assign and_ln203_fu_1444_p2 = (shl_ln203_1_fu_1432_p2 & lshr_ln203_fu_1438_p2);

assign and_ln581_fu_1241_p2 = (xor_ln582_fu_1235_p2 & icmp_ln581_reg_2004);

assign and_ln582_fu_1226_p2 = (xor_ln571_fu_1221_p2 & icmp_ln582_reg_2017);

assign and_ln585_1_fu_1258_p2 = (icmp_ln585_fu_1174_p2 & and_ln581_fu_1241_p2);

assign and_ln585_fu_1252_p2 = (xor_ln585_fu_1246_p2 & and_ln581_fu_1241_p2);

assign and_ln603_fu_1275_p2 = (xor_ln581_fu_1269_p2 & icmp_ln603_fu_1179_p2);

assign and_ln949_fu_1681_p2 = (xor_ln949_fu_1662_p2 & p_Result_2_fu_1674_p3);

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state3 = (((icmp_ln32_fu_855_p2 == 1'd0) & (in_r_TVALID_int == 1'b0)) | ((icmp_ln32_fu_855_p2 == 1'd1) & (io_acc_block_signal_op123 == 1'b0)));
end

always @ (*) begin
    ap_block_state8_on_subcall_done = ((ap_sync_grp_myproject_fu_781_ap_ready & ap_sync_grp_myproject_fu_781_ap_done) == 1'b0);
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_grp_myproject_fu_781_ap_done = (grp_myproject_fu_781_ap_done | ap_sync_reg_grp_myproject_fu_781_ap_done);

assign ap_sync_grp_myproject_fu_781_ap_ready = (grp_myproject_fu_781_ap_ready | ap_sync_reg_grp_myproject_fu_781_ap_ready);

assign ashr_ln586_fu_1188_p2 = $signed(man_V_2_reg_1993) >>> zext_ln586_fu_1184_p1;

assign bitcast_ln696_fu_1197_p1 = in_data_tmp_reg_1977;

assign bitcast_ln739_fu_1821_p1 = trunc_ln738_fu_1817_p1;

assign ctype_data_V_fu_1468_p2 = (and_ln203_2_fu_1462_p2 | and_ln203_1_fu_1456_p2);

assign empty_68_fu_1337_p2 = (shl_ln_fu_1330_p3 | 8'd15);

assign exp_tmp_V_fu_1066_p4 = {{ireg_V_fu_1050_p1[62:52]}};

assign grp_myproject_fu_781_ap_start = grp_myproject_fu_781_ap_start_reg;

assign icmp_ln18_fu_829_p2 = ((row_count == vector_rows_0_data_reg) ? 1'b1 : 1'b0);

assign icmp_ln203_fu_1343_p2 = ((shl_ln_fu_1330_p3 > empty_68_fu_1337_p2) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_855_p2 = ((j_0_reg_759 == 5'd16) ? 1'b1 : 1'b0);

assign icmp_ln43_fu_1494_p2 = ((j3_0_reg_770 == 3'd5) ? 1'b1 : 1'b0);

assign icmp_ln44_1_fu_1046_p2 = ((select_ln20_reg_1964 == vector_rows_read_reg_1959) ? 1'b1 : 1'b0);

assign icmp_ln44_fu_1506_p2 = ((j3_0_reg_770 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_1110_p2 = ((trunc_ln556_fu_1054_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_1122_p2 = (($signed(F2_fu_1116_p2) > $signed(12'd10)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_1148_p2 = ((F2_fu_1116_p2 == 12'd10) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_1174_p2 = ((sh_amt_reg_2010 < 12'd54) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_1179_p2 = ((tmp_514_reg_2029 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_1528_p2 = ((tmp_V_3_fu_1517_p7 == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_1642_p2 = ((p_Result_s_fu_1637_p2 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_1611_p2 = (($signed(tmp_518_fu_1601_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln958_fu_1701_p2 = (($signed(lsb_index_fu_1595_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign in_local_V_data_0_V_din = ctype_data_V_026_reg_747[15:0];

assign in_local_V_data_10_V_din = {{ctype_data_V_026_reg_747[175:160]}};

assign in_local_V_data_11_V_din = {{ctype_data_V_026_reg_747[191:176]}};

assign in_local_V_data_12_V_din = {{ctype_data_V_026_reg_747[207:192]}};

assign in_local_V_data_13_V_din = {{ctype_data_V_026_reg_747[223:208]}};

assign in_local_V_data_14_V_din = {{ctype_data_V_026_reg_747[239:224]}};

assign in_local_V_data_15_V_din = {{ctype_data_V_026_reg_747[255:240]}};

assign in_local_V_data_1_V_din = {{ctype_data_V_026_reg_747[31:16]}};

assign in_local_V_data_2_V_din = {{ctype_data_V_026_reg_747[47:32]}};

assign in_local_V_data_3_V_din = {{ctype_data_V_026_reg_747[63:48]}};

assign in_local_V_data_4_V_din = {{ctype_data_V_026_reg_747[79:64]}};

assign in_local_V_data_5_V_din = {{ctype_data_V_026_reg_747[95:80]}};

assign in_local_V_data_6_V_din = {{ctype_data_V_026_reg_747[111:96]}};

assign in_local_V_data_7_V_din = {{ctype_data_V_026_reg_747[127:112]}};

assign in_local_V_data_8_V_din = {{ctype_data_V_026_reg_747[143:128]}};

assign in_local_V_data_9_V_din = {{ctype_data_V_026_reg_747[159:144]}};

assign io_acc_block_signal_op123 = (in_local_V_data_9_V_full_n & in_local_V_data_8_V_full_n & in_local_V_data_7_V_full_n & in_local_V_data_6_V_full_n & in_local_V_data_5_V_full_n & in_local_V_data_4_V_full_n & in_local_V_data_3_V_full_n & in_local_V_data_2_V_full_n & in_local_V_data_1_V_full_n & in_local_V_data_15_V_full_n & in_local_V_data_14_V_full_n & in_local_V_data_13_V_full_n & in_local_V_data_12_V_full_n & in_local_V_data_11_V_full_n & in_local_V_data_10_V_full_n & in_local_V_data_0_V_full_n);

assign io_acc_block_signal_op202 = (out_local_V_data_4_V_empty_n & out_local_V_data_3_V_empty_n & out_local_V_data_2_V_empty_n & out_local_V_data_1_V_empty_n & out_local_V_data_0_V_empty_n);

assign ireg_V_fu_1050_p1 = grp_fu_822_p1;

assign j_1_fu_1500_p2 = (j3_0_reg_770 + 3'd1);

assign j_fu_861_p2 = (j_0_reg_759 + 5'd1);


always @ (p_Result_10_fu_1566_p3) begin
    if (p_Result_10_fu_1566_p3[0] == 1'b1) begin
        l_fu_1574_p3 = 32'd0;
    end else if (p_Result_10_fu_1566_p3[1] == 1'b1) begin
        l_fu_1574_p3 = 32'd1;
    end else if (p_Result_10_fu_1566_p3[2] == 1'b1) begin
        l_fu_1574_p3 = 32'd2;
    end else if (p_Result_10_fu_1566_p3[3] == 1'b1) begin
        l_fu_1574_p3 = 32'd3;
    end else if (p_Result_10_fu_1566_p3[4] == 1'b1) begin
        l_fu_1574_p3 = 32'd4;
    end else if (p_Result_10_fu_1566_p3[5] == 1'b1) begin
        l_fu_1574_p3 = 32'd5;
    end else if (p_Result_10_fu_1566_p3[6] == 1'b1) begin
        l_fu_1574_p3 = 32'd6;
    end else if (p_Result_10_fu_1566_p3[7] == 1'b1) begin
        l_fu_1574_p3 = 32'd7;
    end else if (p_Result_10_fu_1566_p3[8] == 1'b1) begin
        l_fu_1574_p3 = 32'd8;
    end else if (p_Result_10_fu_1566_p3[9] == 1'b1) begin
        l_fu_1574_p3 = 32'd9;
    end else if (p_Result_10_fu_1566_p3[10] == 1'b1) begin
        l_fu_1574_p3 = 32'd10;
    end else if (p_Result_10_fu_1566_p3[11] == 1'b1) begin
        l_fu_1574_p3 = 32'd11;
    end else if (p_Result_10_fu_1566_p3[12] == 1'b1) begin
        l_fu_1574_p3 = 32'd12;
    end else if (p_Result_10_fu_1566_p3[13] == 1'b1) begin
        l_fu_1574_p3 = 32'd13;
    end else if (p_Result_10_fu_1566_p3[14] == 1'b1) begin
        l_fu_1574_p3 = 32'd14;
    end else if (p_Result_10_fu_1566_p3[15] == 1'b1) begin
        l_fu_1574_p3 = 32'd15;
    end else if (p_Result_10_fu_1566_p3[16] == 1'b1) begin
        l_fu_1574_p3 = 32'd16;
    end else if (p_Result_10_fu_1566_p3[17] == 1'b1) begin
        l_fu_1574_p3 = 32'd17;
    end else if (p_Result_10_fu_1566_p3[18] == 1'b1) begin
        l_fu_1574_p3 = 32'd18;
    end else if (p_Result_10_fu_1566_p3[19] == 1'b1) begin
        l_fu_1574_p3 = 32'd19;
    end else if (p_Result_10_fu_1566_p3[20] == 1'b1) begin
        l_fu_1574_p3 = 32'd20;
    end else if (p_Result_10_fu_1566_p3[21] == 1'b1) begin
        l_fu_1574_p3 = 32'd21;
    end else if (p_Result_10_fu_1566_p3[22] == 1'b1) begin
        l_fu_1574_p3 = 32'd22;
    end else if (p_Result_10_fu_1566_p3[23] == 1'b1) begin
        l_fu_1574_p3 = 32'd23;
    end else if (p_Result_10_fu_1566_p3[24] == 1'b1) begin
        l_fu_1574_p3 = 32'd24;
    end else if (p_Result_10_fu_1566_p3[25] == 1'b1) begin
        l_fu_1574_p3 = 32'd25;
    end else if (p_Result_10_fu_1566_p3[26] == 1'b1) begin
        l_fu_1574_p3 = 32'd26;
    end else if (p_Result_10_fu_1566_p3[27] == 1'b1) begin
        l_fu_1574_p3 = 32'd27;
    end else if (p_Result_10_fu_1566_p3[28] == 1'b1) begin
        l_fu_1574_p3 = 32'd28;
    end else if (p_Result_10_fu_1566_p3[29] == 1'b1) begin
        l_fu_1574_p3 = 32'd29;
    end else if (p_Result_10_fu_1566_p3[30] == 1'b1) begin
        l_fu_1574_p3 = 32'd30;
    end else if (p_Result_10_fu_1566_p3[31] == 1'b1) begin
        l_fu_1574_p3 = 32'd31;
    end else begin
        l_fu_1574_p3 = 32'd32;
    end
end

assign last_fu_1512_p2 = (icmp_ln44_fu_1506_p2 & icmp_ln44_1_reg_1988);

assign lsb_index_fu_1595_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_1586_p2));

assign lshr_ln203_fu_1438_p2 = 256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 >> zext_ln203_5_fu_1404_p1;

assign lshr_ln947_fu_1631_p2 = 16'd65535 >> zext_ln947_fu_1627_p1;

assign lshr_ln958_fu_1718_p2 = zext_ln957_1_fu_1710_p1 >> add_ln958_fu_1713_p2;

assign m_1_fu_1743_p3 = ((icmp_ln958_reg_2121[0:0] === 1'b1) ? zext_ln958_fu_1724_p1 : shl_ln958_fu_1737_p2);

assign m_2_fu_1753_p2 = (zext_ln961_fu_1750_p1 + m_1_fu_1743_p3);

assign m_6_fu_1777_p1 = m_5_reg_2126;

assign m_fu_1707_p1 = tmp_V_4_reg_2092;

assign man_V_1_fu_1096_p2 = (54'd0 - p_Result_8_fu_1092_p1);

assign man_V_2_fu_1102_p3 = ((p_Result_7_fu_1058_p3[0:0] === 1'b1) ? man_V_1_fu_1096_p2 : p_Result_8_fu_1092_p1);

assign or_ln581_fu_1264_p2 = (or_ln582_fu_1231_p2 | icmp_ln581_reg_2004);

assign or_ln582_fu_1231_p2 = (icmp_ln582_reg_2017 | icmp_ln571_reg_1998);

assign or_ln603_1_fu_1302_p2 = (and_ln585_fu_1252_p2 | and_ln582_fu_1226_p2);

assign or_ln603_2_fu_1316_p2 = (or_ln603_fu_1289_p2 | or_ln603_1_fu_1302_p2);

assign or_ln603_fu_1289_p2 = (and_ln603_fu_1275_p2 | and_ln585_1_fu_1258_p2);

assign or_ln949_fu_1687_p2 = (and_ln949_fu_1681_p2 | a_fu_1648_p2);

assign or_ln_fu_1693_p3 = {{31'd0}, {or_ln949_fu_1687_p2}};

assign out_r_TDATA_int = ((icmp_ln935_reg_2082[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_1821_p1);

assign out_r_TVALID = regslice_both_out_data_U_vld_out;

assign p_Result_10_fu_1566_p3 = {{16'd65535}, {p_Result_1_fu_1556_p4}};

assign p_Result_11_fu_1805_p5 = {{m_6_fu_1777_p1[63:32]}, {tmp_2_fu_1798_p3}, {m_6_fu_1777_p1[22:0]}};

integer ap_tvar_int_0;

always @ (tmp_V_4_fu_1548_p3) begin
    for (ap_tvar_int_0 = 16 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 15 - 0) begin
            p_Result_1_fu_1556_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            p_Result_1_fu_1556_p4[ap_tvar_int_0] = tmp_V_4_fu_1548_p3[15 - ap_tvar_int_0];
        end
    end
end

assign p_Result_2_fu_1674_p3 = tmp_V_4_reg_2092[add_ln949_fu_1668_p2];

assign p_Result_7_fu_1058_p3 = ireg_V_fu_1050_p1[32'd63];

assign p_Result_8_fu_1092_p1 = tmp_s_fu_1084_p3;

assign p_Result_9_fu_1534_p3 = tmp_V_3_fu_1517_p7[32'd15];

assign p_Result_s_fu_1637_p2 = (tmp_V_4_reg_2092 & lshr_ln947_fu_1631_p2);

assign select_ln203_1_fu_1374_p3 = ((icmp_ln203_fu_1343_p2[0:0] === 1'b1) ? zext_ln203_1_fu_1353_p1 : zext_ln203_fu_1349_p1);

assign select_ln203_2_fu_1382_p3 = ((icmp_ln203_fu_1343_p2[0:0] === 1'b1) ? xor_ln203_fu_1360_p2 : zext_ln203_fu_1349_p1);

assign select_ln203_3_fu_1424_p3 = ((icmp_ln203_fu_1343_p2[0:0] === 1'b1) ? tmp_516_fu_1414_p4 : shl_ln203_fu_1408_p2);

assign select_ln203_fu_1366_p3 = ((icmp_ln203_fu_1343_p2[0:0] === 1'b1) ? zext_ln203_fu_1349_p1 : zext_ln203_1_fu_1353_p1);

assign select_ln20_fu_841_p3 = ((icmp_ln18_fu_829_p2[0:0] === 1'b1) ? 32'd1 : add_ln20_fu_835_p2);

assign select_ln588_fu_1208_p3 = ((tmp_515_fu_1200_p3[0:0] === 1'b1) ? 16'd65535 : 16'd0);

assign select_ln603_1_fu_1295_p3 = ((and_ln585_fu_1252_p2[0:0] === 1'b1) ? select_ln588_fu_1208_p3 : trunc_ln583_reg_2023);

assign select_ln603_2_fu_1308_p3 = ((or_ln603_fu_1289_p2[0:0] === 1'b1) ? select_ln603_fu_1281_p3 : select_ln603_1_fu_1295_p3);

assign select_ln603_3_fu_1322_p3 = ((or_ln603_2_fu_1316_p2[0:0] === 1'b1) ? select_ln603_2_fu_1308_p3 : 16'd0);

assign select_ln603_fu_1281_p3 = ((and_ln603_fu_1275_p2[0:0] === 1'b1) ? shl_ln604_fu_1216_p2 : trunc_ln586_fu_1193_p1);

assign select_ln964_fu_1780_p3 = ((tmp_520_reg_2131[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln581_1_fu_1171_p1 = sh_amt_reg_2010;

assign sext_ln581_fu_1168_p1 = sh_amt_reg_2010;

assign sh_amt_fu_1140_p3 = ((icmp_ln581_fu_1122_p2[0:0] === 1'b1) ? add_ln581_fu_1128_p2 : sub_ln581_fu_1134_p2);

assign shl_ln203_1_fu_1432_p2 = 256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 << zext_ln203_4_fu_1400_p1;

assign shl_ln203_fu_1408_p2 = zext_ln203_2_fu_1357_p1 << zext_ln203_3_fu_1396_p1;

assign shl_ln604_fu_1216_p2 = trunc_ln583_reg_2023 << sext_ln581_fu_1168_p1;

assign shl_ln958_fu_1737_p2 = m_fu_1707_p1 << zext_ln958_1_fu_1733_p1;

assign shl_ln_fu_1330_p3 = {{trunc_ln203_reg_1983}, {4'd0}};

assign sub_ln581_fu_1134_p2 = (12'd10 - F2_fu_1116_p2);

assign sub_ln944_fu_1586_p2 = (32'd16 - l_reg_2100);

assign sub_ln947_fu_1621_p2 = (5'd9 - trunc_ln947_fu_1617_p1);

assign sub_ln958_fu_1728_p2 = (32'd25 - sub_ln944_reg_2110);

assign sub_ln964_fu_1787_p2 = (8'd6 - trunc_ln943_reg_2105);

assign tmp_2_fu_1798_p3 = {{p_Result_9_reg_2087}, {add_ln964_fu_1792_p2}};

assign tmp_515_fu_1200_p3 = bitcast_ln696_fu_1197_p1[32'd31];

integer ap_tvar_int_1;

always @ (shl_ln203_fu_1408_p2) begin
    for (ap_tvar_int_1 = 256 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 255 - 0) begin
            tmp_516_fu_1414_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_516_fu_1414_p4[ap_tvar_int_1] = shl_ln203_fu_1408_p2[255 - ap_tvar_int_1];
        end
    end
end

assign tmp_518_fu_1601_p4 = {{lsb_index_fu_1595_p2[31:1]}};

assign tmp_519_fu_1654_p3 = lsb_index_fu_1595_p2[32'd31];

assign tmp_V_4_fu_1548_p3 = ((p_Result_9_fu_1534_p3[0:0] === 1'b1) ? tmp_V_fu_1542_p2 : tmp_V_3_fu_1517_p7);

assign tmp_V_fu_1542_p2 = (16'd0 - tmp_V_3_fu_1517_p7);

assign tmp_s_fu_1084_p3 = {{1'd1}, {trunc_ln565_fu_1080_p1}};

assign trunc_ln203_fu_872_p1 = j_0_reg_759[3:0];

assign trunc_ln556_fu_1054_p1 = ireg_V_fu_1050_p1[62:0];

assign trunc_ln565_fu_1080_p1 = ireg_V_fu_1050_p1[51:0];

assign trunc_ln583_fu_1154_p1 = man_V_2_fu_1102_p3[15:0];

assign trunc_ln586_fu_1193_p1 = ashr_ln586_fu_1188_p2[15:0];

assign trunc_ln738_fu_1817_p1 = p_Result_11_fu_1805_p5[31:0];

assign trunc_ln943_fu_1582_p1 = l_fu_1574_p3[7:0];

assign trunc_ln944_fu_1591_p1 = sub_ln944_fu_1586_p2[15:0];

assign trunc_ln947_fu_1617_p1 = sub_ln944_fu_1586_p2[4:0];

assign xor_ln203_1_fu_1390_p2 = (select_ln203_fu_1366_p3 ^ 9'd255);

assign xor_ln203_2_fu_1450_p2 = (256'd115792089237316195423570985008687907853269984665640564039457584007913129639935 ^ and_ln203_fu_1444_p2);

assign xor_ln203_fu_1360_p2 = (zext_ln203_fu_1349_p1 ^ 9'd255);

assign xor_ln571_fu_1221_p2 = (icmp_ln571_reg_1998 ^ 1'd1);

assign xor_ln581_fu_1269_p2 = (or_ln581_fu_1264_p2 ^ 1'd1);

assign xor_ln582_fu_1235_p2 = (or_ln582_fu_1231_p2 ^ 1'd1);

assign xor_ln585_fu_1246_p2 = (icmp_ln585_fu_1174_p2 ^ 1'd1);

assign xor_ln949_fu_1662_p2 = (tmp_519_fu_1654_p3 ^ 1'd1);

assign zext_ln203_1_fu_1353_p1 = empty_68_fu_1337_p2;

assign zext_ln203_2_fu_1357_p1 = select_ln603_3_reg_2034;

assign zext_ln203_3_fu_1396_p1 = select_ln203_2_fu_1382_p3;

assign zext_ln203_4_fu_1400_p1 = select_ln203_1_fu_1374_p3;

assign zext_ln203_5_fu_1404_p1 = xor_ln203_1_fu_1390_p2;

assign zext_ln203_fu_1349_p1 = shl_ln_fu_1330_p3;

assign zext_ln461_fu_1076_p1 = exp_tmp_V_fu_1066_p4;

assign zext_ln586_fu_1184_p1 = $unsigned(sext_ln581_1_fu_1171_p1);

assign zext_ln947_fu_1627_p1 = sub_ln947_fu_1621_p2;

assign zext_ln957_1_fu_1710_p1 = tmp_V_4_reg_2092;

assign zext_ln958_1_fu_1733_p1 = sub_ln958_fu_1728_p2;

assign zext_ln958_fu_1724_p1 = lshr_ln958_fu_1718_p2;

assign zext_ln961_fu_1750_p1 = or_ln_reg_2116;

always @ (posedge ap_clk) begin
    or_ln_reg_2116[31:1] <= 31'b0000000000000000000000000000000;
end

endmodule //myproject_axi
