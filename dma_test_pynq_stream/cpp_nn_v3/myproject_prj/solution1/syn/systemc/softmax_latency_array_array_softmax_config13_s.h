// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _softmax_latency_array_array_softmax_config13_s_HH_
#define _softmax_latency_array_array_softmax_config13_s_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "softmax_latency_array_array_softmax_config13_s_exp_table7.h"
#include "softmax_latency_array_array_softmax_config13_s_invert_tabcud.h"

namespace ap_rtl {

struct softmax_latency_array_array_softmax_config13_s : public sc_module {
    // Port declarations 46
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<16> > data_V_data_0_V_dout;
    sc_in< sc_logic > data_V_data_0_V_empty_n;
    sc_out< sc_logic > data_V_data_0_V_read;
    sc_in< sc_lv<16> > data_V_data_1_V_dout;
    sc_in< sc_logic > data_V_data_1_V_empty_n;
    sc_out< sc_logic > data_V_data_1_V_read;
    sc_in< sc_lv<16> > data_V_data_2_V_dout;
    sc_in< sc_logic > data_V_data_2_V_empty_n;
    sc_out< sc_logic > data_V_data_2_V_read;
    sc_in< sc_lv<16> > data_V_data_3_V_dout;
    sc_in< sc_logic > data_V_data_3_V_empty_n;
    sc_out< sc_logic > data_V_data_3_V_read;
    sc_in< sc_lv<16> > data_V_data_4_V_dout;
    sc_in< sc_logic > data_V_data_4_V_empty_n;
    sc_out< sc_logic > data_V_data_4_V_read;
    sc_out< sc_lv<16> > res_V_data_0_V_din;
    sc_in< sc_logic > res_V_data_0_V_full_n;
    sc_out< sc_logic > res_V_data_0_V_write;
    sc_out< sc_lv<16> > res_V_data_1_V_din;
    sc_in< sc_logic > res_V_data_1_V_full_n;
    sc_out< sc_logic > res_V_data_1_V_write;
    sc_out< sc_lv<16> > res_V_data_2_V_din;
    sc_in< sc_logic > res_V_data_2_V_full_n;
    sc_out< sc_logic > res_V_data_2_V_write;
    sc_out< sc_lv<16> > res_V_data_3_V_din;
    sc_in< sc_logic > res_V_data_3_V_full_n;
    sc_out< sc_logic > res_V_data_3_V_write;
    sc_out< sc_lv<16> > res_V_data_4_V_din;
    sc_in< sc_logic > res_V_data_4_V_full_n;
    sc_out< sc_logic > res_V_data_4_V_write;
    sc_out< sc_logic > data_V_data_0_V_blk_n;
    sc_out< sc_logic > data_V_data_1_V_blk_n;
    sc_out< sc_logic > data_V_data_2_V_blk_n;
    sc_out< sc_logic > data_V_data_3_V_blk_n;
    sc_out< sc_logic > data_V_data_4_V_blk_n;
    sc_out< sc_logic > res_V_data_0_V_blk_n;
    sc_out< sc_logic > res_V_data_1_V_blk_n;
    sc_out< sc_logic > res_V_data_2_V_blk_n;
    sc_out< sc_logic > res_V_data_3_V_blk_n;
    sc_out< sc_logic > res_V_data_4_V_blk_n;


    // Module declarations
    softmax_latency_array_array_softmax_config13_s(sc_module_name name);
    SC_HAS_PROCESS(softmax_latency_array_array_softmax_config13_s);

    ~softmax_latency_array_array_softmax_config13_s();

    sc_trace_file* mVcdFile;

    softmax_latency_array_array_softmax_config13_s_exp_table7* exp_table7_U;
    softmax_latency_array_array_softmax_config13_s_invert_tabcud* invert_table8_U;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > io_acc_block_signal_op7;
    sc_signal< bool > ap_block_state1_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter4;
    sc_signal< sc_logic > io_acc_block_signal_op93;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<10> > exp_table7_address0;
    sc_signal< sc_logic > exp_table7_ce0;
    sc_signal< sc_lv<18> > exp_table7_q0;
    sc_signal< sc_lv<10> > exp_table7_address1;
    sc_signal< sc_logic > exp_table7_ce1;
    sc_signal< sc_lv<18> > exp_table7_q1;
    sc_signal< sc_lv<10> > exp_table7_address2;
    sc_signal< sc_logic > exp_table7_ce2;
    sc_signal< sc_lv<18> > exp_table7_q2;
    sc_signal< sc_lv<10> > exp_table7_address3;
    sc_signal< sc_logic > exp_table7_ce3;
    sc_signal< sc_lv<18> > exp_table7_q3;
    sc_signal< sc_lv<10> > exp_table7_address4;
    sc_signal< sc_logic > exp_table7_ce4;
    sc_signal< sc_lv<18> > exp_table7_q4;
    sc_signal< sc_lv<10> > invert_table8_address0;
    sc_signal< sc_logic > invert_table8_ce0;
    sc_signal< sc_lv<18> > invert_table8_q0;
    sc_signal< sc_lv<18> > exp_res_0_V_reg_656;
    sc_signal< sc_lv<18> > exp_res_0_V_reg_656_pp0_iter2_reg;
    sc_signal< sc_lv<18> > exp_res_0_V_reg_656_pp0_iter3_reg;
    sc_signal< sc_lv<18> > exp_res_1_V_reg_662;
    sc_signal< sc_lv<18> > exp_res_1_V_reg_662_pp0_iter2_reg;
    sc_signal< sc_lv<18> > exp_res_1_V_reg_662_pp0_iter3_reg;
    sc_signal< sc_lv<18> > exp_res_2_V_reg_668;
    sc_signal< sc_lv<18> > exp_res_2_V_reg_668_pp0_iter2_reg;
    sc_signal< sc_lv<18> > exp_res_2_V_reg_668_pp0_iter3_reg;
    sc_signal< sc_lv<18> > exp_res_3_V_reg_673;
    sc_signal< sc_lv<18> > exp_res_3_V_reg_673_pp0_iter2_reg;
    sc_signal< sc_lv<18> > exp_res_3_V_reg_673_pp0_iter3_reg;
    sc_signal< sc_lv<18> > exp_res_4_V_reg_678;
    sc_signal< sc_lv<18> > exp_res_4_V_reg_678_pp0_iter2_reg;
    sc_signal< sc_lv<18> > exp_res_4_V_reg_678_pp0_iter3_reg;
    sc_signal< sc_lv<18> > add_ln703_2_fu_523_p2;
    sc_signal< sc_lv<18> > add_ln703_2_reg_683;
    sc_signal< sc_lv<18> > inv_exp_sum_V_reg_693;
    sc_signal< sc_lv<16> > tmp_data_0_V_reg_698;
    sc_signal< sc_lv<16> > tmp_data_1_V_reg_703;
    sc_signal< sc_lv<16> > tmp_data_2_V_reg_708;
    sc_signal< sc_lv<16> > tmp_data_3_V_reg_713;
    sc_signal< sc_lv<16> > tmp_data_4_V_reg_718;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_lv<64> > zext_ln157_fu_452_p1;
    sc_signal< sc_lv<64> > zext_ln157_1_fu_467_p1;
    sc_signal< sc_lv<64> > zext_ln157_2_fu_482_p1;
    sc_signal< sc_lv<64> > zext_ln157_3_fu_497_p1;
    sc_signal< sc_lv<64> > zext_ln157_4_fu_512_p1;
    sc_signal< sc_lv<64> > zext_ln166_fu_548_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<18> > mul_ln1118_4_fu_311_p0;
    sc_signal< sc_lv<18> > mul_ln1118_4_fu_311_p1;
    sc_signal< sc_lv<30> > sext_ln167_fu_553_p1;
    sc_signal< sc_lv<18> > mul_ln1118_fu_312_p0;
    sc_signal< sc_lv<18> > mul_ln1118_fu_312_p1;
    sc_signal< sc_lv<18> > mul_ln1118_3_fu_313_p0;
    sc_signal< sc_lv<18> > mul_ln1118_3_fu_313_p1;
    sc_signal< sc_lv<18> > mul_ln1118_2_fu_314_p0;
    sc_signal< sc_lv<18> > mul_ln1118_2_fu_314_p1;
    sc_signal< sc_lv<18> > mul_ln1118_1_fu_315_p0;
    sc_signal< sc_lv<18> > mul_ln1118_1_fu_315_p1;
    sc_signal< sc_lv<10> > y_V_fu_442_p4;
    sc_signal< sc_lv<10> > y_V_1_fu_457_p4;
    sc_signal< sc_lv<10> > y_V_2_fu_472_p4;
    sc_signal< sc_lv<10> > y_V_3_fu_487_p4;
    sc_signal< sc_lv<10> > y_V_4_fu_502_p4;
    sc_signal< sc_lv<18> > add_ln703_1_fu_517_p0;
    sc_signal< sc_lv<18> > add_ln703_1_fu_517_p1;
    sc_signal< sc_lv<18> > add_ln703_1_fu_517_p2;
    sc_signal< sc_lv<18> > add_ln703_2_fu_523_p1;
    sc_signal< sc_lv<18> > add_ln703_fu_529_p2;
    sc_signal< sc_lv<18> > exp_sum_V_fu_533_p2;
    sc_signal< sc_lv<10> > y_V_5_fu_538_p4;
    sc_signal< sc_lv<30> > mul_ln1118_fu_312_p2;
    sc_signal< sc_lv<30> > mul_ln1118_1_fu_315_p2;
    sc_signal< sc_lv<30> > mul_ln1118_2_fu_314_p2;
    sc_signal< sc_lv<30> > mul_ln1118_3_fu_313_p2;
    sc_signal< sc_lv<30> > mul_ln1118_4_fu_311_p2;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to4;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_pp0_stage0;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_1D;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln703_1_fu_517_p0();
    void thread_add_ln703_1_fu_517_p1();
    void thread_add_ln703_1_fu_517_p2();
    void thread_add_ln703_2_fu_523_p1();
    void thread_add_ln703_2_fu_523_p2();
    void thread_add_ln703_fu_529_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1_pp0_stage0_iter0();
    void thread_ap_block_state2_pp0_stage0_iter1();
    void thread_ap_block_state3_pp0_stage0_iter2();
    void thread_ap_block_state4_pp0_stage0_iter3();
    void thread_ap_block_state5_pp0_stage0_iter4();
    void thread_ap_block_state6_pp0_stage0_iter5();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to4();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_data_V_data_0_V_blk_n();
    void thread_data_V_data_0_V_read();
    void thread_data_V_data_1_V_blk_n();
    void thread_data_V_data_1_V_read();
    void thread_data_V_data_2_V_blk_n();
    void thread_data_V_data_2_V_read();
    void thread_data_V_data_3_V_blk_n();
    void thread_data_V_data_3_V_read();
    void thread_data_V_data_4_V_blk_n();
    void thread_data_V_data_4_V_read();
    void thread_exp_sum_V_fu_533_p2();
    void thread_exp_table7_address0();
    void thread_exp_table7_address1();
    void thread_exp_table7_address2();
    void thread_exp_table7_address3();
    void thread_exp_table7_address4();
    void thread_exp_table7_ce0();
    void thread_exp_table7_ce1();
    void thread_exp_table7_ce2();
    void thread_exp_table7_ce3();
    void thread_exp_table7_ce4();
    void thread_invert_table8_address0();
    void thread_invert_table8_ce0();
    void thread_io_acc_block_signal_op7();
    void thread_io_acc_block_signal_op93();
    void thread_mul_ln1118_1_fu_315_p0();
    void thread_mul_ln1118_1_fu_315_p1();
    void thread_mul_ln1118_1_fu_315_p2();
    void thread_mul_ln1118_2_fu_314_p0();
    void thread_mul_ln1118_2_fu_314_p1();
    void thread_mul_ln1118_2_fu_314_p2();
    void thread_mul_ln1118_3_fu_313_p0();
    void thread_mul_ln1118_3_fu_313_p1();
    void thread_mul_ln1118_3_fu_313_p2();
    void thread_mul_ln1118_4_fu_311_p0();
    void thread_mul_ln1118_4_fu_311_p1();
    void thread_mul_ln1118_4_fu_311_p2();
    void thread_mul_ln1118_fu_312_p0();
    void thread_mul_ln1118_fu_312_p1();
    void thread_mul_ln1118_fu_312_p2();
    void thread_res_V_data_0_V_blk_n();
    void thread_res_V_data_0_V_din();
    void thread_res_V_data_0_V_write();
    void thread_res_V_data_1_V_blk_n();
    void thread_res_V_data_1_V_din();
    void thread_res_V_data_1_V_write();
    void thread_res_V_data_2_V_blk_n();
    void thread_res_V_data_2_V_din();
    void thread_res_V_data_2_V_write();
    void thread_res_V_data_3_V_blk_n();
    void thread_res_V_data_3_V_din();
    void thread_res_V_data_3_V_write();
    void thread_res_V_data_4_V_blk_n();
    void thread_res_V_data_4_V_din();
    void thread_res_V_data_4_V_write();
    void thread_sext_ln167_fu_553_p1();
    void thread_y_V_1_fu_457_p4();
    void thread_y_V_2_fu_472_p4();
    void thread_y_V_3_fu_487_p4();
    void thread_y_V_4_fu_502_p4();
    void thread_y_V_5_fu_538_p4();
    void thread_y_V_fu_442_p4();
    void thread_zext_ln157_1_fu_467_p1();
    void thread_zext_ln157_2_fu_482_p1();
    void thread_zext_ln157_3_fu_497_p1();
    void thread_zext_ln157_4_fu_512_p1();
    void thread_zext_ln157_fu_452_p1();
    void thread_zext_ln166_fu_548_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
