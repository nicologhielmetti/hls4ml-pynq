

================================================================
== Vivado HLS Report for 'myproject_axi'
================================================================
* Date:           Thu Apr  1 13:38:17 2021

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        myproject_prj
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020-clg400-1


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+---------+----------+------------+
    |  Clock |  Target | Estimated| Uncertainty|
    +--------+---------+----------+------------+
    |ap_clk  | 5.00 ns | 6.982 ns |   0.62 ns  |
    +--------+---------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |      287|      287| 2.004 us | 2.004 us |  287|  287|   none  |
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1  |       17|       17|         3|          1|          1|    16|    yes   |
        |- Loop 2  |        6|        6|         3|          1|          1|     5|    yes   |
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 11
* Pipeline : 2
  Pipeline-0 : II = 1, D = 3, States = { 3 4 5 }
  Pipeline-1 : II = 1, D = 3, States = { 8 9 10 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 6 4 
4 --> 5 
5 --> 3 
6 --> 7 
7 --> 8 
8 --> 11 9 
9 --> 10 
10 --> 8 
11 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.00>
ST_1 : Operation 12 [2/2] (1.00ns)   --->   "%vector_rows_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %vector_rows)"   --->   Operation 12 'read' 'vector_rows_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%in_local_V = alloca i256, align 8" [firmware/myproject_axi.cpp:18]   --->   Operation 13 'alloca' 'in_local_V' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%out_local_0 = alloca i16, align 2"   --->   Operation 14 'alloca' 'out_local_0' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%out_local_1 = alloca i16, align 2"   --->   Operation 15 'alloca' 'out_local_1' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%out_local_2 = alloca i16, align 2"   --->   Operation 16 'alloca' 'out_local_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%out_local_3 = alloca i16, align 2"   --->   Operation 17 'alloca' 'out_local_3' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (0.00ns)   --->   "%out_local_4 = alloca i16, align 2"   --->   Operation 18 'alloca' 'out_local_4' <Predicate = true> <Delay = 0.00>

State 2 <SV = 1> <Delay = 4.17>
ST_2 : Operation 19 [1/2] (1.00ns)   --->   "%vector_rows_read = call i32 @_ssdm_op_Read.s_axilite.i32(i32 %vector_rows)"   --->   Operation 19 'read' 'vector_rows_read' <Predicate = true> <Delay = 1.00> <Core = "s_axilite">   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %in_data_V), !map !199"   --->   Operation 20 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %in_last), !map !205"   --->   Operation 21 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %out_data_V), !map !209"   --->   Operation 22 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i1* %out_last), !map !215"   --->   Operation 23 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32 %vector_rows), !map !219"   --->   Operation 24 'specbitsmap' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([14 x i8]* @myproject_axi_str) nounwind"   --->   Operation 25 'spectopmodule' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %in_data_V, i1* %in_last, [5 x i8]* @p_str1, i32 1, i32 1, [5 x i8]* @p_str110, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [firmware/myproject_axi.cpp:8]   --->   Operation 26 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i16* %out_data_V, i1* %out_last, [5 x i8]* @p_str1, i32 1, i32 1, [5 x i8]* @p_str110, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2)" [firmware/myproject_axi.cpp:9]   --->   Operation 27 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 %vector_rows, [10 x i8]* @p_str3, i32 1, i32 1, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:10]   --->   Operation 28 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [13 x i8]* @p_str4, i32 0, i32 0, [1 x i8]* @p_str2, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2, [1 x i8]* @p_str2, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str2, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:11]   --->   Operation 29 'specinterface' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%row_count_load = load i32* @row_count, align 4" [firmware/myproject_axi.cpp:20]   --->   Operation 30 'load' 'row_count_load' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (2.47ns)   --->   "%icmp_ln20 = icmp eq i32 %row_count_load, %vector_rows_read" [firmware/myproject_axi.cpp:20]   --->   Operation 31 'icmp' 'icmp_ln20' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 32 [1/1] (2.55ns)   --->   "%add_ln22 = add i32 %row_count_load, 1" [firmware/myproject_axi.cpp:22]   --->   Operation 32 'add' 'add_ln22' <Predicate = true> <Delay = 2.55> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 33 [1/1] (0.69ns)   --->   "%select_ln22 = select i1 %icmp_ln20, i32 1, i32 %add_ln22" [firmware/myproject_axi.cpp:22]   --->   Operation 33 'select' 'select_ln22' <Predicate = true> <Delay = 0.69> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "store i32 %select_ln22, i32* @row_count, align 4" [firmware/myproject_axi.cpp:22]   --->   Operation 34 'store' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (1.76ns)   --->   "br label %0" [firmware/myproject_axi.cpp:24]   --->   Operation 35 'br' <Predicate = true> <Delay = 1.76>

State 3 <SV = 2> <Delay = 2.34>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%i_0 = phi i5 [ 0, %arrayctor.loop1.preheader ], [ %i, %hls_label_0 ]"   --->   Operation 36 'phi' 'i_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.36ns)   --->   "%icmp_ln24 = icmp eq i5 %i_0, -16" [firmware/myproject_axi.cpp:24]   --->   Operation 37 'icmp' 'icmp_ln24' <Predicate = true> <Delay = 1.36> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 16, i64 16, i64 16)"   --->   Operation 38 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (1.78ns)   --->   "%i = add i5 %i_0, 1" [firmware/myproject_axi.cpp:24]   --->   Operation 39 'add' 'i' <Predicate = true> <Delay = 1.78> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "br i1 %icmp_ln24, label %1, label %hls_label_0" [firmware/myproject_axi.cpp:24]   --->   Operation 40 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 41 [1/1] (0.00ns)   --->   "%empty_28 = call { i16, i1 } @_ssdm_op_Read.axis.volatile.i16P.i1P(i16* %in_data_V, i1* %in_last)" [firmware/myproject_axi.cpp:4]   --->   Operation 41 'read' 'empty_28' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%trunc_ln203 = trunc i5 %i_0 to i4" [firmware/myproject_axi.cpp:27]   --->   Operation 42 'trunc' 'trunc_ln203' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%shl_ln = call i8 @_ssdm_op_BitConcatenate.i8.i4.i4(i4 %trunc_ln203, i4 0)" [firmware/myproject_axi.cpp:27]   --->   Operation 43 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%empty_29 = or i8 %shl_ln, 15" [firmware/myproject_axi.cpp:27]   --->   Operation 44 'or' 'empty_29' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (1.55ns)   --->   "%icmp_ln203 = icmp ugt i8 %shl_ln, %empty_29" [firmware/myproject_axi.cpp:27]   --->   Operation 45 'icmp' 'icmp_ln203' <Predicate = (!icmp_ln24)> <Delay = 1.55> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 3.98>
ST_4 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%in_data_V_tmp = extractvalue { i16, i1 } %empty_28, 0" [firmware/myproject_axi.cpp:4]   --->   Operation 46 'extractvalue' 'in_data_V_tmp' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%zext_ln203 = zext i8 %shl_ln to i9" [firmware/myproject_axi.cpp:27]   --->   Operation 47 'zext' 'zext_ln203' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln203_1 = zext i8 %empty_29 to i9" [firmware/myproject_axi.cpp:27]   --->   Operation 48 'zext' 'zext_ln203_1' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%zext_ln203_2 = zext i16 %in_data_V_tmp to i256" [firmware/myproject_axi.cpp:27]   --->   Operation 49 'zext' 'zext_ln203_2' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 50 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%xor_ln203 = xor i9 %zext_ln203, 255" [firmware/myproject_axi.cpp:27]   --->   Operation 50 'xor' 'xor_ln203' <Predicate = (!icmp_ln24 & icmp_ln203)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 51 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%select_ln203 = select i1 %icmp_ln203, i9 %zext_ln203, i9 %zext_ln203_1" [firmware/myproject_axi.cpp:27]   --->   Operation 51 'select' 'select_ln203' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 52 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%select_ln203_1 = select i1 %icmp_ln203, i9 %zext_ln203_1, i9 %zext_ln203" [firmware/myproject_axi.cpp:27]   --->   Operation 52 'select' 'select_ln203_1' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%select_ln203_2 = select i1 %icmp_ln203, i9 %xor_ln203, i9 %zext_ln203" [firmware/myproject_axi.cpp:27]   --->   Operation 53 'select' 'select_ln203_2' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%xor_ln203_1 = xor i9 %select_ln203, 255" [firmware/myproject_axi.cpp:27]   --->   Operation 54 'xor' 'xor_ln203_1' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node shl_ln203)   --->   "%zext_ln203_3 = zext i9 %select_ln203_2 to i256" [firmware/myproject_axi.cpp:27]   --->   Operation 55 'zext' 'zext_ln203_3' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%zext_ln203_4 = zext i9 %select_ln203_1 to i256" [firmware/myproject_axi.cpp:27]   --->   Operation 56 'zext' 'zext_ln203_4' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 57 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%zext_ln203_5 = zext i9 %xor_ln203_1 to i256" [firmware/myproject_axi.cpp:27]   --->   Operation 57 'zext' 'zext_ln203_5' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (3.98ns) (out node of the LUT)   --->   "%shl_ln203 = shl i256 %zext_ln203_2, %zext_ln203_3" [firmware/myproject_axi.cpp:27]   --->   Operation 58 'shl' 'shl_ln203' <Predicate = (!icmp_ln24)> <Delay = 3.98> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.25> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%shl_ln203_1 = shl i256 -1, %zext_ln203_4" [firmware/myproject_axi.cpp:27]   --->   Operation 59 'shl' 'shl_ln203_1' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.25> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 60 [1/1] (0.00ns) (grouped into LUT with out node and_ln203)   --->   "%lshr_ln203 = lshr i256 -1, %zext_ln203_5" [firmware/myproject_axi.cpp:27]   --->   Operation 60 'lshr' 'lshr_ln203' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.25> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 61 [1/1] (3.25ns) (out node of the LUT)   --->   "%and_ln203 = and i256 %shl_ln203_1, %lshr_ln203" [firmware/myproject_axi.cpp:27]   --->   Operation 61 'and' 'and_ln203' <Predicate = (!icmp_ln24)> <Delay = 3.25> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 1.55>
ST_5 : Operation 62 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str5)" [firmware/myproject_axi.cpp:24]   --->   Operation 62 'specregionbegin' 'tmp' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_5 : Operation 63 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:26]   --->   Operation 63 'specpipeline' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_5 : Operation 64 [1/1] (0.00ns)   --->   "%in_local_V_load = load i256* %in_local_V, align 8" [firmware/myproject_axi.cpp:27]   --->   Operation 64 'load' 'in_local_V_load' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_5 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%tmp_513 = call i256 @llvm.part.select.i256(i256 %shl_ln203, i32 255, i32 0)" [firmware/myproject_axi.cpp:27]   --->   Operation 65 'partselect' 'tmp_513' <Predicate = (!icmp_ln24 & icmp_ln203)> <Delay = 0.00>
ST_5 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%select_ln203_3 = select i1 %icmp_ln203, i256 %tmp_513, i256 %shl_ln203" [firmware/myproject_axi.cpp:27]   --->   Operation 66 'select' 'select_ln203_3' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.69> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%xor_ln203_2 = xor i256 %and_ln203, -1" [firmware/myproject_axi.cpp:27]   --->   Operation 67 'xor' 'xor_ln203_2' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%and_ln203_1 = and i256 %in_local_V_load, %xor_ln203_2" [firmware/myproject_axi.cpp:27]   --->   Operation 68 'and' 'and_ln203_1' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node in_local_V_1)   --->   "%and_ln203_2 = and i256 %select_ln203_3, %and_ln203" [firmware/myproject_axi.cpp:27]   --->   Operation 69 'and' 'and_ln203_2' <Predicate = (!icmp_ln24)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 70 [1/1] (1.55ns) (out node of the LUT)   --->   "%in_local_V_1 = or i256 %and_ln203_1, %and_ln203_2" [firmware/myproject_axi.cpp:27]   --->   Operation 70 'or' 'in_local_V_1' <Predicate = (!icmp_ln24)> <Delay = 1.55> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 71 [1/1] (0.00ns)   --->   "store i256 %in_local_V_1, i256* %in_local_V, align 8" [firmware/myproject_axi.cpp:27]   --->   Operation 71 'store' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_5 : Operation 72 [1/1] (0.00ns)   --->   "%empty_30 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str5, i32 %tmp)" [firmware/myproject_axi.cpp:28]   --->   Operation 72 'specregionend' 'empty_30' <Predicate = (!icmp_ln24)> <Delay = 0.00>
ST_5 : Operation 73 [1/1] (0.00ns)   --->   "br label %0" [firmware/myproject_axi.cpp:24]   --->   Operation 73 'br' <Predicate = (!icmp_ln24)> <Delay = 0.00>

State 6 <SV = 3> <Delay = 2.47>
ST_6 : Operation 74 [2/2] (0.00ns)   --->   "call fastcc void @myproject(i256* %in_local_V, i16* %out_local_0, i16* %out_local_1, i16* %out_local_2, i16* %out_local_3, i16* %out_local_4)"   --->   Operation 74 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_6 : Operation 75 [1/1] (2.47ns)   --->   "%icmp_ln37_1 = icmp eq i32 %select_ln22, %vector_rows_read" [firmware/myproject_axi.cpp:37]   --->   Operation 75 'icmp' 'icmp_ln37_1' <Predicate = true> <Delay = 2.47> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 4> <Delay = 1.76>
ST_7 : Operation 76 [1/2] (0.00ns)   --->   "call fastcc void @myproject(i256* %in_local_V, i16* %out_local_0, i16* %out_local_1, i16* %out_local_2, i16* %out_local_3, i16* %out_local_4)"   --->   Operation 76 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_7 : Operation 77 [1/1] (1.76ns)   --->   "br label %2" [firmware/myproject_axi.cpp:33]   --->   Operation 77 'br' <Predicate = true> <Delay = 1.76>

State 8 <SV = 5> <Delay = 1.65>
ST_8 : Operation 78 [1/1] (0.00ns)   --->   "%i2_0 = phi i3 [ 0, %1 ], [ %i_1, %hls_label_1 ]"   --->   Operation 78 'phi' 'i2_0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 79 [1/1] (1.13ns)   --->   "%icmp_ln33 = icmp eq i3 %i2_0, -3" [firmware/myproject_axi.cpp:33]   --->   Operation 79 'icmp' 'icmp_ln33' <Predicate = true> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 80 [1/1] (0.00ns)   --->   "%empty_31 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 5, i64 5, i64 5)"   --->   Operation 80 'speclooptripcount' 'empty_31' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 81 [1/1] (1.65ns)   --->   "%i_1 = add i3 %i2_0, 1" [firmware/myproject_axi.cpp:33]   --->   Operation 81 'add' 'i_1' <Predicate = true> <Delay = 1.65> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.55> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 82 [1/1] (0.00ns)   --->   "br i1 %icmp_ln33, label %3, label %hls_label_1" [firmware/myproject_axi.cpp:33]   --->   Operation 82 'br' <Predicate = true> <Delay = 0.00>

State 9 <SV = 6> <Delay = 2.14>
ST_9 : Operation 83 [1/1] (0.00ns)   --->   "%out_local_0_load = load i16* %out_local_0, align 2" [firmware/myproject_axi.cpp:36]   --->   Operation 83 'load' 'out_local_0_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_9 : Operation 84 [1/1] (0.00ns)   --->   "%out_local_1_load = load i16* %out_local_1, align 2" [firmware/myproject_axi.cpp:36]   --->   Operation 84 'load' 'out_local_1_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_9 : Operation 85 [1/1] (0.00ns)   --->   "%out_local_2_load = load i16* %out_local_2, align 2" [firmware/myproject_axi.cpp:36]   --->   Operation 85 'load' 'out_local_2_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "%out_local_3_load = load i16* %out_local_3, align 2" [firmware/myproject_axi.cpp:36]   --->   Operation 86 'load' 'out_local_3_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_9 : Operation 87 [1/1] (0.00ns)   --->   "%out_local_4_load = load i16* %out_local_4, align 2" [firmware/myproject_axi.cpp:36]   --->   Operation 87 'load' 'out_local_4_load' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_9 : Operation 88 [1/1] (2.14ns)   --->   "%tmp_2 = call i16 @_ssdm_op_Mux.ap_auto.5i16.i3(i16 %out_local_0_load, i16 %out_local_1_load, i16 %out_local_2_load, i16 %out_local_3_load, i16 %out_local_4_load, i3 %i2_0)" [firmware/myproject_axi.cpp:36]   --->   Operation 88 'mux' 'tmp_2' <Predicate = (!icmp_ln33)> <Delay = 2.14> <Core = "MuxnS">   --->   Core 31 'MuxnS' <Latency = 0> <II = 1> <Delay = 2.14> <FuncUnit> <Opcode : 'mux'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 89 [1/1] (1.13ns)   --->   "%icmp_ln37 = icmp eq i3 %i2_0, -4" [firmware/myproject_axi.cpp:37]   --->   Operation 89 'icmp' 'icmp_ln37' <Predicate = (!icmp_ln33)> <Delay = 1.13> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.47> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 90 [1/1] (0.97ns)   --->   "%and_ln37 = and i1 %icmp_ln37, %icmp_ln37_1" [firmware/myproject_axi.cpp:37]   --->   Operation 90 'and' 'and_ln37' <Predicate = (!icmp_ln33)> <Delay = 0.97> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.97> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 91 [2/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P.i1P(i16* %out_data_V, i1* %out_last, i16 %tmp_2, i1 %and_ln37)" [firmware/myproject_axi.cpp:5]   --->   Operation 91 'write' <Predicate = (!icmp_ln33)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >

State 10 <SV = 7> <Delay = 0.00>
ST_10 : Operation 92 [1/1] (0.00ns)   --->   "%tmp_s = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str6)" [firmware/myproject_axi.cpp:33]   --->   Operation 92 'specregionbegin' 'tmp_s' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_10 : Operation 93 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind" [firmware/myproject_axi.cpp:35]   --->   Operation 93 'specpipeline' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_10 : Operation 94 [1/2] (0.00ns)   --->   "call void @_ssdm_op_Write.axis.volatile.i16P.i1P(i16* %out_data_V, i1* %out_last, i16 %tmp_2, i1 %and_ln37)" [firmware/myproject_axi.cpp:5]   --->   Operation 94 'write' <Predicate = (!icmp_ln33)> <Delay = 0.00> <Core = "AXI4Stream">   --->   Core 5 'AXI4Stream' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : >
ST_10 : Operation 95 [1/1] (0.00ns)   --->   "%empty_32 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str6, i32 %tmp_s)" [firmware/myproject_axi.cpp:38]   --->   Operation 95 'specregionend' 'empty_32' <Predicate = (!icmp_ln33)> <Delay = 0.00>
ST_10 : Operation 96 [1/1] (0.00ns)   --->   "br label %2" [firmware/myproject_axi.cpp:33]   --->   Operation 96 'br' <Predicate = (!icmp_ln33)> <Delay = 0.00>

State 11 <SV = 6> <Delay = 0.00>
ST_11 : Operation 97 [1/1] (0.00ns)   --->   "ret void" [firmware/myproject_axi.cpp:39]   --->   Operation 97 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 5ns, clock uncertainty: 0.625ns.

 <State 1>: 1ns
The critical path consists of the following:
	s_axi read on port 'vector_rows' [24]  (1 ns)

 <State 2>: 4.17ns
The critical path consists of the following:
	s_axi read on port 'vector_rows' [24]  (1 ns)
	'icmp' operation ('icmp_ln20', firmware/myproject_axi.cpp:20) [42]  (2.47 ns)
	'select' operation ('select_ln22', firmware/myproject_axi.cpp:22) [44]  (0.698 ns)

 <State 3>: 2.34ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln24', firmware/myproject_axi.cpp:24) [49]  (1.36 ns)
	blocking operation 0.978 ns on control path)

 <State 4>: 3.99ns
The critical path consists of the following:
	'shl' operation ('shl_ln203', firmware/myproject_axi.cpp:27) [74]  (3.99 ns)

 <State 5>: 1.55ns
The critical path consists of the following:
	'load' operation ('in_local_V_load', firmware/myproject_axi.cpp:27) on local variable 'in_local.V', firmware/myproject_axi.cpp:18 [58]  (0 ns)
	'and' operation ('and_ln203_1', firmware/myproject_axi.cpp:27) [81]  (0 ns)
	'or' operation ('in_local.V', firmware/myproject_axi.cpp:27) [83]  (1.55 ns)

 <State 6>: 2.47ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln37_1', firmware/myproject_axi.cpp:37) [89]  (2.47 ns)

 <State 7>: 1.77ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', firmware/myproject_axi.cpp:33) [92]  (1.77 ns)

 <State 8>: 1.65ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', firmware/myproject_axi.cpp:33) [92]  (0 ns)
	'add' operation ('i', firmware/myproject_axi.cpp:33) [95]  (1.65 ns)

 <State 9>: 2.14ns
The critical path consists of the following:
	'load' operation ('out_local_0_load', firmware/myproject_axi.cpp:36) on local variable 'out_local_0' [100]  (0 ns)
	'mux' operation ('tmp_2', firmware/myproject_axi.cpp:36) [105]  (2.14 ns)

 <State 10>: 0ns
The critical path consists of the following:

 <State 11>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
