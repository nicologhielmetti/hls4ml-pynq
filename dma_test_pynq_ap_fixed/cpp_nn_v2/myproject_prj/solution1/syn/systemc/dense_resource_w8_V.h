// ==============================================================
// Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC v2019.2 (64-bit)
// Copyright 1986-2019 Xilinx, Inc. All Rights Reserved.
// ==============================================================
#ifndef __dense_resource_w8_V_H__
#define __dense_resource_w8_V_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct dense_resource_w8_V_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 111;
  static const unsigned AddressRange = 64;
  static const unsigned AddressWidth = 6;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(dense_resource_w8_V_ram) {
        ram[0] = "0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        ram[1] = "0b000000000000000000000000000000000000000000000000000000000000000111100001001000111100001000000000000000000000000";
        ram[2] = "0b000000010000000000000000000000000000000001100110000000000000000000000000000000011101111110000000000000000000000";
        ram[3] = "0b000000110110000000000101100010110000000000101110000000000000000000000000000011100100000000000000010100100000000";
        ram[4] = "0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000011100000000000000000000000";
        ram[5] = "0b000000000000000000000000000000000000000000000000000000000000000000000001011000011101110110000000000000000000000";
        ram[6] = "0b000000000000000000000000000000000000000001111100000000011111100110110000000000000000000010000000011100000000000";
        ram[7] = "0b000000000000000000001111100000000000000000000000000000011000100000000001110000000000000000000000000000000000000";
        ram[8] = "0b000000000000000000000000000000000000000000000000000000000000000000000000000000101000000000000000001010000000000";
        ram[9] = "0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        ram[10] = "0b000000000000000000001110100000000000000000101110000000000000100010000000000000000000000000000000000000000000000";
        ram[11] = "0b000000000001000000001101100000000000000000001110000000000000000000000000000000101100011010000000000000000000000";
        ram[12] = "0b000000000000000000000000000000000000000000110000000000000000000000000000000000000001110010000000011001000000000";
        ram[13] = "0b000000000111000000000000000111111000000000000000000000000000000000000000000011111000000000000000000000000000000";
        ram[14] = "0b000000001100000000000000000000000000000000000000000000000000000111110000000000000000000000000000000000000000000";
        ram[15] = "0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        ram[16] = "0b000000101100000000000000000001010000000000000000000000000000000000000000000000000000010010000000011100100000000";
        ram[17] = "0b000000000000000000000000000000000000000000000110000000000000001111010000000000000000000000000000010101000000000";
        ram[18] = "0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        ram[19] = "0b000000000000000000000100110000000000000000010010000000000000000001010000000000000000000000000000000000000000000";
        ram[20] = "0b000000000000000000000000000111011000000000000000000000000000000000000000000010111000000000000000000000000000000";
        ram[21] = "0b000000000000000000000010100000000000000000011000000000000000000101000010001011001000000000000000000000000000000";
        ram[22] = "0b000000000000000000000000000000000000000000100100000000000000000000000000000011101000000000000000010110000000000";
        ram[23] = "0b000000000111000000000000000110100000000001111010000000001011000000000000000000101000000000000000000000000000000";
        ram[24] = "0b000000111000000000000000000000000000000000101000000000000000000000000000000000000000000000000000000000000000000";
        ram[25] = "0b000000000000000000000000010000000000000000010000000000000000000000000000000000000000101100000000000001100000000";
        ram[26] = "0b000000000000000000000000000011000000000000000000000000010111000000000000000000010000000000000000000000000000000";
        ram[27] = "0b000000111010000000001111010000000000000000000000000000000100000000000000000011101100000000000000000000000000000";
        ram[28] = "0b000000011000000000000000000000000000000000000000000000000111000000000000000000000000000000000000000110100000000";
        ram[29] = "0b000000000000000000000010000110010000000000000010000000000111000000000000000000000000000000000000000001000000000";
        ram[30] = "0b000000000000000000000000000000000000000001111100000000000000000000000000000001011001110010000000001000000000000";
        ram[31] = "0b000000000000000000000000000000000000000001111110000000000000000000000000000000000001011010000000000000000000000";
        ram[32] = "0b000000000000011111000011010111110000000000011110000000000110100011000001100000000000000000110010000000000000000";
        ram[33] = "0b001010000100001001000000000010100000000000010010000000000000000000000111010010101100000000000000000000000000000";
        ram[34] = "0b111000000000011011000101110000000000000000000000000000001001100000000010000000111100000000000000000000000000000";
        ram[35] = "0b000000111100000000001110110000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        ram[36] = "0b001110000000000000000000000000000000000000000000000000011000100000000000101000000000000000111010000000000000000";
        ram[37] = "0b011010010111000000000000000011100000000000011000011011000000000000000110111000000001100000110110000001100000000";
        ram[38] = "0b000000000000000000000000000000100000000000000000000000010110100000000110111010100101011100000000000000000000000";
        ram[39] = "0b000000000100001001100000000000100000000000000000000000000001000000000000000000000001011010000011000000000000000";
        ram[40] = "0b000000000000000000000000000001011000000000000000000000000100100000000000000000000000000000000000000000000000000";
        ram[41] = "0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        ram[42] = "0b000000000000000010100000000110001000000000000000101011000000000000000000000000000000001110000000011111000000000";
        ram[43] = "0b000000000000000000000000000110010000000000000000000000000010100000000000000000011000000010000000011011000000000";
        ram[44] = "0b000000111001000001000000000101111000000000000000000000000000001101100000000001000100000000000000000000000000000";
        ram[45] = "0b000100111100011001100100000000001000000000000000000000011101101101110000000000000000101000001111000000000000000";
        ram[46] = "0b011010111110000000000000000010001000000000000000000000011110100001010000000000000000000000000000000101000000000";
        ram[47] = "0b000000000000000000000011100000000000000000000000000000000000000000000000000000000000000000001111000000000000000";
        ram[48] = "0b000000000000000110101011110000000000000000000000000000000001001101110000000000000000000000000000000000000000000";
        ram[49] = "0b000000110000000001101110010000000000000000000000000000000000000001110000000000000000000000010011000000000000000";
        ram[50] = "0b000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
        ram[51] = "0b001010110110000000000000000000000000000000000000000000011010001100010000000010111100111010001111000000100000000";
        ram[52] = "0b000000111100011010000000000000000000000001010110000000000000000000000001101000000000000000000000000000000000000";
        ram[53] = "0b011000000000001000100000000000000000000000000000000000000000000000000000000000000000000000000011000000000000000";
        ram[54] = "0b000000111010000000000000000000000000000001011000000000000000000000000001000000000000000000010010000011000000000";
        ram[55] = "0b000000001101000101000000000111101000000000011000000000000000000000000001111000000000000000110010000000000000000";
        ram[56] = "0b000000000000000000000000000000000000000001110110101111000000000010000000000000000000000000000000011101100000000";
        ram[57] = "0b000000000000000000000000000000000000000000000000000000000000000100100000000000000000100000010000000000000000000";
        ram[58] = "0b000000000100000011000000000000011000000000111100000000000000000001010101100000000000000000000000000000000000000";
        ram[59] = "0b011100000101000000000000000000000000000000000000010101010001000000000000111000000000000000000000000010100000000";
        ram[60] = "0b000000000000011001100000000000000000000001111110000000000000001111110001011000000000000000000000000000000000000";
        ram[61] = "0b000010111111000000000000000000000000000000000000110111000000000100110001100000000000100100111101000010000000000";
        ram[62] = "0b111000000000000000000011000000000000000000100100010000000000000000000000000000111101110110000000000000000000000";
        ram[63] = "0b000000000000000000000000000000000000000000000000000000000000001100100000000000000000000000110011000000000000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(dense_resource_w8_V) {


static const unsigned DataWidth = 111;
static const unsigned AddressRange = 64;
static const unsigned AddressWidth = 6;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


dense_resource_w8_V_ram* meminst;


SC_CTOR(dense_resource_w8_V) {
meminst = new dense_resource_w8_V_ram("dense_resource_w8_V_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);

meminst->reset(reset);
meminst->clk(clk);
}
~dense_resource_w8_V() {
    delete meminst;
}


};//endmodule
#endif
