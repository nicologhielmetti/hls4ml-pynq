// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _myproject_axi_HH_
#define _myproject_axi_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject.h"
#include "myproject_axi_muxqcK.h"
#include "myproject_axi_AXILiteS_s_axi.h"

namespace ap_rtl {

template<unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 5,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32>
struct myproject_axi : public sc_module {
    // Port declarations 27
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_lv<16> > in_r_TDATA;
    sc_in< sc_logic > in_r_TVALID;
    sc_out< sc_logic > in_r_TREADY;
    sc_in< sc_logic > in_r_TLAST;
    sc_out< sc_lv<16> > out_r_TDATA;
    sc_out< sc_logic > out_r_TVALID;
    sc_in< sc_logic > out_r_TREADY;
    sc_out< sc_logic > out_r_TLAST;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    myproject_axi(sc_module_name name);
    SC_HAS_PROCESS(myproject_axi);

    ~myproject_axi();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    myproject_axi_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* myproject_axi_AXILiteS_s_axi_U;
    myproject* grp_myproject_fu_179;
    myproject_axi_muxqcK<1,1,16,16,16,16,16,3,16>* myproject_axi_muxqcK_U856;
    regslice_both<16>* regslice_both_in_data_V_U;
    regslice_both_w1<1>* regslice_both_w1_in_last_U;
    regslice_both<16>* regslice_both_out_data_V_U;
    regslice_both_w1<1>* regslice_both_w1_out_last_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<32> > vector_rows;
    sc_signal< sc_lv<32> > vector_rows_0_data_reg;
    sc_signal< sc_logic > vector_rows_0_vld_reg;
    sc_signal< sc_logic > vector_rows_0_ack_out;
    sc_signal< sc_lv<32> > row_count;
    sc_signal< sc_logic > in_r_TDATA_blk_n;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<1> > icmp_ln24_fu_235_p2;
    sc_signal< sc_logic > out_r_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > icmp_ln33_reg_554;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<1> > icmp_ln33_reg_554_pp1_iter1_reg;
    sc_signal< sc_lv<5> > i_0_reg_156;
    sc_signal< sc_lv<3> > i2_0_reg_167;
    sc_signal< sc_lv<32> > vector_rows_read_reg_495;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<32> > select_ln22_fu_221_p3;
    sc_signal< sc_lv<32> > select_ln22_reg_500;
    sc_signal< sc_lv<1> > icmp_ln24_reg_505;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter2;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<1> > icmp_ln24_reg_505_pp0_iter1_reg;
    sc_signal< sc_lv<5> > i_fu_241_p2;
    sc_signal< sc_lv<16> > empty_28_reg_514_0;
    sc_signal< sc_lv<8> > shl_ln_fu_251_p3;
    sc_signal< sc_lv<8> > shl_ln_reg_519;
    sc_signal< sc_lv<8> > empty_29_fu_259_p2;
    sc_signal< sc_lv<8> > empty_29_reg_524;
    sc_signal< sc_lv<1> > icmp_ln203_fu_265_p2;
    sc_signal< sc_lv<1> > icmp_ln203_reg_529;
    sc_signal< sc_lv<1> > icmp_ln203_reg_529_pp0_iter1_reg;
    sc_signal< sc_lv<256> > shl_ln203_fu_329_p2;
    sc_signal< sc_lv<256> > shl_ln203_reg_537;
    sc_signal< sc_lv<256> > and_ln203_fu_347_p2;
    sc_signal< sc_lv<256> > and_ln203_reg_543;
    sc_signal< sc_lv<1> > icmp_ln37_1_fu_398_p2;
    sc_signal< sc_lv<1> > icmp_ln37_1_reg_549;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln33_fu_402_p2;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state9_io;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state10_io;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<3> > i_1_fu_408_p2;
    sc_signal< sc_lv<3> > i_1_reg_558;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<16> > tmp_2_fu_429_p7;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > grp_myproject_fu_179_ap_ready;
    sc_signal< sc_logic > grp_myproject_fu_179_ap_done;
    sc_signal< sc_logic > ap_sync_grp_myproject_fu_179_ap_ready;
    sc_signal< sc_logic > ap_sync_grp_myproject_fu_179_ap_done;
    sc_signal< bool > ap_block_state7_on_subcall_done;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state8;
    sc_signal< sc_lv<16> > grp_myproject_fu_179_layer13_out_0_V;
    sc_signal< sc_lv<16> > grp_myproject_fu_179_layer13_out_1_V;
    sc_signal< sc_lv<16> > grp_myproject_fu_179_layer13_out_2_V;
    sc_signal< sc_lv<16> > grp_myproject_fu_179_layer13_out_3_V;
    sc_signal< sc_lv<16> > grp_myproject_fu_179_layer13_out_4_V;
    sc_signal< sc_logic > grp_myproject_fu_179_ap_start;
    sc_signal< sc_logic > grp_myproject_fu_179_layer13_out_0_V_ap_vld;
    sc_signal< sc_logic > grp_myproject_fu_179_layer13_out_1_V_ap_vld;
    sc_signal< sc_logic > grp_myproject_fu_179_layer13_out_2_V_ap_vld;
    sc_signal< sc_logic > grp_myproject_fu_179_layer13_out_3_V_ap_vld;
    sc_signal< sc_logic > grp_myproject_fu_179_layer13_out_4_V_ap_vld;
    sc_signal< sc_logic > grp_myproject_fu_179_ap_idle;
    sc_signal< sc_logic > grp_myproject_fu_179_ap_continue;
    sc_signal< sc_lv<3> > ap_phi_mux_i2_0_phi_fu_171_p4;
    sc_signal< sc_logic > grp_myproject_fu_179_ap_start_reg;
    sc_signal< sc_logic > ap_sync_reg_grp_myproject_fu_179_ap_ready;
    sc_signal< sc_logic > ap_sync_reg_grp_myproject_fu_179_ap_done;
    sc_signal< sc_lv<256> > in_local_V_fu_108;
    sc_signal< sc_lv<16> > out_local_0_fu_112;
    sc_signal< sc_lv<16> > out_local_1_fu_116;
    sc_signal< sc_lv<16> > out_local_2_fu_120;
    sc_signal< sc_lv<16> > out_local_3_fu_124;
    sc_signal< sc_lv<16> > out_local_4_fu_128;
    sc_signal< sc_lv<256> > in_local_V_1_fu_387_p2;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<1> > icmp_ln20_fu_209_p2;
    sc_signal< sc_lv<32> > add_ln22_fu_215_p2;
    sc_signal< sc_lv<4> > trunc_ln203_fu_247_p1;
    sc_signal< sc_lv<9> > zext_ln203_fu_274_p1;
    sc_signal< sc_lv<9> > zext_ln203_1_fu_277_p1;
    sc_signal< sc_lv<9> > xor_ln203_fu_284_p2;
    sc_signal< sc_lv<9> > select_ln203_fu_290_p3;
    sc_signal< sc_lv<9> > select_ln203_2_fu_304_p3;
    sc_signal< sc_lv<9> > select_ln203_1_fu_297_p3;
    sc_signal< sc_lv<9> > xor_ln203_1_fu_311_p2;
    sc_signal< sc_lv<256> > zext_ln203_2_fu_280_p1;
    sc_signal< sc_lv<256> > zext_ln203_3_fu_317_p1;
    sc_signal< sc_lv<256> > zext_ln203_4_fu_321_p1;
    sc_signal< sc_lv<256> > zext_ln203_5_fu_325_p1;
    sc_signal< sc_lv<256> > shl_ln203_1_fu_335_p2;
    sc_signal< sc_lv<256> > lshr_ln203_fu_341_p2;
    sc_signal< sc_lv<256> > tmp_513_fu_356_p4;
    sc_signal< sc_lv<256> > xor_ln203_2_fu_371_p2;
    sc_signal< sc_lv<256> > select_ln203_3_fu_365_p3;
    sc_signal< sc_lv<256> > and_ln203_1_fu_376_p2;
    sc_signal< sc_lv<256> > and_ln203_2_fu_382_p2;
    sc_signal< sc_lv<1> > icmp_ln37_fu_446_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > regslice_both_out_data_V_U_apdone_blk;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< sc_logic > regslice_both_in_data_V_U_apdone_blk;
    sc_signal< sc_lv<16> > in_r_TDATA_int;
    sc_signal< sc_logic > in_r_TVALID_int;
    sc_signal< sc_logic > in_r_TREADY_int;
    sc_signal< sc_logic > regslice_both_in_data_V_U_ack_in;
    sc_signal< sc_logic > regslice_both_w1_in_last_U_apdone_blk;
    sc_signal< sc_logic > in_r_TLAST_int;
    sc_signal< sc_logic > regslice_both_w1_in_last_U_vld_out;
    sc_signal< sc_logic > regslice_both_w1_in_last_U_ack_in;
    sc_signal< sc_logic > out_r_TVALID_int;
    sc_signal< sc_logic > out_r_TREADY_int;
    sc_signal< sc_logic > regslice_both_out_data_V_U_vld_out;
    sc_signal< sc_logic > regslice_both_w1_out_last_U_apdone_blk;
    sc_signal< sc_logic > out_r_TLAST_int;
    sc_signal< sc_logic > regslice_both_w1_out_last_U_ack_in_dummy;
    sc_signal< sc_logic > regslice_both_w1_out_last_U_vld_out;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_state2;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_state6;
    static const sc_lv<7> ap_ST_fsm_state7;
    static const sc_lv<7> ap_ST_fsm_pp1_stage0;
    static const sc_lv<7> ap_ST_fsm_state11;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const int C_S_AXI_DATA_WIDTH;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<8> ap_const_lv8_F;
    static const sc_lv<9> ap_const_lv9_FF;
    static const sc_lv<256> ap_const_lv256_lc_1;
    static const sc_lv<32> ap_const_lv32_FF;
    static const sc_lv<3> ap_const_lv3_5;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_add_ln22_fu_215_p2();
    void thread_and_ln203_1_fu_376_p2();
    void thread_and_ln203_2_fu_382_p2();
    void thread_and_ln203_fu_347_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state10_io();
    void thread_ap_block_state10_pp1_stage0_iter2();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state5_pp0_stage0_iter2();
    void thread_ap_block_state7_on_subcall_done();
    void thread_ap_block_state8_pp1_stage0_iter0();
    void thread_ap_block_state9_io();
    void thread_ap_block_state9_pp1_stage0_iter1();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_condition_pp1_exit_iter0_state8();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_i2_0_phi_fu_171_p4();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_grp_myproject_fu_179_ap_done();
    void thread_ap_sync_grp_myproject_fu_179_ap_ready();
    void thread_empty_29_fu_259_p2();
    void thread_grp_myproject_fu_179_ap_continue();
    void thread_grp_myproject_fu_179_ap_start();
    void thread_i_1_fu_408_p2();
    void thread_i_fu_241_p2();
    void thread_icmp_ln203_fu_265_p2();
    void thread_icmp_ln20_fu_209_p2();
    void thread_icmp_ln24_fu_235_p2();
    void thread_icmp_ln33_fu_402_p2();
    void thread_icmp_ln37_1_fu_398_p2();
    void thread_icmp_ln37_fu_446_p2();
    void thread_in_local_V_1_fu_387_p2();
    void thread_in_r_TDATA_blk_n();
    void thread_in_r_TREADY();
    void thread_in_r_TREADY_int();
    void thread_lshr_ln203_fu_341_p2();
    void thread_out_r_TDATA_blk_n();
    void thread_out_r_TLAST_int();
    void thread_out_r_TVALID();
    void thread_out_r_TVALID_int();
    void thread_select_ln203_1_fu_297_p3();
    void thread_select_ln203_2_fu_304_p3();
    void thread_select_ln203_3_fu_365_p3();
    void thread_select_ln203_fu_290_p3();
    void thread_select_ln22_fu_221_p3();
    void thread_shl_ln203_1_fu_335_p2();
    void thread_shl_ln203_fu_329_p2();
    void thread_shl_ln_fu_251_p3();
    void thread_tmp_513_fu_356_p4();
    void thread_trunc_ln203_fu_247_p1();
    void thread_vector_rows_0_ack_out();
    void thread_xor_ln203_1_fu_311_p2();
    void thread_xor_ln203_2_fu_371_p2();
    void thread_xor_ln203_fu_284_p2();
    void thread_zext_ln203_1_fu_277_p1();
    void thread_zext_ln203_2_fu_280_p1();
    void thread_zext_ln203_3_fu_317_p1();
    void thread_zext_ln203_4_fu_321_p1();
    void thread_zext_ln203_5_fu_325_p1();
    void thread_zext_ln203_fu_274_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
