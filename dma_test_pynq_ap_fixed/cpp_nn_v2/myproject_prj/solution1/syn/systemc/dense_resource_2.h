// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _dense_resource_2_HH_
#define _dense_resource_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "myproject_axi_muxkbM.h"
#include "dense_resource_2_lbW.h"

namespace ap_rtl {

struct dense_resource_2 : public sc_module {
    // Port declarations 49
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<6> > data_0_V;
    sc_in< sc_lv<6> > data_1_V;
    sc_in< sc_lv<6> > data_2_V;
    sc_in< sc_lv<6> > data_3_V;
    sc_in< sc_lv<6> > data_4_V;
    sc_in< sc_lv<6> > data_5_V;
    sc_in< sc_lv<6> > data_6_V;
    sc_in< sc_lv<6> > data_7_V;
    sc_in< sc_lv<6> > data_8_V;
    sc_in< sc_lv<6> > data_9_V;
    sc_in< sc_lv<6> > data_10_V;
    sc_in< sc_lv<6> > data_11_V;
    sc_in< sc_lv<6> > data_12_V;
    sc_in< sc_lv<6> > data_13_V;
    sc_in< sc_lv<6> > data_14_V;
    sc_in< sc_lv<6> > data_15_V;
    sc_in< sc_lv<6> > data_16_V;
    sc_in< sc_lv<6> > data_17_V;
    sc_in< sc_lv<6> > data_18_V;
    sc_in< sc_lv<6> > data_19_V;
    sc_in< sc_lv<6> > data_20_V;
    sc_in< sc_lv<6> > data_21_V;
    sc_in< sc_lv<6> > data_22_V;
    sc_in< sc_lv<6> > data_23_V;
    sc_in< sc_lv<6> > data_24_V;
    sc_in< sc_lv<6> > data_25_V;
    sc_in< sc_lv<6> > data_26_V;
    sc_in< sc_lv<6> > data_27_V;
    sc_in< sc_lv<6> > data_28_V;
    sc_in< sc_lv<6> > data_29_V;
    sc_in< sc_lv<6> > data_30_V;
    sc_in< sc_lv<6> > data_31_V;
    sc_out< sc_lv<16> > res_0_V;
    sc_out< sc_logic > res_0_V_ap_vld;
    sc_out< sc_lv<16> > res_1_V;
    sc_out< sc_logic > res_1_V_ap_vld;
    sc_out< sc_lv<16> > res_2_V;
    sc_out< sc_logic > res_2_V_ap_vld;
    sc_out< sc_lv<16> > res_3_V;
    sc_out< sc_logic > res_3_V_ap_vld;
    sc_out< sc_lv<16> > res_4_V;
    sc_out< sc_logic > res_4_V_ap_vld;


    // Module declarations
    dense_resource_2(sc_module_name name);
    SC_HAS_PROCESS(dense_resource_2);

    ~dense_resource_2();

    sc_trace_file* mVcdFile;

    dense_resource_2_lbW* w11_V_U;
    myproject_axi_muxkbM<1,1,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,7>* myproject_axi_muxkbM_U530;
    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<2> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<1> > icmp_ln64_fu_696_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<5> > w11_V_address0;
    sc_signal< sc_logic > w11_V_ce0;
    sc_signal< sc_lv<35> > w11_V_q0;
    sc_signal< sc_lv<5> > w_index15_reg_388;
    sc_signal< sc_lv<16> > acc_V_0_013_reg_417;
    sc_signal< sc_lv<16> > acc_V_1_011_reg_431;
    sc_signal< sc_lv<16> > acc_V_2_09_reg_445;
    sc_signal< sc_lv<16> > acc_V_3_07_reg_459;
    sc_signal< sc_lv<16> > acc_V_4_05_reg_473;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p34;
    sc_signal< sc_lv<7> > tmp_3_reg_896;
    sc_signal< sc_lv<7> > tmp_3_reg_896_pp0_iter1_reg;
    sc_signal< sc_lv<5> > w_index_fu_690_p2;
    sc_signal< sc_lv<5> > w_index_reg_906;
    sc_signal< sc_lv<1> > icmp_ln64_reg_911;
    sc_signal< sc_lv<1> > icmp_ln64_reg_911_pp0_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln64_reg_911_pp0_iter2_reg;
    sc_signal< sc_lv<7> > trunc_ln76_fu_702_p1;
    sc_signal< sc_lv<7> > trunc_ln76_reg_915;
    sc_signal< sc_lv<7> > tmp_4_reg_920;
    sc_signal< sc_lv<7> > tmp_5_reg_925;
    sc_signal< sc_lv<7> > tmp_6_reg_930;
    sc_signal< sc_lv<7> > tmp_7_reg_935;
    sc_signal< sc_lv<12> > trunc_ln4_reg_940;
    sc_signal< sc_lv<12> > trunc_ln708_s_reg_945;
    sc_signal< sc_lv<12> > trunc_ln708_107_reg_950;
    sc_signal< sc_lv<12> > trunc_ln708_108_reg_955;
    sc_signal< sc_lv<12> > trunc_ln708_109_reg_960;
    sc_signal< sc_lv<16> > acc_0_V_fu_847_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_lv<16> > acc_1_V_fu_857_p2;
    sc_signal< sc_lv<16> > acc_2_V_fu_867_p2;
    sc_signal< sc_lv<16> > acc_3_V_fu_877_p2;
    sc_signal< sc_lv<16> > acc_4_V_fu_887_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_state1;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_lv<5> > ap_phi_mux_w_index15_phi_fu_392_p6;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln76_fu_685_p1;
    sc_signal< bool > ap_block_pp0_stage0_01001;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p1;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p2;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p3;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p4;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p5;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p6;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p7;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p8;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p9;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p10;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p11;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p12;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p13;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p14;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p15;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p16;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p17;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p18;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p19;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p20;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p21;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p22;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p23;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p24;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p25;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p26;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p27;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p28;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p29;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p30;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p31;
    sc_signal< sc_lv<7> > tmp_3_fu_615_p32;
    sc_signal< sc_lv<7> > mul_ln1118_fu_752_p0;
    sc_signal< sc_lv<14> > sext_ln1116_fu_746_p1;
    sc_signal< sc_lv<7> > mul_ln1118_fu_752_p1;
    sc_signal< sc_lv<14> > mul_ln1118_fu_752_p2;
    sc_signal< sc_lv<7> > mul_ln1118_20_fu_771_p0;
    sc_signal< sc_lv<7> > mul_ln1118_20_fu_771_p1;
    sc_signal< sc_lv<14> > mul_ln1118_20_fu_771_p2;
    sc_signal< sc_lv<7> > mul_ln1118_21_fu_790_p0;
    sc_signal< sc_lv<7> > mul_ln1118_21_fu_790_p1;
    sc_signal< sc_lv<14> > mul_ln1118_21_fu_790_p2;
    sc_signal< sc_lv<7> > mul_ln1118_22_fu_809_p0;
    sc_signal< sc_lv<7> > mul_ln1118_22_fu_809_p1;
    sc_signal< sc_lv<14> > mul_ln1118_22_fu_809_p2;
    sc_signal< sc_lv<7> > mul_ln1118_23_fu_828_p0;
    sc_signal< sc_lv<7> > mul_ln1118_23_fu_828_p1;
    sc_signal< sc_lv<14> > mul_ln1118_23_fu_828_p2;
    sc_signal< sc_lv<16> > sext_ln708_fu_844_p1;
    sc_signal< sc_lv<16> > sext_ln708_1_fu_854_p1;
    sc_signal< sc_lv<16> > sext_ln708_2_fu_864_p1;
    sc_signal< sc_lv<16> > sext_ln708_3_fu_874_p1;
    sc_signal< sc_lv<16> > sext_ln708_4_fu_884_p1;
    sc_signal< sc_lv<2> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0_0to2;
    sc_signal< sc_logic > ap_reset_idle_pp0;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< bool > ap_condition_176;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_ST_fsm_state1;
    static const sc_lv<2> ap_ST_fsm_pp0_stage0;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_1;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<16> ap_const_lv16_FFC0;
    static const sc_lv<16> ap_const_lv16_FF60;
    static const sc_lv<16> ap_const_lv16_FEA0;
    static const sc_lv<16> ap_const_lv16_A0;
    static const sc_lv<16> ap_const_lv16_180;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1B;
    static const sc_lv<32> ap_const_lv32_1C;
    static const sc_lv<32> ap_const_lv32_22;
    static const sc_lv<32> ap_const_lv32_2;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_acc_0_V_fu_847_p2();
    void thread_acc_1_V_fu_857_p2();
    void thread_acc_2_V_fu_867_p2();
    void thread_acc_3_V_fu_877_p2();
    void thread_acc_4_V_fu_887_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_01001();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state1();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_condition_176();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_reg_pp0_iter0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp0_0to2();
    void thread_ap_phi_mux_w_index15_phi_fu_392_p6();
    void thread_ap_ready();
    void thread_ap_reset_idle_pp0();
    void thread_icmp_ln64_fu_696_p2();
    void thread_mul_ln1118_20_fu_771_p0();
    void thread_mul_ln1118_20_fu_771_p1();
    void thread_mul_ln1118_20_fu_771_p2();
    void thread_mul_ln1118_21_fu_790_p0();
    void thread_mul_ln1118_21_fu_790_p1();
    void thread_mul_ln1118_21_fu_790_p2();
    void thread_mul_ln1118_22_fu_809_p0();
    void thread_mul_ln1118_22_fu_809_p1();
    void thread_mul_ln1118_22_fu_809_p2();
    void thread_mul_ln1118_23_fu_828_p0();
    void thread_mul_ln1118_23_fu_828_p1();
    void thread_mul_ln1118_23_fu_828_p2();
    void thread_mul_ln1118_fu_752_p0();
    void thread_mul_ln1118_fu_752_p1();
    void thread_mul_ln1118_fu_752_p2();
    void thread_res_0_V();
    void thread_res_0_V_ap_vld();
    void thread_res_1_V();
    void thread_res_1_V_ap_vld();
    void thread_res_2_V();
    void thread_res_2_V_ap_vld();
    void thread_res_3_V();
    void thread_res_3_V_ap_vld();
    void thread_res_4_V();
    void thread_res_4_V_ap_vld();
    void thread_sext_ln1116_fu_746_p1();
    void thread_sext_ln708_1_fu_854_p1();
    void thread_sext_ln708_2_fu_864_p1();
    void thread_sext_ln708_3_fu_874_p1();
    void thread_sext_ln708_4_fu_884_p1();
    void thread_sext_ln708_fu_844_p1();
    void thread_tmp_3_fu_615_p1();
    void thread_tmp_3_fu_615_p10();
    void thread_tmp_3_fu_615_p11();
    void thread_tmp_3_fu_615_p12();
    void thread_tmp_3_fu_615_p13();
    void thread_tmp_3_fu_615_p14();
    void thread_tmp_3_fu_615_p15();
    void thread_tmp_3_fu_615_p16();
    void thread_tmp_3_fu_615_p17();
    void thread_tmp_3_fu_615_p18();
    void thread_tmp_3_fu_615_p19();
    void thread_tmp_3_fu_615_p2();
    void thread_tmp_3_fu_615_p20();
    void thread_tmp_3_fu_615_p21();
    void thread_tmp_3_fu_615_p22();
    void thread_tmp_3_fu_615_p23();
    void thread_tmp_3_fu_615_p24();
    void thread_tmp_3_fu_615_p25();
    void thread_tmp_3_fu_615_p26();
    void thread_tmp_3_fu_615_p27();
    void thread_tmp_3_fu_615_p28();
    void thread_tmp_3_fu_615_p29();
    void thread_tmp_3_fu_615_p3();
    void thread_tmp_3_fu_615_p30();
    void thread_tmp_3_fu_615_p31();
    void thread_tmp_3_fu_615_p32();
    void thread_tmp_3_fu_615_p4();
    void thread_tmp_3_fu_615_p5();
    void thread_tmp_3_fu_615_p6();
    void thread_tmp_3_fu_615_p7();
    void thread_tmp_3_fu_615_p8();
    void thread_tmp_3_fu_615_p9();
    void thread_trunc_ln76_fu_702_p1();
    void thread_w11_V_address0();
    void thread_w11_V_ce0();
    void thread_w_index_fu_690_p2();
    void thread_zext_ln76_fu_685_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
