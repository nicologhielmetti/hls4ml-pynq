// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "myproject_axi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic myproject_axi::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic myproject_axi::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> myproject_axi::ap_ST_fsm_state1 = "1";
const sc_lv<7> myproject_axi::ap_ST_fsm_state2 = "10";
const sc_lv<7> myproject_axi::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<7> myproject_axi::ap_ST_fsm_state6 = "1000";
const sc_lv<7> myproject_axi::ap_ST_fsm_state7 = "10000";
const sc_lv<7> myproject_axi::ap_ST_fsm_pp1_stage0 = "100000";
const sc_lv<7> myproject_axi::ap_ST_fsm_state11 = "1000000";
const bool myproject_axi::ap_const_boolean_1 = true;
const sc_lv<32> myproject_axi::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> myproject_axi::ap_const_lv32_2 = "10";
const bool myproject_axi::ap_const_boolean_0 = false;
const sc_lv<1> myproject_axi::ap_const_lv1_0 = "0";
const sc_lv<32> myproject_axi::ap_const_lv32_5 = "101";
const int myproject_axi::C_S_AXI_DATA_WIDTH = "100000";
const sc_lv<32> myproject_axi::ap_const_lv32_1 = "1";
const sc_lv<32> myproject_axi::ap_const_lv32_3 = "11";
const sc_lv<1> myproject_axi::ap_const_lv1_1 = "1";
const sc_lv<32> myproject_axi::ap_const_lv32_4 = "100";
const sc_lv<5> myproject_axi::ap_const_lv5_0 = "00000";
const sc_lv<3> myproject_axi::ap_const_lv3_0 = "000";
const sc_lv<5> myproject_axi::ap_const_lv5_10 = "10000";
const sc_lv<5> myproject_axi::ap_const_lv5_1 = "1";
const sc_lv<4> myproject_axi::ap_const_lv4_0 = "0000";
const sc_lv<8> myproject_axi::ap_const_lv8_F = "1111";
const sc_lv<9> myproject_axi::ap_const_lv9_FF = "11111111";
const sc_lv<256> myproject_axi::ap_const_lv256_lc_1 = "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
const sc_lv<32> myproject_axi::ap_const_lv32_FF = "11111111";
const sc_lv<3> myproject_axi::ap_const_lv3_5 = "101";
const sc_lv<3> myproject_axi::ap_const_lv3_1 = "1";
const sc_lv<3> myproject_axi::ap_const_lv3_4 = "100";
const sc_lv<32> myproject_axi::ap_const_lv32_6 = "110";

myproject_axi::myproject_axi(sc_module_name name) : sc_module(name), mVcdFile(0) {
    myproject_axi_AXILiteS_s_axi_U = new myproject_axi_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>("myproject_axi_AXILiteS_s_axi_U");
    myproject_axi_AXILiteS_s_axi_U->AWVALID(s_axi_AXILiteS_AWVALID);
    myproject_axi_AXILiteS_s_axi_U->AWREADY(s_axi_AXILiteS_AWREADY);
    myproject_axi_AXILiteS_s_axi_U->AWADDR(s_axi_AXILiteS_AWADDR);
    myproject_axi_AXILiteS_s_axi_U->WVALID(s_axi_AXILiteS_WVALID);
    myproject_axi_AXILiteS_s_axi_U->WREADY(s_axi_AXILiteS_WREADY);
    myproject_axi_AXILiteS_s_axi_U->WDATA(s_axi_AXILiteS_WDATA);
    myproject_axi_AXILiteS_s_axi_U->WSTRB(s_axi_AXILiteS_WSTRB);
    myproject_axi_AXILiteS_s_axi_U->ARVALID(s_axi_AXILiteS_ARVALID);
    myproject_axi_AXILiteS_s_axi_U->ARREADY(s_axi_AXILiteS_ARREADY);
    myproject_axi_AXILiteS_s_axi_U->ARADDR(s_axi_AXILiteS_ARADDR);
    myproject_axi_AXILiteS_s_axi_U->RVALID(s_axi_AXILiteS_RVALID);
    myproject_axi_AXILiteS_s_axi_U->RREADY(s_axi_AXILiteS_RREADY);
    myproject_axi_AXILiteS_s_axi_U->RDATA(s_axi_AXILiteS_RDATA);
    myproject_axi_AXILiteS_s_axi_U->RRESP(s_axi_AXILiteS_RRESP);
    myproject_axi_AXILiteS_s_axi_U->BVALID(s_axi_AXILiteS_BVALID);
    myproject_axi_AXILiteS_s_axi_U->BREADY(s_axi_AXILiteS_BREADY);
    myproject_axi_AXILiteS_s_axi_U->BRESP(s_axi_AXILiteS_BRESP);
    myproject_axi_AXILiteS_s_axi_U->ACLK(ap_clk);
    myproject_axi_AXILiteS_s_axi_U->ARESET(ap_rst_n_inv);
    myproject_axi_AXILiteS_s_axi_U->ACLK_EN(ap_var_for_const0);
    myproject_axi_AXILiteS_s_axi_U->vector_rows(vector_rows);
    grp_myproject_fu_179 = new myproject("grp_myproject_fu_179");
    grp_myproject_fu_179->fc1_input_V(in_local_V_fu_108);
    grp_myproject_fu_179->layer13_out_0_V(grp_myproject_fu_179_layer13_out_0_V);
    grp_myproject_fu_179->layer13_out_1_V(grp_myproject_fu_179_layer13_out_1_V);
    grp_myproject_fu_179->layer13_out_2_V(grp_myproject_fu_179_layer13_out_2_V);
    grp_myproject_fu_179->layer13_out_3_V(grp_myproject_fu_179_layer13_out_3_V);
    grp_myproject_fu_179->layer13_out_4_V(grp_myproject_fu_179_layer13_out_4_V);
    grp_myproject_fu_179->ap_clk(ap_clk);
    grp_myproject_fu_179->ap_rst(ap_rst_n_inv);
    grp_myproject_fu_179->fc1_input_V_ap_vld(ap_var_for_const0);
    grp_myproject_fu_179->ap_start(grp_myproject_fu_179_ap_start);
    grp_myproject_fu_179->layer13_out_0_V_ap_vld(grp_myproject_fu_179_layer13_out_0_V_ap_vld);
    grp_myproject_fu_179->layer13_out_1_V_ap_vld(grp_myproject_fu_179_layer13_out_1_V_ap_vld);
    grp_myproject_fu_179->layer13_out_2_V_ap_vld(grp_myproject_fu_179_layer13_out_2_V_ap_vld);
    grp_myproject_fu_179->layer13_out_3_V_ap_vld(grp_myproject_fu_179_layer13_out_3_V_ap_vld);
    grp_myproject_fu_179->layer13_out_4_V_ap_vld(grp_myproject_fu_179_layer13_out_4_V_ap_vld);
    grp_myproject_fu_179->ap_done(grp_myproject_fu_179_ap_done);
    grp_myproject_fu_179->ap_ready(grp_myproject_fu_179_ap_ready);
    grp_myproject_fu_179->ap_idle(grp_myproject_fu_179_ap_idle);
    grp_myproject_fu_179->ap_continue(grp_myproject_fu_179_ap_continue);
    myproject_axi_muxqcK_U856 = new myproject_axi_muxqcK<1,1,16,16,16,16,16,3,16>("myproject_axi_muxqcK_U856");
    myproject_axi_muxqcK_U856->din0(out_local_0_fu_112);
    myproject_axi_muxqcK_U856->din1(out_local_1_fu_116);
    myproject_axi_muxqcK_U856->din2(out_local_2_fu_120);
    myproject_axi_muxqcK_U856->din3(out_local_3_fu_124);
    myproject_axi_muxqcK_U856->din4(out_local_4_fu_128);
    myproject_axi_muxqcK_U856->din5(i2_0_reg_167);
    myproject_axi_muxqcK_U856->dout(tmp_2_fu_429_p7);
    regslice_both_in_data_V_U = new regslice_both<16>("regslice_both_in_data_V_U");
    regslice_both_in_data_V_U->ap_clk(ap_clk);
    regslice_both_in_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_in_data_V_U->data_in(in_r_TDATA);
    regslice_both_in_data_V_U->vld_in(in_r_TVALID);
    regslice_both_in_data_V_U->ack_in(regslice_both_in_data_V_U_ack_in);
    regslice_both_in_data_V_U->data_out(in_r_TDATA_int);
    regslice_both_in_data_V_U->vld_out(in_r_TVALID_int);
    regslice_both_in_data_V_U->ack_out(in_r_TREADY_int);
    regslice_both_in_data_V_U->apdone_blk(regslice_both_in_data_V_U_apdone_blk);
    regslice_both_w1_in_last_U = new regslice_both_w1<1>("regslice_both_w1_in_last_U");
    regslice_both_w1_in_last_U->ap_clk(ap_clk);
    regslice_both_w1_in_last_U->ap_rst(ap_rst_n_inv);
    regslice_both_w1_in_last_U->data_in(in_r_TLAST);
    regslice_both_w1_in_last_U->vld_in(in_r_TVALID);
    regslice_both_w1_in_last_U->ack_in(regslice_both_w1_in_last_U_ack_in);
    regslice_both_w1_in_last_U->data_out(in_r_TLAST_int);
    regslice_both_w1_in_last_U->vld_out(regslice_both_w1_in_last_U_vld_out);
    regslice_both_w1_in_last_U->ack_out(in_r_TREADY_int);
    regslice_both_w1_in_last_U->apdone_blk(regslice_both_w1_in_last_U_apdone_blk);
    regslice_both_out_data_V_U = new regslice_both<16>("regslice_both_out_data_V_U");
    regslice_both_out_data_V_U->ap_clk(ap_clk);
    regslice_both_out_data_V_U->ap_rst(ap_rst_n_inv);
    regslice_both_out_data_V_U->data_in(tmp_2_fu_429_p7);
    regslice_both_out_data_V_U->vld_in(out_r_TVALID_int);
    regslice_both_out_data_V_U->ack_in(out_r_TREADY_int);
    regslice_both_out_data_V_U->data_out(out_r_TDATA);
    regslice_both_out_data_V_U->vld_out(regslice_both_out_data_V_U_vld_out);
    regslice_both_out_data_V_U->ack_out(out_r_TREADY);
    regslice_both_out_data_V_U->apdone_blk(regslice_both_out_data_V_U_apdone_blk);
    regslice_both_w1_out_last_U = new regslice_both_w1<1>("regslice_both_w1_out_last_U");
    regslice_both_w1_out_last_U->ap_clk(ap_clk);
    regslice_both_w1_out_last_U->ap_rst(ap_rst_n_inv);
    regslice_both_w1_out_last_U->data_in(out_r_TLAST_int);
    regslice_both_w1_out_last_U->vld_in(out_r_TVALID_int);
    regslice_both_w1_out_last_U->ack_in(regslice_both_w1_out_last_U_ack_in_dummy);
    regslice_both_w1_out_last_U->data_out(out_r_TLAST);
    regslice_both_w1_out_last_U->vld_out(regslice_both_w1_out_last_U_vld_out);
    regslice_both_w1_out_last_U->ack_out(out_r_TREADY);
    regslice_both_w1_out_last_U->apdone_blk(regslice_both_w1_out_last_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln22_fu_215_p2);
    sensitive << ( row_count );

    SC_METHOD(thread_and_ln203_1_fu_376_p2);
    sensitive << ( in_local_V_fu_108 );
    sensitive << ( xor_ln203_2_fu_371_p2 );

    SC_METHOD(thread_and_ln203_2_fu_382_p2);
    sensitive << ( and_ln203_reg_543 );
    sensitive << ( select_ln203_3_fu_365_p3 );

    SC_METHOD(thread_and_ln203_fu_347_p2);
    sensitive << ( shl_ln203_1_fu_335_p2 );
    sensitive << ( lshr_ln203_fu_341_p2 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln24_fu_235_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln24_fu_235_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state9_io );
    sensitive << ( ap_block_state10_io );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_block_state9_io );
    sensitive << ( ap_block_state10_io );

    SC_METHOD(thread_ap_block_state10_io);
    sensitive << ( icmp_ln33_reg_554_pp1_iter1_reg );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_ap_block_state10_pp1_stage0_iter2);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);
    sensitive << ( icmp_ln24_fu_235_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state7_on_subcall_done);
    sensitive << ( ap_sync_grp_myproject_fu_179_ap_ready );
    sensitive << ( ap_sync_grp_myproject_fu_179_ap_done );

    SC_METHOD(thread_ap_block_state8_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state9_io);
    sensitive << ( icmp_ln33_reg_554 );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter1);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln24_fu_235_p2 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state8);
    sensitive << ( icmp_ln33_fu_402_p2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_phi_mux_i2_0_phi_fu_171_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln33_reg_554 );
    sensitive << ( i2_0_reg_167 );
    sensitive << ( i_1_reg_558 );

    SC_METHOD(thread_ap_rst_n_inv);
    sensitive << ( ap_rst_n );

    SC_METHOD(thread_ap_sync_grp_myproject_fu_179_ap_done);
    sensitive << ( grp_myproject_fu_179_ap_done );
    sensitive << ( ap_sync_reg_grp_myproject_fu_179_ap_done );

    SC_METHOD(thread_ap_sync_grp_myproject_fu_179_ap_ready);
    sensitive << ( grp_myproject_fu_179_ap_ready );
    sensitive << ( ap_sync_reg_grp_myproject_fu_179_ap_ready );

    SC_METHOD(thread_empty_29_fu_259_p2);
    sensitive << ( shl_ln_fu_251_p3 );

    SC_METHOD(thread_grp_myproject_fu_179_ap_continue);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_block_state7_on_subcall_done );

    SC_METHOD(thread_grp_myproject_fu_179_ap_start);
    sensitive << ( grp_myproject_fu_179_ap_start_reg );

    SC_METHOD(thread_i_1_fu_408_p2);
    sensitive << ( ap_phi_mux_i2_0_phi_fu_171_p4 );

    SC_METHOD(thread_i_fu_241_p2);
    sensitive << ( i_0_reg_156 );

    SC_METHOD(thread_icmp_ln203_fu_265_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln24_fu_235_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( shl_ln_fu_251_p3 );
    sensitive << ( empty_29_fu_259_p2 );

    SC_METHOD(thread_icmp_ln20_fu_209_p2);
    sensitive << ( vector_rows_0_data_reg );
    sensitive << ( row_count );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_icmp_ln24_fu_235_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( i_0_reg_156 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_icmp_ln33_fu_402_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_phi_mux_i2_0_phi_fu_171_p4 );

    SC_METHOD(thread_icmp_ln37_1_fu_398_p2);
    sensitive << ( vector_rows_read_reg_495 );
    sensitive << ( select_ln22_reg_500 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_icmp_ln37_fu_446_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln33_reg_554 );
    sensitive << ( i2_0_reg_167 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_in_local_V_1_fu_387_p2);
    sensitive << ( and_ln203_1_fu_376_p2 );
    sensitive << ( and_ln203_2_fu_382_p2 );

    SC_METHOD(thread_in_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln24_fu_235_p2 );
    sensitive << ( in_r_TVALID_int );

    SC_METHOD(thread_in_r_TREADY);
    sensitive << ( in_r_TVALID );
    sensitive << ( regslice_both_in_data_V_U_ack_in );

    SC_METHOD(thread_in_r_TREADY_int);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln24_fu_235_p2 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_lshr_ln203_fu_341_p2);
    sensitive << ( zext_ln203_5_fu_325_p1 );

    SC_METHOD(thread_out_r_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln33_reg_554 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( icmp_ln33_reg_554_pp1_iter1_reg );
    sensitive << ( out_r_TREADY_int );

    SC_METHOD(thread_out_r_TLAST_int);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln33_reg_554 );
    sensitive << ( icmp_ln37_1_reg_549 );
    sensitive << ( ap_block_pp1_stage0_01001 );
    sensitive << ( icmp_ln37_fu_446_p2 );

    SC_METHOD(thread_out_r_TVALID);
    sensitive << ( regslice_both_out_data_V_U_vld_out );

    SC_METHOD(thread_out_r_TVALID_int);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln33_reg_554 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_select_ln203_1_fu_297_p3);
    sensitive << ( icmp_ln203_reg_529 );
    sensitive << ( zext_ln203_fu_274_p1 );
    sensitive << ( zext_ln203_1_fu_277_p1 );

    SC_METHOD(thread_select_ln203_2_fu_304_p3);
    sensitive << ( icmp_ln203_reg_529 );
    sensitive << ( zext_ln203_fu_274_p1 );
    sensitive << ( xor_ln203_fu_284_p2 );

    SC_METHOD(thread_select_ln203_3_fu_365_p3);
    sensitive << ( icmp_ln203_reg_529_pp0_iter1_reg );
    sensitive << ( shl_ln203_reg_537 );
    sensitive << ( tmp_513_fu_356_p4 );

    SC_METHOD(thread_select_ln203_fu_290_p3);
    sensitive << ( icmp_ln203_reg_529 );
    sensitive << ( zext_ln203_fu_274_p1 );
    sensitive << ( zext_ln203_1_fu_277_p1 );

    SC_METHOD(thread_select_ln22_fu_221_p3);
    sensitive << ( icmp_ln20_fu_209_p2 );
    sensitive << ( add_ln22_fu_215_p2 );

    SC_METHOD(thread_shl_ln203_1_fu_335_p2);
    sensitive << ( zext_ln203_4_fu_321_p1 );

    SC_METHOD(thread_shl_ln203_fu_329_p2);
    sensitive << ( zext_ln203_2_fu_280_p1 );
    sensitive << ( zext_ln203_3_fu_317_p1 );

    SC_METHOD(thread_shl_ln_fu_251_p3);
    sensitive << ( trunc_ln203_fu_247_p1 );

    SC_METHOD(thread_tmp_513_fu_356_p4);
    sensitive << ( shl_ln203_reg_537 );

    SC_METHOD(thread_trunc_ln203_fu_247_p1);
    sensitive << ( i_0_reg_156 );

    SC_METHOD(thread_vector_rows_0_ack_out);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( regslice_both_out_data_V_U_apdone_blk );

    SC_METHOD(thread_xor_ln203_1_fu_311_p2);
    sensitive << ( select_ln203_fu_290_p3 );

    SC_METHOD(thread_xor_ln203_2_fu_371_p2);
    sensitive << ( and_ln203_reg_543 );

    SC_METHOD(thread_xor_ln203_fu_284_p2);
    sensitive << ( zext_ln203_fu_274_p1 );

    SC_METHOD(thread_zext_ln203_1_fu_277_p1);
    sensitive << ( empty_29_reg_524 );

    SC_METHOD(thread_zext_ln203_2_fu_280_p1);
    sensitive << ( empty_28_reg_514_0 );

    SC_METHOD(thread_zext_ln203_3_fu_317_p1);
    sensitive << ( select_ln203_2_fu_304_p3 );

    SC_METHOD(thread_zext_ln203_4_fu_321_p1);
    sensitive << ( select_ln203_1_fu_297_p3 );

    SC_METHOD(thread_zext_ln203_5_fu_325_p1);
    sensitive << ( xor_ln203_1_fu_311_p2 );

    SC_METHOD(thread_zext_ln203_fu_274_p1);
    sensitive << ( shl_ln_reg_519 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( icmp_ln24_fu_235_p2 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_enable_reg_pp1_iter2 );
    sensitive << ( icmp_ln33_fu_402_p2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_block_state7_on_subcall_done );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( regslice_both_out_data_V_U_apdone_blk );

    SC_THREAD(thread_hdltv_gen);
    sensitive << ( ap_clk.pos() );

    SC_THREAD(thread_ap_var_for_const0);

    vector_rows_0_data_reg = "00000000000000000000000000000000";
    vector_rows_0_vld_reg = SC_LOGIC_0;
    row_count = "00000000000000000000000000000000";
    ap_CS_fsm = "0000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    grp_myproject_fu_179_ap_start_reg = SC_LOGIC_0;
    ap_sync_reg_grp_myproject_fu_179_ap_ready = SC_LOGIC_0;
    ap_sync_reg_grp_myproject_fu_179_ap_done = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "myproject_axi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst_n, "(port)ap_rst_n");
    sc_trace(mVcdFile, in_r_TDATA, "(port)in_r_TDATA");
    sc_trace(mVcdFile, in_r_TVALID, "(port)in_r_TVALID");
    sc_trace(mVcdFile, in_r_TREADY, "(port)in_r_TREADY");
    sc_trace(mVcdFile, in_r_TLAST, "(port)in_r_TLAST");
    sc_trace(mVcdFile, out_r_TDATA, "(port)out_r_TDATA");
    sc_trace(mVcdFile, out_r_TVALID, "(port)out_r_TVALID");
    sc_trace(mVcdFile, out_r_TREADY, "(port)out_r_TREADY");
    sc_trace(mVcdFile, out_r_TLAST, "(port)out_r_TLAST");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWVALID, "(port)s_axi_AXILiteS_AWVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWREADY, "(port)s_axi_AXILiteS_AWREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_AWADDR, "(port)s_axi_AXILiteS_AWADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_WVALID, "(port)s_axi_AXILiteS_WVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_WREADY, "(port)s_axi_AXILiteS_WREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_WDATA, "(port)s_axi_AXILiteS_WDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_WSTRB, "(port)s_axi_AXILiteS_WSTRB");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARVALID, "(port)s_axi_AXILiteS_ARVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARREADY, "(port)s_axi_AXILiteS_ARREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_ARADDR, "(port)s_axi_AXILiteS_ARADDR");
    sc_trace(mVcdFile, s_axi_AXILiteS_RVALID, "(port)s_axi_AXILiteS_RVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_RREADY, "(port)s_axi_AXILiteS_RREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_RDATA, "(port)s_axi_AXILiteS_RDATA");
    sc_trace(mVcdFile, s_axi_AXILiteS_RRESP, "(port)s_axi_AXILiteS_RRESP");
    sc_trace(mVcdFile, s_axi_AXILiteS_BVALID, "(port)s_axi_AXILiteS_BVALID");
    sc_trace(mVcdFile, s_axi_AXILiteS_BREADY, "(port)s_axi_AXILiteS_BREADY");
    sc_trace(mVcdFile, s_axi_AXILiteS_BRESP, "(port)s_axi_AXILiteS_BRESP");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_rst_n_inv, "ap_rst_n_inv");
    sc_trace(mVcdFile, vector_rows, "vector_rows");
    sc_trace(mVcdFile, vector_rows_0_data_reg, "vector_rows_0_data_reg");
    sc_trace(mVcdFile, vector_rows_0_vld_reg, "vector_rows_0_vld_reg");
    sc_trace(mVcdFile, vector_rows_0_ack_out, "vector_rows_0_ack_out");
    sc_trace(mVcdFile, row_count, "row_count");
    sc_trace(mVcdFile, in_r_TDATA_blk_n, "in_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln24_fu_235_p2, "icmp_ln24_fu_235_p2");
    sc_trace(mVcdFile, out_r_TDATA_blk_n, "out_r_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, icmp_ln33_reg_554, "icmp_ln33_reg_554");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter2, "ap_enable_reg_pp1_iter2");
    sc_trace(mVcdFile, icmp_ln33_reg_554_pp1_iter1_reg, "icmp_ln33_reg_554_pp1_iter1_reg");
    sc_trace(mVcdFile, i_0_reg_156, "i_0_reg_156");
    sc_trace(mVcdFile, i2_0_reg_167, "i2_0_reg_167");
    sc_trace(mVcdFile, vector_rows_read_reg_495, "vector_rows_read_reg_495");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, select_ln22_fu_221_p3, "select_ln22_fu_221_p3");
    sc_trace(mVcdFile, select_ln22_reg_500, "select_ln22_reg_500");
    sc_trace(mVcdFile, icmp_ln24_reg_505, "icmp_ln24_reg_505");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter2, "ap_block_state5_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, icmp_ln24_reg_505_pp0_iter1_reg, "icmp_ln24_reg_505_pp0_iter1_reg");
    sc_trace(mVcdFile, i_fu_241_p2, "i_fu_241_p2");
    sc_trace(mVcdFile, empty_28_reg_514_0, "empty_28_reg_514_0");
    sc_trace(mVcdFile, shl_ln_fu_251_p3, "shl_ln_fu_251_p3");
    sc_trace(mVcdFile, shl_ln_reg_519, "shl_ln_reg_519");
    sc_trace(mVcdFile, empty_29_fu_259_p2, "empty_29_fu_259_p2");
    sc_trace(mVcdFile, empty_29_reg_524, "empty_29_reg_524");
    sc_trace(mVcdFile, icmp_ln203_fu_265_p2, "icmp_ln203_fu_265_p2");
    sc_trace(mVcdFile, icmp_ln203_reg_529, "icmp_ln203_reg_529");
    sc_trace(mVcdFile, icmp_ln203_reg_529_pp0_iter1_reg, "icmp_ln203_reg_529_pp0_iter1_reg");
    sc_trace(mVcdFile, shl_ln203_fu_329_p2, "shl_ln203_fu_329_p2");
    sc_trace(mVcdFile, shl_ln203_reg_537, "shl_ln203_reg_537");
    sc_trace(mVcdFile, and_ln203_fu_347_p2, "and_ln203_fu_347_p2");
    sc_trace(mVcdFile, and_ln203_reg_543, "and_ln203_reg_543");
    sc_trace(mVcdFile, icmp_ln37_1_fu_398_p2, "icmp_ln37_1_fu_398_p2");
    sc_trace(mVcdFile, icmp_ln37_1_reg_549, "icmp_ln37_1_reg_549");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln33_fu_402_p2, "icmp_ln33_fu_402_p2");
    sc_trace(mVcdFile, ap_block_state8_pp1_stage0_iter0, "ap_block_state8_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter1, "ap_block_state9_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state9_io, "ap_block_state9_io");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage0_iter2, "ap_block_state10_pp1_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state10_io, "ap_block_state10_io");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, i_1_fu_408_p2, "i_1_fu_408_p2");
    sc_trace(mVcdFile, i_1_reg_558, "i_1_reg_558");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, tmp_2_fu_429_p7, "tmp_2_fu_429_p7");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_myproject_fu_179_ap_ready, "grp_myproject_fu_179_ap_ready");
    sc_trace(mVcdFile, grp_myproject_fu_179_ap_done, "grp_myproject_fu_179_ap_done");
    sc_trace(mVcdFile, ap_sync_grp_myproject_fu_179_ap_ready, "ap_sync_grp_myproject_fu_179_ap_ready");
    sc_trace(mVcdFile, ap_sync_grp_myproject_fu_179_ap_done, "ap_sync_grp_myproject_fu_179_ap_done");
    sc_trace(mVcdFile, ap_block_state7_on_subcall_done, "ap_block_state7_on_subcall_done");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state8, "ap_condition_pp1_exit_iter0_state8");
    sc_trace(mVcdFile, grp_myproject_fu_179_layer13_out_0_V, "grp_myproject_fu_179_layer13_out_0_V");
    sc_trace(mVcdFile, grp_myproject_fu_179_layer13_out_1_V, "grp_myproject_fu_179_layer13_out_1_V");
    sc_trace(mVcdFile, grp_myproject_fu_179_layer13_out_2_V, "grp_myproject_fu_179_layer13_out_2_V");
    sc_trace(mVcdFile, grp_myproject_fu_179_layer13_out_3_V, "grp_myproject_fu_179_layer13_out_3_V");
    sc_trace(mVcdFile, grp_myproject_fu_179_layer13_out_4_V, "grp_myproject_fu_179_layer13_out_4_V");
    sc_trace(mVcdFile, grp_myproject_fu_179_ap_start, "grp_myproject_fu_179_ap_start");
    sc_trace(mVcdFile, grp_myproject_fu_179_layer13_out_0_V_ap_vld, "grp_myproject_fu_179_layer13_out_0_V_ap_vld");
    sc_trace(mVcdFile, grp_myproject_fu_179_layer13_out_1_V_ap_vld, "grp_myproject_fu_179_layer13_out_1_V_ap_vld");
    sc_trace(mVcdFile, grp_myproject_fu_179_layer13_out_2_V_ap_vld, "grp_myproject_fu_179_layer13_out_2_V_ap_vld");
    sc_trace(mVcdFile, grp_myproject_fu_179_layer13_out_3_V_ap_vld, "grp_myproject_fu_179_layer13_out_3_V_ap_vld");
    sc_trace(mVcdFile, grp_myproject_fu_179_layer13_out_4_V_ap_vld, "grp_myproject_fu_179_layer13_out_4_V_ap_vld");
    sc_trace(mVcdFile, grp_myproject_fu_179_ap_idle, "grp_myproject_fu_179_ap_idle");
    sc_trace(mVcdFile, grp_myproject_fu_179_ap_continue, "grp_myproject_fu_179_ap_continue");
    sc_trace(mVcdFile, ap_phi_mux_i2_0_phi_fu_171_p4, "ap_phi_mux_i2_0_phi_fu_171_p4");
    sc_trace(mVcdFile, grp_myproject_fu_179_ap_start_reg, "grp_myproject_fu_179_ap_start_reg");
    sc_trace(mVcdFile, ap_sync_reg_grp_myproject_fu_179_ap_ready, "ap_sync_reg_grp_myproject_fu_179_ap_ready");
    sc_trace(mVcdFile, ap_sync_reg_grp_myproject_fu_179_ap_done, "ap_sync_reg_grp_myproject_fu_179_ap_done");
    sc_trace(mVcdFile, in_local_V_fu_108, "in_local_V_fu_108");
    sc_trace(mVcdFile, out_local_0_fu_112, "out_local_0_fu_112");
    sc_trace(mVcdFile, out_local_1_fu_116, "out_local_1_fu_116");
    sc_trace(mVcdFile, out_local_2_fu_120, "out_local_2_fu_120");
    sc_trace(mVcdFile, out_local_3_fu_124, "out_local_3_fu_124");
    sc_trace(mVcdFile, out_local_4_fu_128, "out_local_4_fu_128");
    sc_trace(mVcdFile, in_local_V_1_fu_387_p2, "in_local_V_1_fu_387_p2");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, icmp_ln20_fu_209_p2, "icmp_ln20_fu_209_p2");
    sc_trace(mVcdFile, add_ln22_fu_215_p2, "add_ln22_fu_215_p2");
    sc_trace(mVcdFile, trunc_ln203_fu_247_p1, "trunc_ln203_fu_247_p1");
    sc_trace(mVcdFile, zext_ln203_fu_274_p1, "zext_ln203_fu_274_p1");
    sc_trace(mVcdFile, zext_ln203_1_fu_277_p1, "zext_ln203_1_fu_277_p1");
    sc_trace(mVcdFile, xor_ln203_fu_284_p2, "xor_ln203_fu_284_p2");
    sc_trace(mVcdFile, select_ln203_fu_290_p3, "select_ln203_fu_290_p3");
    sc_trace(mVcdFile, select_ln203_2_fu_304_p3, "select_ln203_2_fu_304_p3");
    sc_trace(mVcdFile, select_ln203_1_fu_297_p3, "select_ln203_1_fu_297_p3");
    sc_trace(mVcdFile, xor_ln203_1_fu_311_p2, "xor_ln203_1_fu_311_p2");
    sc_trace(mVcdFile, zext_ln203_2_fu_280_p1, "zext_ln203_2_fu_280_p1");
    sc_trace(mVcdFile, zext_ln203_3_fu_317_p1, "zext_ln203_3_fu_317_p1");
    sc_trace(mVcdFile, zext_ln203_4_fu_321_p1, "zext_ln203_4_fu_321_p1");
    sc_trace(mVcdFile, zext_ln203_5_fu_325_p1, "zext_ln203_5_fu_325_p1");
    sc_trace(mVcdFile, shl_ln203_1_fu_335_p2, "shl_ln203_1_fu_335_p2");
    sc_trace(mVcdFile, lshr_ln203_fu_341_p2, "lshr_ln203_fu_341_p2");
    sc_trace(mVcdFile, tmp_513_fu_356_p4, "tmp_513_fu_356_p4");
    sc_trace(mVcdFile, xor_ln203_2_fu_371_p2, "xor_ln203_2_fu_371_p2");
    sc_trace(mVcdFile, select_ln203_3_fu_365_p3, "select_ln203_3_fu_365_p3");
    sc_trace(mVcdFile, and_ln203_1_fu_376_p2, "and_ln203_1_fu_376_p2");
    sc_trace(mVcdFile, and_ln203_2_fu_382_p2, "and_ln203_2_fu_382_p2");
    sc_trace(mVcdFile, icmp_ln37_fu_446_p2, "icmp_ln37_fu_446_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, regslice_both_out_data_V_U_apdone_blk, "regslice_both_out_data_V_U_apdone_blk");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, regslice_both_in_data_V_U_apdone_blk, "regslice_both_in_data_V_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TDATA_int, "in_r_TDATA_int");
    sc_trace(mVcdFile, in_r_TVALID_int, "in_r_TVALID_int");
    sc_trace(mVcdFile, in_r_TREADY_int, "in_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_in_data_V_U_ack_in, "regslice_both_in_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_w1_in_last_U_apdone_blk, "regslice_both_w1_in_last_U_apdone_blk");
    sc_trace(mVcdFile, in_r_TLAST_int, "in_r_TLAST_int");
    sc_trace(mVcdFile, regslice_both_w1_in_last_U_vld_out, "regslice_both_w1_in_last_U_vld_out");
    sc_trace(mVcdFile, regslice_both_w1_in_last_U_ack_in, "regslice_both_w1_in_last_U_ack_in");
    sc_trace(mVcdFile, out_r_TVALID_int, "out_r_TVALID_int");
    sc_trace(mVcdFile, out_r_TREADY_int, "out_r_TREADY_int");
    sc_trace(mVcdFile, regslice_both_out_data_V_U_vld_out, "regslice_both_out_data_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_w1_out_last_U_apdone_blk, "regslice_both_w1_out_last_U_apdone_blk");
    sc_trace(mVcdFile, out_r_TLAST_int, "out_r_TLAST_int");
    sc_trace(mVcdFile, regslice_both_w1_out_last_U_ack_in_dummy, "regslice_both_w1_out_last_U_ack_in_dummy");
    sc_trace(mVcdFile, regslice_both_w1_out_last_U_vld_out, "regslice_both_w1_out_last_U_vld_out");
#endif

    }
    mHdltvinHandle.open("myproject_axi.hdltvin.dat");
    mHdltvoutHandle.open("myproject_axi.hdltvout.dat");
}

myproject_axi::~myproject_axi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    mHdltvinHandle << "] " << endl;
    mHdltvoutHandle << "] " << endl;
    mHdltvinHandle.close();
    mHdltvoutHandle.close();
    delete myproject_axi_AXILiteS_s_axi_U;
    delete grp_myproject_fu_179;
    delete myproject_axi_muxqcK_U856;
    delete regslice_both_in_data_V_U;
    delete regslice_both_w1_in_last_U;
    delete regslice_both_out_data_V_U;
    delete regslice_both_w1_out_last_U;
}

void myproject_axi::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void myproject_axi::thread_ap_clk_no_reset_() {
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
            ap_enable_reg_pp0_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state8.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state8.read())) {
                ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state8.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
            }
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter2 = ap_enable_reg_pp1_iter1.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                    esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter2 = ap_const_logic_0;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_grp_myproject_fu_179_ap_done = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
             esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_sync_reg_grp_myproject_fu_179_ap_done = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_myproject_fu_179_ap_done.read())) {
            ap_sync_reg_grp_myproject_fu_179_ap_done = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        ap_sync_reg_grp_myproject_fu_179_ap_ready = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
             esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0))) {
            ap_sync_reg_grp_myproject_fu_179_ap_ready = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_myproject_fu_179_ap_ready.read())) {
            ap_sync_reg_grp_myproject_fu_179_ap_ready = ap_const_logic_1;
        }
    }
    if ( ap_rst_n_inv.read() == ap_const_logic_1) {
        grp_myproject_fu_179_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
             (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
              esl_seteq<1,1,1>(ap_const_logic_0, ap_sync_grp_myproject_fu_179_ap_ready.read())))) {
            grp_myproject_fu_179_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_myproject_fu_179_ap_ready.read())) {
            grp_myproject_fu_179_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_reg_554.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        i2_0_reg_167 = i_1_reg_558.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0))) {
        i2_0_reg_167 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln24_fu_235_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        i_0_reg_156 = i_fu_241_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_0_reg_156 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_reg_505.read()))) {
        and_ln203_reg_543 = and_ln203_fu_347_p2.read();
        shl_ln203_reg_537 = shl_ln203_fu_329_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(icmp_ln24_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        empty_28_reg_514_0 = in_r_TDATA_int.read();
        empty_29_reg_524 = empty_29_fu_259_p2.read();
        icmp_ln203_reg_529 = icmp_ln203_fu_265_p2.read();
        shl_ln_reg_519 = shl_ln_fu_251_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()))) {
        i_1_reg_558 = i_1_fu_408_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln203_reg_529_pp0_iter1_reg = icmp_ln203_reg_529.read();
        icmp_ln24_reg_505 = icmp_ln24_fu_235_p2.read();
        icmp_ln24_reg_505_pp0_iter1_reg = icmp_ln24_reg_505.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln33_reg_554 = icmp_ln33_fu_402_p2.read();
        icmp_ln33_reg_554_pp1_iter1_reg = icmp_ln33_reg_554.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        icmp_ln37_1_reg_549 = icmp_ln37_1_fu_398_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln24_reg_505_pp0_iter1_reg.read()))) {
        in_local_V_fu_108 = in_local_V_1_fu_387_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_myproject_fu_179_layer13_out_0_V_ap_vld.read()))) {
        out_local_0_fu_112 = grp_myproject_fu_179_layer13_out_0_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_myproject_fu_179_layer13_out_1_V_ap_vld.read()))) {
        out_local_1_fu_116 = grp_myproject_fu_179_layer13_out_1_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_myproject_fu_179_layer13_out_2_V_ap_vld.read()))) {
        out_local_2_fu_120 = grp_myproject_fu_179_layer13_out_2_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_myproject_fu_179_layer13_out_3_V_ap_vld.read()))) {
        out_local_3_fu_124 = grp_myproject_fu_179_layer13_out_3_V.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_logic_1, grp_myproject_fu_179_layer13_out_4_V_ap_vld.read()))) {
        out_local_4_fu_128 = grp_myproject_fu_179_layer13_out_4_V.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        row_count = select_ln22_fu_221_p3.read();
        select_ln22_reg_500 = select_ln22_fu_221_p3.read();
        vector_rows_read_reg_495 = vector_rows_0_data_reg.read();
    }
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, vector_rows_0_vld_reg.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_const_logic_1) && 
  esl_seteq<1,1,1>(ap_const_logic_1, vector_rows_0_vld_reg.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, vector_rows_0_ack_out.read())))) {
        vector_rows_0_data_reg = vector_rows.read();
    }
}

void myproject_axi::thread_add_ln22_fu_215_p2() {
    add_ln22_fu_215_p2 = (!row_count.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(row_count.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void myproject_axi::thread_and_ln203_1_fu_376_p2() {
    and_ln203_1_fu_376_p2 = (in_local_V_fu_108.read() & xor_ln203_2_fu_371_p2.read());
}

void myproject_axi::thread_and_ln203_2_fu_382_p2() {
    and_ln203_2_fu_382_p2 = (select_ln203_3_fu_365_p3.read() & and_ln203_reg_543.read());
}

void myproject_axi::thread_and_ln203_fu_347_p2() {
    and_ln203_fu_347_p2 = (shl_ln203_1_fu_335_p2.read() & lshr_ln203_fu_341_p2.read());
}

void myproject_axi::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void myproject_axi::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[5];
}

void myproject_axi::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[6];
}

void myproject_axi::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void myproject_axi::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[3];
}

void myproject_axi::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[4];
}

void myproject_axi::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject_axi::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln24_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void myproject_axi::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(icmp_ln24_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void myproject_axi::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject_axi::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject_axi::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state10_io.read())));
}

void myproject_axi::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state9_io.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_state10_io.read())));
}

void myproject_axi::thread_ap_block_state10_io() {
    ap_block_state10_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_reg_554_pp1_iter1_reg.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY_int.read()));
}

void myproject_axi::thread_ap_block_state10_pp1_stage0_iter2() {
    ap_block_state10_pp1_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject_axi::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = (esl_seteq<1,1,1>(icmp_ln24_fu_235_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_logic_0, in_r_TVALID_int.read()));
}

void myproject_axi::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject_axi::thread_ap_block_state5_pp0_stage0_iter2() {
    ap_block_state5_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject_axi::thread_ap_block_state7_on_subcall_done() {
    ap_block_state7_on_subcall_done = esl_seteq<1,1,1>(ap_const_logic_0, (ap_sync_grp_myproject_fu_179_ap_ready.read() & ap_sync_grp_myproject_fu_179_ap_done.read()));
}

void myproject_axi::thread_ap_block_state8_pp1_stage0_iter0() {
    ap_block_state8_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject_axi::thread_ap_block_state9_io() {
    ap_block_state9_io = (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_reg_554.read()) && esl_seteq<1,1,1>(ap_const_logic_0, out_r_TREADY_int.read()));
}

void myproject_axi::thread_ap_block_state9_pp1_stage0_iter1() {
    ap_block_state9_pp1_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void myproject_axi::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln24_fu_235_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void myproject_axi::thread_ap_condition_pp1_exit_iter0_state8() {
    if (esl_seteq<1,1,1>(icmp_ln33_fu_402_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp1_exit_iter0_state8 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state8 = ap_const_logic_0;
    }
}

void myproject_axi::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void myproject_axi::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void myproject_axi::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void myproject_axi::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter2.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void myproject_axi::thread_ap_phi_mux_i2_0_phi_fu_171_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_reg_554.read()))) {
        ap_phi_mux_i2_0_phi_fu_171_p4 = i_1_reg_558.read();
    } else {
        ap_phi_mux_i2_0_phi_fu_171_p4 = i2_0_reg_167.read();
    }
}

void myproject_axi::thread_ap_rst_n_inv() {
    ap_rst_n_inv =  (sc_logic) (~ap_rst_n.read());
}

void myproject_axi::thread_ap_sync_grp_myproject_fu_179_ap_done() {
    ap_sync_grp_myproject_fu_179_ap_done = (grp_myproject_fu_179_ap_done.read() | ap_sync_reg_grp_myproject_fu_179_ap_done.read());
}

void myproject_axi::thread_ap_sync_grp_myproject_fu_179_ap_ready() {
    ap_sync_grp_myproject_fu_179_ap_ready = (grp_myproject_fu_179_ap_ready.read() | ap_sync_reg_grp_myproject_fu_179_ap_ready.read());
}

void myproject_axi::thread_empty_29_fu_259_p2() {
    empty_29_fu_259_p2 = (shl_ln_fu_251_p3.read() | ap_const_lv8_F);
}

void myproject_axi::thread_grp_myproject_fu_179_ap_continue() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0))) {
        grp_myproject_fu_179_ap_continue = ap_const_logic_1;
    } else {
        grp_myproject_fu_179_ap_continue = ap_const_logic_0;
    }
}

void myproject_axi::thread_grp_myproject_fu_179_ap_start() {
    grp_myproject_fu_179_ap_start = grp_myproject_fu_179_ap_start_reg.read();
}

void myproject_axi::thread_i_1_fu_408_p2() {
    i_1_fu_408_p2 = (!ap_phi_mux_i2_0_phi_fu_171_p4.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(ap_phi_mux_i2_0_phi_fu_171_p4.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void myproject_axi::thread_i_fu_241_p2() {
    i_fu_241_p2 = (!i_0_reg_156.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(i_0_reg_156.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void myproject_axi::thread_icmp_ln203_fu_265_p2() {
    icmp_ln203_fu_265_p2 = (!shl_ln_fu_251_p3.read().is_01() || !empty_29_fu_259_p2.read().is_01())? sc_lv<1>(): (sc_biguint<8>(shl_ln_fu_251_p3.read()) > sc_biguint<8>(empty_29_fu_259_p2.read()));
}

void myproject_axi::thread_icmp_ln20_fu_209_p2() {
    icmp_ln20_fu_209_p2 = (!row_count.read().is_01() || !vector_rows_0_data_reg.read().is_01())? sc_lv<1>(): sc_lv<1>(row_count.read() == vector_rows_0_data_reg.read());
}

void myproject_axi::thread_icmp_ln24_fu_235_p2() {
    icmp_ln24_fu_235_p2 = (!i_0_reg_156.read().is_01() || !ap_const_lv5_10.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_156.read() == ap_const_lv5_10);
}

void myproject_axi::thread_icmp_ln33_fu_402_p2() {
    icmp_ln33_fu_402_p2 = (!ap_phi_mux_i2_0_phi_fu_171_p4.read().is_01() || !ap_const_lv3_5.is_01())? sc_lv<1>(): sc_lv<1>(ap_phi_mux_i2_0_phi_fu_171_p4.read() == ap_const_lv3_5);
}

void myproject_axi::thread_icmp_ln37_1_fu_398_p2() {
    icmp_ln37_1_fu_398_p2 = (!select_ln22_reg_500.read().is_01() || !vector_rows_read_reg_495.read().is_01())? sc_lv<1>(): sc_lv<1>(select_ln22_reg_500.read() == vector_rows_read_reg_495.read());
}

void myproject_axi::thread_icmp_ln37_fu_446_p2() {
    icmp_ln37_fu_446_p2 = (!i2_0_reg_167.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i2_0_reg_167.read() == ap_const_lv3_4);
}

void myproject_axi::thread_in_local_V_1_fu_387_p2() {
    in_local_V_1_fu_387_p2 = (and_ln203_1_fu_376_p2.read() | and_ln203_2_fu_382_p2.read());
}

void myproject_axi::thread_in_r_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln24_fu_235_p2.read(), ap_const_lv1_0))) {
        in_r_TDATA_blk_n = in_r_TVALID_int.read();
    } else {
        in_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void myproject_axi::thread_in_r_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, in_r_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_in_data_V_U_ack_in.read()))) {
        in_r_TREADY = ap_const_logic_1;
    } else {
        in_r_TREADY = ap_const_logic_0;
    }
}

void myproject_axi::thread_in_r_TREADY_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln24_fu_235_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        in_r_TREADY_int = ap_const_logic_1;
    } else {
        in_r_TREADY_int = ap_const_logic_0;
    }
}

void myproject_axi::thread_lshr_ln203_fu_341_p2() {
    lshr_ln203_fu_341_p2 = (!zext_ln203_5_fu_325_p1.read().is_01())? sc_lv<256>(): ap_const_lv256_lc_1 >> (unsigned short)zext_ln203_5_fu_325_p1.read().to_uint();
}

void myproject_axi::thread_out_r_TDATA_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_reg_554.read())) || 
         (esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_reg_554_pp1_iter1_reg.read())))) {
        out_r_TDATA_blk_n = out_r_TREADY_int.read();
    } else {
        out_r_TDATA_blk_n = ap_const_logic_1;
    }
}

void myproject_axi::thread_out_r_TLAST_int() {
    out_r_TLAST_int =  (sc_logic) ((icmp_ln37_fu_446_p2.read() & icmp_ln37_1_reg_549.read()))[0];
}

void myproject_axi::thread_out_r_TVALID() {
    out_r_TVALID = regslice_both_out_data_V_U_vld_out.read();
}

void myproject_axi::thread_out_r_TVALID_int() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln33_reg_554.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        out_r_TVALID_int = ap_const_logic_1;
    } else {
        out_r_TVALID_int = ap_const_logic_0;
    }
}

void myproject_axi::thread_select_ln203_1_fu_297_p3() {
    select_ln203_1_fu_297_p3 = (!icmp_ln203_reg_529.read()[0].is_01())? sc_lv<9>(): ((icmp_ln203_reg_529.read()[0].to_bool())? zext_ln203_1_fu_277_p1.read(): zext_ln203_fu_274_p1.read());
}

void myproject_axi::thread_select_ln203_2_fu_304_p3() {
    select_ln203_2_fu_304_p3 = (!icmp_ln203_reg_529.read()[0].is_01())? sc_lv<9>(): ((icmp_ln203_reg_529.read()[0].to_bool())? xor_ln203_fu_284_p2.read(): zext_ln203_fu_274_p1.read());
}

void myproject_axi::thread_select_ln203_3_fu_365_p3() {
    select_ln203_3_fu_365_p3 = (!icmp_ln203_reg_529_pp0_iter1_reg.read()[0].is_01())? sc_lv<256>(): ((icmp_ln203_reg_529_pp0_iter1_reg.read()[0].to_bool())? tmp_513_fu_356_p4.read(): shl_ln203_reg_537.read());
}

void myproject_axi::thread_select_ln203_fu_290_p3() {
    select_ln203_fu_290_p3 = (!icmp_ln203_reg_529.read()[0].is_01())? sc_lv<9>(): ((icmp_ln203_reg_529.read()[0].to_bool())? zext_ln203_fu_274_p1.read(): zext_ln203_1_fu_277_p1.read());
}

void myproject_axi::thread_select_ln22_fu_221_p3() {
    select_ln22_fu_221_p3 = (!icmp_ln20_fu_209_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln20_fu_209_p2.read()[0].to_bool())? ap_const_lv32_1: add_ln22_fu_215_p2.read());
}

void myproject_axi::thread_shl_ln203_1_fu_335_p2() {
    shl_ln203_1_fu_335_p2 = (!zext_ln203_4_fu_321_p1.read().is_01())? sc_lv<256>(): ap_const_lv256_lc_1 << (unsigned short)zext_ln203_4_fu_321_p1.read().to_uint();
}

void myproject_axi::thread_shl_ln203_fu_329_p2() {
    shl_ln203_fu_329_p2 = (!zext_ln203_3_fu_317_p1.read().is_01())? sc_lv<256>(): zext_ln203_2_fu_280_p1.read() << (unsigned short)zext_ln203_3_fu_317_p1.read().to_uint();
}

void myproject_axi::thread_shl_ln_fu_251_p3() {
    shl_ln_fu_251_p3 = esl_concat<4,4>(trunc_ln203_fu_247_p1.read(), ap_const_lv4_0);
}

void myproject_axi::thread_tmp_513_fu_356_p4() {
    tmp_513_fu_356_p4 = shl_ln203_reg_537.read().range(0, 255);
}

void myproject_axi::thread_trunc_ln203_fu_247_p1() {
    trunc_ln203_fu_247_p1 = i_0_reg_156.read().range(4-1, 0);
}

void myproject_axi::thread_vector_rows_0_ack_out() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(regslice_both_out_data_V_U_apdone_blk.read(), ap_const_logic_0)))) {
        vector_rows_0_ack_out = ap_const_logic_1;
    } else {
        vector_rows_0_ack_out = ap_const_logic_0;
    }
}

void myproject_axi::thread_xor_ln203_1_fu_311_p2() {
    xor_ln203_1_fu_311_p2 = (select_ln203_fu_290_p3.read() ^ ap_const_lv9_FF);
}

void myproject_axi::thread_xor_ln203_2_fu_371_p2() {
    xor_ln203_2_fu_371_p2 = (and_ln203_reg_543.read() ^ ap_const_lv256_lc_1);
}

void myproject_axi::thread_xor_ln203_fu_284_p2() {
    xor_ln203_fu_284_p2 = (zext_ln203_fu_274_p1.read() ^ ap_const_lv9_FF);
}

void myproject_axi::thread_zext_ln203_1_fu_277_p1() {
    zext_ln203_1_fu_277_p1 = esl_zext<9,8>(empty_29_reg_524.read());
}

void myproject_axi::thread_zext_ln203_2_fu_280_p1() {
    zext_ln203_2_fu_280_p1 = esl_zext<256,16>(empty_28_reg_514_0.read());
}

void myproject_axi::thread_zext_ln203_3_fu_317_p1() {
    zext_ln203_3_fu_317_p1 = esl_zext<256,9>(select_ln203_2_fu_304_p3.read());
}

void myproject_axi::thread_zext_ln203_4_fu_321_p1() {
    zext_ln203_4_fu_321_p1 = esl_zext<256,9>(select_ln203_1_fu_297_p3.read());
}

void myproject_axi::thread_zext_ln203_5_fu_325_p1() {
    zext_ln203_5_fu_325_p1 = esl_zext<256,9>(xor_ln203_1_fu_311_p2.read());
}

void myproject_axi::thread_zext_ln203_fu_274_p1() {
    zext_ln203_fu_274_p1 = esl_zext<9,8>(shl_ln_reg_519.read());
}

void myproject_axi::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            break;
        case 4 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln24_fu_235_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln24_fu_235_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_block_state7_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 32 : 
            if ((!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln33_fu_402_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter2.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln33_fu_402_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(regslice_both_out_data_V_U_apdone_blk.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

void myproject_axi::thread_hdltv_gen() {
    const char* dump_tv = std::getenv("AP_WRITE_TV");
    if (!(dump_tv && string(dump_tv) == "on")) return;

    wait();

    mHdltvinHandle << "[ " << endl;
    mHdltvoutHandle << "[ " << endl;
    int ap_cycleNo = 0;
    while (1) {
        wait();
        const char* mComma = ap_cycleNo == 0 ? " " : ", " ;
        mHdltvinHandle << mComma << "{"  <<  " \"ap_rst_n\" :  \"" << ap_rst_n.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TDATA\" :  \"" << in_r_TDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TVALID\" :  \"" << in_r_TVALID.read() << "\" ";
        mHdltvoutHandle << mComma << "{"  <<  " \"in_r_TREADY\" :  \"" << in_r_TREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"in_r_TLAST\" :  \"" << in_r_TLAST.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TDATA\" :  \"" << out_r_TDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TVALID\" :  \"" << out_r_TVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"out_r_TREADY\" :  \"" << out_r_TREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"out_r_TLAST\" :  \"" << out_r_TLAST.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWVALID\" :  \"" << s_axi_AXILiteS_AWVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_AWREADY\" :  \"" << s_axi_AXILiteS_AWREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_AWADDR\" :  \"" << s_axi_AXILiteS_AWADDR.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WVALID\" :  \"" << s_axi_AXILiteS_WVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_WREADY\" :  \"" << s_axi_AXILiteS_WREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WDATA\" :  \"" << s_axi_AXILiteS_WDATA.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_WSTRB\" :  \"" << s_axi_AXILiteS_WSTRB.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARVALID\" :  \"" << s_axi_AXILiteS_ARVALID.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_ARREADY\" :  \"" << s_axi_AXILiteS_ARREADY.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_ARADDR\" :  \"" << s_axi_AXILiteS_ARADDR.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RVALID\" :  \"" << s_axi_AXILiteS_RVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_RREADY\" :  \"" << s_axi_AXILiteS_RREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RDATA\" :  \"" << s_axi_AXILiteS_RDATA.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_RRESP\" :  \"" << s_axi_AXILiteS_RRESP.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BVALID\" :  \"" << s_axi_AXILiteS_BVALID.read() << "\" ";
        mHdltvinHandle << " , " <<  " \"s_axi_AXILiteS_BREADY\" :  \"" << s_axi_AXILiteS_BREADY.read() << "\" ";
        mHdltvoutHandle << " , " <<  " \"s_axi_AXILiteS_BRESP\" :  \"" << s_axi_AXILiteS_BRESP.read() << "\" ";
        mHdltvinHandle << "}" << std::endl;
        mHdltvoutHandle << "}" << std::endl;
        ap_cycleNo++;
    }
}

}

