// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "softmax_latency.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic softmax_latency::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic softmax_latency::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> softmax_latency::ap_ST_fsm_pp0_stage0 = "1";
const sc_lv<32> softmax_latency::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool softmax_latency::ap_const_boolean_1 = true;
const bool softmax_latency::ap_const_boolean_0 = false;
const sc_lv<32> softmax_latency::ap_const_lv32_6 = "110";
const sc_lv<32> softmax_latency::ap_const_lv32_F = "1111";
const sc_lv<32> softmax_latency::ap_const_lv32_8 = "1000";
const sc_lv<32> softmax_latency::ap_const_lv32_11 = "10001";
const sc_lv<32> softmax_latency::ap_const_lv32_E = "1110";
const sc_lv<32> softmax_latency::ap_const_lv32_1D = "11101";

softmax_latency::softmax_latency(sc_module_name name) : sc_module(name), mVcdFile(0) {
    exp_table1_U = new softmax_latency_emb6("exp_table1_U");
    exp_table1_U->clk(ap_clk);
    exp_table1_U->reset(ap_rst);
    exp_table1_U->address0(exp_table1_address0);
    exp_table1_U->ce0(exp_table1_ce0);
    exp_table1_U->q0(exp_table1_q0);
    exp_table1_U->address1(exp_table1_address1);
    exp_table1_U->ce1(exp_table1_ce1);
    exp_table1_U->q1(exp_table1_q1);
    exp_table1_U->address2(exp_table1_address2);
    exp_table1_U->ce2(exp_table1_ce2);
    exp_table1_U->q2(exp_table1_q2);
    exp_table1_U->address3(exp_table1_address3);
    exp_table1_U->ce3(exp_table1_ce3);
    exp_table1_U->q3(exp_table1_q3);
    exp_table1_U->address4(exp_table1_address4);
    exp_table1_U->ce4(exp_table1_ce4);
    exp_table1_U->q4(exp_table1_q4);
    invert_table2_U = new softmax_latency_incg("invert_table2_U");
    invert_table2_U->clk(ap_clk);
    invert_table2_U->reset(ap_rst);
    invert_table2_U->address0(invert_table2_address0);
    invert_table2_U->ce0(invert_table2_ce0);
    invert_table2_U->q0(invert_table2_q0);
    myproject_axi_mulocq_U569 = new myproject_axi_mulocq<1,3,18,18,30>("myproject_axi_mulocq_U569");
    myproject_axi_mulocq_U569->clk(ap_clk);
    myproject_axi_mulocq_U569->reset(ap_rst);
    myproject_axi_mulocq_U569->din0(grp_fu_372_p0);
    myproject_axi_mulocq_U569->din1(exp_res_0_V_reg_455_pp0_iter5_reg);
    myproject_axi_mulocq_U569->ce(grp_fu_372_ce);
    myproject_axi_mulocq_U569->dout(grp_fu_372_p2);
    myproject_axi_mulocq_U570 = new myproject_axi_mulocq<1,3,18,18,30>("myproject_axi_mulocq_U570");
    myproject_axi_mulocq_U570->clk(ap_clk);
    myproject_axi_mulocq_U570->reset(ap_rst);
    myproject_axi_mulocq_U570->din0(grp_fu_378_p0);
    myproject_axi_mulocq_U570->din1(exp_res_1_V_reg_461_pp0_iter5_reg);
    myproject_axi_mulocq_U570->ce(grp_fu_378_ce);
    myproject_axi_mulocq_U570->dout(grp_fu_378_p2);
    myproject_axi_mulocq_U571 = new myproject_axi_mulocq<1,3,18,18,30>("myproject_axi_mulocq_U571");
    myproject_axi_mulocq_U571->clk(ap_clk);
    myproject_axi_mulocq_U571->reset(ap_rst);
    myproject_axi_mulocq_U571->din0(grp_fu_384_p0);
    myproject_axi_mulocq_U571->din1(exp_res_2_V_reg_437_pp0_iter5_reg);
    myproject_axi_mulocq_U571->ce(grp_fu_384_ce);
    myproject_axi_mulocq_U571->dout(grp_fu_384_p2);
    myproject_axi_mulocq_U572 = new myproject_axi_mulocq<1,3,18,18,30>("myproject_axi_mulocq_U572");
    myproject_axi_mulocq_U572->clk(ap_clk);
    myproject_axi_mulocq_U572->reset(ap_rst);
    myproject_axi_mulocq_U572->din0(grp_fu_390_p0);
    myproject_axi_mulocq_U572->din1(exp_res_3_V_reg_443_pp0_iter5_reg);
    myproject_axi_mulocq_U572->ce(grp_fu_390_ce);
    myproject_axi_mulocq_U572->dout(grp_fu_390_p2);
    myproject_axi_mulocq_U573 = new myproject_axi_mulocq<1,3,18,18,30>("myproject_axi_mulocq_U573");
    myproject_axi_mulocq_U573->clk(ap_clk);
    myproject_axi_mulocq_U573->reset(ap_rst);
    myproject_axi_mulocq_U573->din0(grp_fu_396_p0);
    myproject_axi_mulocq_U573->din1(exp_res_4_V_reg_449_pp0_iter5_reg);
    myproject_axi_mulocq_U573->ce(grp_fu_396_ce);
    myproject_axi_mulocq_U573->dout(grp_fu_396_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln703_1_fu_272_p2);
    sensitive << ( exp_res_2_V_reg_437 );
    sensitive << ( exp_res_4_V_reg_449 );

    SC_METHOD(thread_add_ln703_2_fu_276_p2);
    sensitive << ( exp_res_3_V_reg_443 );
    sensitive << ( add_ln703_1_fu_272_p2 );

    SC_METHOD(thread_add_ln703_fu_281_p2);
    sensitive << ( exp_res_0_V_reg_455 );
    sensitive << ( exp_res_1_V_reg_461 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state10_pp0_stage0_iter9);

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter5);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter6);

    SC_METHOD(thread_ap_block_state8_pp0_stage0_iter7);

    SC_METHOD(thread_ap_block_state9_pp0_stage0_iter8);

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );
    sensitive << ( ap_enable_reg_pp0_iter9 );

    SC_METHOD(thread_ap_idle_pp0_0to8);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( ap_enable_reg_pp0_iter7 );
    sensitive << ( ap_enable_reg_pp0_iter8 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to8 );

    SC_METHOD(thread_exp_sum_V_fu_285_p2);
    sensitive << ( add_ln703_2_reg_467 );
    sensitive << ( add_ln703_fu_281_p2 );

    SC_METHOD(thread_exp_table1_address0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln251_2_fu_229_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_exp_table1_address1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln251_3_fu_244_p1 );

    SC_METHOD(thread_exp_table1_address2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln251_4_fu_259_p1 );

    SC_METHOD(thread_exp_table1_address3);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln251_fu_264_p1 );

    SC_METHOD(thread_exp_table1_address4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln251_1_fu_268_p1 );

    SC_METHOD(thread_exp_table1_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exp_table1_ce1);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exp_table1_ce2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exp_table1_ce3);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_exp_table1_ce4);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_372_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_372_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( sext_ln1116_fu_304_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_378_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_378_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( sext_ln1116_fu_304_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_384_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_384_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( sext_ln1116_fu_304_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_390_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_390_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( sext_ln1116_fu_304_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_396_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_grp_fu_396_p0);
    sensitive << ( ap_enable_reg_pp0_iter6 );
    sensitive << ( sext_ln1116_fu_304_p1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_invert_table2_address0);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln259_fu_300_p1 );

    SC_METHOD(thread_invert_table2_ce0);
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_0_V);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( mul_ln1118_reg_521 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_0_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_1_V);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( mul_ln1118_1_reg_526 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_1_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_2_V);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( mul_ln1118_2_reg_531 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_2_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_3_V);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( mul_ln1118_3_reg_536 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_3_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_res_4_V);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( mul_ln1118_4_reg_541 );
    sensitive << ( ap_block_pp0_stage0_01001 );

    SC_METHOD(thread_res_4_V_ap_vld);
    sensitive << ( ap_enable_reg_pp0_iter9 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_sext_ln1116_fu_304_p1);
    sensitive << ( inv_exp_sum_V_reg_482 );

    SC_METHOD(thread_y_V_1_fu_209_p4);
    sensitive << ( data_1_V );

    SC_METHOD(thread_y_V_2_fu_219_p4);
    sensitive << ( data_2_V );

    SC_METHOD(thread_y_V_3_fu_234_p4);
    sensitive << ( data_3_V );

    SC_METHOD(thread_y_V_4_fu_249_p4);
    sensitive << ( data_4_V );

    SC_METHOD(thread_y_V_fu_199_p4);
    sensitive << ( data_0_V );

    SC_METHOD(thread_zext_ln251_1_fu_268_p1);
    sensitive << ( y_V_1_fu_209_p4 );

    SC_METHOD(thread_zext_ln251_2_fu_229_p1);
    sensitive << ( y_V_2_fu_219_p4 );

    SC_METHOD(thread_zext_ln251_3_fu_244_p1);
    sensitive << ( y_V_3_fu_234_p4 );

    SC_METHOD(thread_zext_ln251_4_fu_259_p1);
    sensitive << ( y_V_4_fu_249_p4 );

    SC_METHOD(thread_zext_ln251_fu_264_p1);
    sensitive << ( y_V_fu_199_p4 );

    SC_METHOD(thread_zext_ln259_fu_300_p1);
    sensitive << ( y_V_5_reg_472 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter6 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter7 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter8 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter9 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "softmax_latency_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, data_0_V, "(port)data_0_V");
    sc_trace(mVcdFile, data_1_V, "(port)data_1_V");
    sc_trace(mVcdFile, data_2_V, "(port)data_2_V");
    sc_trace(mVcdFile, data_3_V, "(port)data_3_V");
    sc_trace(mVcdFile, data_4_V, "(port)data_4_V");
    sc_trace(mVcdFile, res_0_V, "(port)res_0_V");
    sc_trace(mVcdFile, res_0_V_ap_vld, "(port)res_0_V_ap_vld");
    sc_trace(mVcdFile, res_1_V, "(port)res_1_V");
    sc_trace(mVcdFile, res_1_V_ap_vld, "(port)res_1_V_ap_vld");
    sc_trace(mVcdFile, res_2_V, "(port)res_2_V");
    sc_trace(mVcdFile, res_2_V_ap_vld, "(port)res_2_V_ap_vld");
    sc_trace(mVcdFile, res_3_V, "(port)res_3_V");
    sc_trace(mVcdFile, res_3_V_ap_vld, "(port)res_3_V_ap_vld");
    sc_trace(mVcdFile, res_4_V, "(port)res_4_V");
    sc_trace(mVcdFile, res_4_V_ap_vld, "(port)res_4_V_ap_vld");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter6, "ap_enable_reg_pp0_iter6");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter7, "ap_enable_reg_pp0_iter7");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter8, "ap_enable_reg_pp0_iter8");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter9, "ap_enable_reg_pp0_iter9");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter2, "ap_block_state3_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter3, "ap_block_state4_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter4, "ap_block_state5_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter5, "ap_block_state6_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter6, "ap_block_state7_pp0_stage0_iter6");
    sc_trace(mVcdFile, ap_block_state8_pp0_stage0_iter7, "ap_block_state8_pp0_stage0_iter7");
    sc_trace(mVcdFile, ap_block_state9_pp0_stage0_iter8, "ap_block_state9_pp0_stage0_iter8");
    sc_trace(mVcdFile, ap_block_state10_pp0_stage0_iter9, "ap_block_state10_pp0_stage0_iter9");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, exp_table1_address0, "exp_table1_address0");
    sc_trace(mVcdFile, exp_table1_ce0, "exp_table1_ce0");
    sc_trace(mVcdFile, exp_table1_q0, "exp_table1_q0");
    sc_trace(mVcdFile, exp_table1_address1, "exp_table1_address1");
    sc_trace(mVcdFile, exp_table1_ce1, "exp_table1_ce1");
    sc_trace(mVcdFile, exp_table1_q1, "exp_table1_q1");
    sc_trace(mVcdFile, exp_table1_address2, "exp_table1_address2");
    sc_trace(mVcdFile, exp_table1_ce2, "exp_table1_ce2");
    sc_trace(mVcdFile, exp_table1_q2, "exp_table1_q2");
    sc_trace(mVcdFile, exp_table1_address3, "exp_table1_address3");
    sc_trace(mVcdFile, exp_table1_ce3, "exp_table1_ce3");
    sc_trace(mVcdFile, exp_table1_q3, "exp_table1_q3");
    sc_trace(mVcdFile, exp_table1_address4, "exp_table1_address4");
    sc_trace(mVcdFile, exp_table1_ce4, "exp_table1_ce4");
    sc_trace(mVcdFile, exp_table1_q4, "exp_table1_q4");
    sc_trace(mVcdFile, invert_table2_address0, "invert_table2_address0");
    sc_trace(mVcdFile, invert_table2_ce0, "invert_table2_ce0");
    sc_trace(mVcdFile, invert_table2_q0, "invert_table2_q0");
    sc_trace(mVcdFile, y_V_fu_199_p4, "y_V_fu_199_p4");
    sc_trace(mVcdFile, y_V_1_fu_209_p4, "y_V_1_fu_209_p4");
    sc_trace(mVcdFile, exp_res_2_V_reg_437, "exp_res_2_V_reg_437");
    sc_trace(mVcdFile, exp_res_2_V_reg_437_pp0_iter2_reg, "exp_res_2_V_reg_437_pp0_iter2_reg");
    sc_trace(mVcdFile, exp_res_2_V_reg_437_pp0_iter3_reg, "exp_res_2_V_reg_437_pp0_iter3_reg");
    sc_trace(mVcdFile, exp_res_2_V_reg_437_pp0_iter4_reg, "exp_res_2_V_reg_437_pp0_iter4_reg");
    sc_trace(mVcdFile, exp_res_2_V_reg_437_pp0_iter5_reg, "exp_res_2_V_reg_437_pp0_iter5_reg");
    sc_trace(mVcdFile, exp_res_3_V_reg_443, "exp_res_3_V_reg_443");
    sc_trace(mVcdFile, exp_res_3_V_reg_443_pp0_iter2_reg, "exp_res_3_V_reg_443_pp0_iter2_reg");
    sc_trace(mVcdFile, exp_res_3_V_reg_443_pp0_iter3_reg, "exp_res_3_V_reg_443_pp0_iter3_reg");
    sc_trace(mVcdFile, exp_res_3_V_reg_443_pp0_iter4_reg, "exp_res_3_V_reg_443_pp0_iter4_reg");
    sc_trace(mVcdFile, exp_res_3_V_reg_443_pp0_iter5_reg, "exp_res_3_V_reg_443_pp0_iter5_reg");
    sc_trace(mVcdFile, exp_res_4_V_reg_449, "exp_res_4_V_reg_449");
    sc_trace(mVcdFile, exp_res_4_V_reg_449_pp0_iter2_reg, "exp_res_4_V_reg_449_pp0_iter2_reg");
    sc_trace(mVcdFile, exp_res_4_V_reg_449_pp0_iter3_reg, "exp_res_4_V_reg_449_pp0_iter3_reg");
    sc_trace(mVcdFile, exp_res_4_V_reg_449_pp0_iter4_reg, "exp_res_4_V_reg_449_pp0_iter4_reg");
    sc_trace(mVcdFile, exp_res_4_V_reg_449_pp0_iter5_reg, "exp_res_4_V_reg_449_pp0_iter5_reg");
    sc_trace(mVcdFile, exp_res_0_V_reg_455, "exp_res_0_V_reg_455");
    sc_trace(mVcdFile, exp_res_0_V_reg_455_pp0_iter3_reg, "exp_res_0_V_reg_455_pp0_iter3_reg");
    sc_trace(mVcdFile, exp_res_0_V_reg_455_pp0_iter4_reg, "exp_res_0_V_reg_455_pp0_iter4_reg");
    sc_trace(mVcdFile, exp_res_0_V_reg_455_pp0_iter5_reg, "exp_res_0_V_reg_455_pp0_iter5_reg");
    sc_trace(mVcdFile, exp_res_1_V_reg_461, "exp_res_1_V_reg_461");
    sc_trace(mVcdFile, exp_res_1_V_reg_461_pp0_iter3_reg, "exp_res_1_V_reg_461_pp0_iter3_reg");
    sc_trace(mVcdFile, exp_res_1_V_reg_461_pp0_iter4_reg, "exp_res_1_V_reg_461_pp0_iter4_reg");
    sc_trace(mVcdFile, exp_res_1_V_reg_461_pp0_iter5_reg, "exp_res_1_V_reg_461_pp0_iter5_reg");
    sc_trace(mVcdFile, add_ln703_2_fu_276_p2, "add_ln703_2_fu_276_p2");
    sc_trace(mVcdFile, add_ln703_2_reg_467, "add_ln703_2_reg_467");
    sc_trace(mVcdFile, y_V_5_reg_472, "y_V_5_reg_472");
    sc_trace(mVcdFile, inv_exp_sum_V_reg_482, "inv_exp_sum_V_reg_482");
    sc_trace(mVcdFile, sext_ln1116_fu_304_p1, "sext_ln1116_fu_304_p1");
    sc_trace(mVcdFile, grp_fu_372_p2, "grp_fu_372_p2");
    sc_trace(mVcdFile, mul_ln1118_reg_521, "mul_ln1118_reg_521");
    sc_trace(mVcdFile, grp_fu_378_p2, "grp_fu_378_p2");
    sc_trace(mVcdFile, mul_ln1118_1_reg_526, "mul_ln1118_1_reg_526");
    sc_trace(mVcdFile, grp_fu_384_p2, "grp_fu_384_p2");
    sc_trace(mVcdFile, mul_ln1118_2_reg_531, "mul_ln1118_2_reg_531");
    sc_trace(mVcdFile, grp_fu_390_p2, "grp_fu_390_p2");
    sc_trace(mVcdFile, mul_ln1118_3_reg_536, "mul_ln1118_3_reg_536");
    sc_trace(mVcdFile, grp_fu_396_p2, "grp_fu_396_p2");
    sc_trace(mVcdFile, mul_ln1118_4_reg_541, "mul_ln1118_4_reg_541");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, zext_ln251_2_fu_229_p1, "zext_ln251_2_fu_229_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, zext_ln251_3_fu_244_p1, "zext_ln251_3_fu_244_p1");
    sc_trace(mVcdFile, zext_ln251_4_fu_259_p1, "zext_ln251_4_fu_259_p1");
    sc_trace(mVcdFile, zext_ln251_fu_264_p1, "zext_ln251_fu_264_p1");
    sc_trace(mVcdFile, zext_ln251_1_fu_268_p1, "zext_ln251_1_fu_268_p1");
    sc_trace(mVcdFile, zext_ln259_fu_300_p1, "zext_ln259_fu_300_p1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, y_V_2_fu_219_p4, "y_V_2_fu_219_p4");
    sc_trace(mVcdFile, y_V_3_fu_234_p4, "y_V_3_fu_234_p4");
    sc_trace(mVcdFile, y_V_4_fu_249_p4, "y_V_4_fu_249_p4");
    sc_trace(mVcdFile, add_ln703_1_fu_272_p2, "add_ln703_1_fu_272_p2");
    sc_trace(mVcdFile, add_ln703_fu_281_p2, "add_ln703_fu_281_p2");
    sc_trace(mVcdFile, exp_sum_V_fu_285_p2, "exp_sum_V_fu_285_p2");
    sc_trace(mVcdFile, grp_fu_372_p0, "grp_fu_372_p0");
    sc_trace(mVcdFile, grp_fu_378_p0, "grp_fu_378_p0");
    sc_trace(mVcdFile, grp_fu_384_p0, "grp_fu_384_p0");
    sc_trace(mVcdFile, grp_fu_390_p0, "grp_fu_390_p0");
    sc_trace(mVcdFile, grp_fu_396_p0, "grp_fu_396_p0");
    sc_trace(mVcdFile, grp_fu_372_ce, "grp_fu_372_ce");
    sc_trace(mVcdFile, grp_fu_378_ce, "grp_fu_378_ce");
    sc_trace(mVcdFile, grp_fu_384_ce, "grp_fu_384_ce");
    sc_trace(mVcdFile, grp_fu_390_ce, "grp_fu_390_ce");
    sc_trace(mVcdFile, grp_fu_396_ce, "grp_fu_396_ce");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to8, "ap_idle_pp0_0to8");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

softmax_latency::~softmax_latency() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete exp_table1_U;
    delete invert_table2_U;
    delete myproject_axi_mulocq_U569;
    delete myproject_axi_mulocq_U570;
    delete myproject_axi_mulocq_U571;
    delete myproject_axi_mulocq_U572;
    delete myproject_axi_mulocq_U573;
}

void softmax_latency::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
                    esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter6 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter6 = ap_enable_reg_pp0_iter5.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter7 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter7 = ap_enable_reg_pp0_iter6.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter8 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter8 = ap_enable_reg_pp0_iter7.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter9 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter9 = ap_enable_reg_pp0_iter8.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        add_ln703_2_reg_467 = add_ln703_2_fu_276_p2.read();
        exp_res_0_V_reg_455_pp0_iter3_reg = exp_res_0_V_reg_455.read();
        exp_res_0_V_reg_455_pp0_iter4_reg = exp_res_0_V_reg_455_pp0_iter3_reg.read();
        exp_res_0_V_reg_455_pp0_iter5_reg = exp_res_0_V_reg_455_pp0_iter4_reg.read();
        exp_res_1_V_reg_461_pp0_iter3_reg = exp_res_1_V_reg_461.read();
        exp_res_1_V_reg_461_pp0_iter4_reg = exp_res_1_V_reg_461_pp0_iter3_reg.read();
        exp_res_1_V_reg_461_pp0_iter5_reg = exp_res_1_V_reg_461_pp0_iter4_reg.read();
        exp_res_2_V_reg_437_pp0_iter2_reg = exp_res_2_V_reg_437.read();
        exp_res_2_V_reg_437_pp0_iter3_reg = exp_res_2_V_reg_437_pp0_iter2_reg.read();
        exp_res_2_V_reg_437_pp0_iter4_reg = exp_res_2_V_reg_437_pp0_iter3_reg.read();
        exp_res_2_V_reg_437_pp0_iter5_reg = exp_res_2_V_reg_437_pp0_iter4_reg.read();
        exp_res_3_V_reg_443_pp0_iter2_reg = exp_res_3_V_reg_443.read();
        exp_res_3_V_reg_443_pp0_iter3_reg = exp_res_3_V_reg_443_pp0_iter2_reg.read();
        exp_res_3_V_reg_443_pp0_iter4_reg = exp_res_3_V_reg_443_pp0_iter3_reg.read();
        exp_res_3_V_reg_443_pp0_iter5_reg = exp_res_3_V_reg_443_pp0_iter4_reg.read();
        exp_res_4_V_reg_449_pp0_iter2_reg = exp_res_4_V_reg_449.read();
        exp_res_4_V_reg_449_pp0_iter3_reg = exp_res_4_V_reg_449_pp0_iter2_reg.read();
        exp_res_4_V_reg_449_pp0_iter4_reg = exp_res_4_V_reg_449_pp0_iter3_reg.read();
        exp_res_4_V_reg_449_pp0_iter5_reg = exp_res_4_V_reg_449_pp0_iter4_reg.read();
        inv_exp_sum_V_reg_482 = invert_table2_q0.read();
        mul_ln1118_1_reg_526 = grp_fu_378_p2.read();
        mul_ln1118_2_reg_531 = grp_fu_384_p2.read();
        mul_ln1118_3_reg_536 = grp_fu_390_p2.read();
        mul_ln1118_4_reg_541 = grp_fu_396_p2.read();
        mul_ln1118_reg_521 = grp_fu_372_p2.read();
        y_V_5_reg_472 = exp_sum_V_fu_285_p2.read().range(17, 8);
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter2.read()))) {
        exp_res_0_V_reg_455 = exp_table1_q3.read();
        exp_res_1_V_reg_461 = exp_table1_q4.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        exp_res_2_V_reg_437 = exp_table1_q0.read();
        exp_res_3_V_reg_443 = exp_table1_q1.read();
        exp_res_4_V_reg_449 = exp_table1_q2.read();
    }
}

void softmax_latency::thread_add_ln703_1_fu_272_p2() {
    add_ln703_1_fu_272_p2 = (!exp_res_2_V_reg_437.read().is_01() || !exp_res_4_V_reg_449.read().is_01())? sc_lv<18>(): (sc_bigint<18>(exp_res_2_V_reg_437.read()) + sc_bigint<18>(exp_res_4_V_reg_449.read()));
}

void softmax_latency::thread_add_ln703_2_fu_276_p2() {
    add_ln703_2_fu_276_p2 = (!add_ln703_1_fu_272_p2.read().is_01() || !exp_res_3_V_reg_443.read().is_01())? sc_lv<18>(): (sc_biguint<18>(add_ln703_1_fu_272_p2.read()) + sc_bigint<18>(exp_res_3_V_reg_443.read()));
}

void softmax_latency::thread_add_ln703_fu_281_p2() {
    add_ln703_fu_281_p2 = (!exp_res_0_V_reg_455.read().is_01() || !exp_res_1_V_reg_461.read().is_01())? sc_lv<18>(): (sc_bigint<18>(exp_res_0_V_reg_455.read()) + sc_bigint<18>(exp_res_1_V_reg_461.read()));
}

void softmax_latency::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void softmax_latency::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))));
}

void softmax_latency::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))));
}

void softmax_latency::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
  (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || 
   esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1))));
}

void softmax_latency::thread_ap_block_state10_pp0_stage0_iter9() {
    ap_block_state10_pp0_stage0_iter9 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void softmax_latency::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency::thread_ap_block_state3_pp0_stage0_iter2() {
    ap_block_state3_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency::thread_ap_block_state4_pp0_stage0_iter3() {
    ap_block_state4_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency::thread_ap_block_state5_pp0_stage0_iter4() {
    ap_block_state5_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency::thread_ap_block_state6_pp0_stage0_iter5() {
    ap_block_state6_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency::thread_ap_block_state7_pp0_stage0_iter6() {
    ap_block_state7_pp0_stage0_iter6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency::thread_ap_block_state8_pp0_stage0_iter7() {
    ap_block_state8_pp0_stage0_iter7 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency::thread_ap_block_state9_pp0_stage0_iter8() {
    ap_block_state9_pp0_stage0_iter8 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void softmax_latency::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void softmax_latency::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void softmax_latency::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void softmax_latency::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void softmax_latency::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter9.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void softmax_latency::thread_ap_idle_pp0_0to8() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter6.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter7.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter8.read()))) {
        ap_idle_pp0_0to8 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to8 = ap_const_logic_0;
    }
}

void softmax_latency::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void softmax_latency::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to8.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void softmax_latency::thread_exp_sum_V_fu_285_p2() {
    exp_sum_V_fu_285_p2 = (!add_ln703_2_reg_467.read().is_01() || !add_ln703_fu_281_p2.read().is_01())? sc_lv<18>(): (sc_biguint<18>(add_ln703_2_reg_467.read()) + sc_biguint<18>(add_ln703_fu_281_p2.read()));
}

void softmax_latency::thread_exp_table1_address0() {
    exp_table1_address0 =  (sc_lv<10>) (zext_ln251_2_fu_229_p1.read());
}

void softmax_latency::thread_exp_table1_address1() {
    exp_table1_address1 =  (sc_lv<10>) (zext_ln251_3_fu_244_p1.read());
}

void softmax_latency::thread_exp_table1_address2() {
    exp_table1_address2 =  (sc_lv<10>) (zext_ln251_4_fu_259_p1.read());
}

void softmax_latency::thread_exp_table1_address3() {
    exp_table1_address3 =  (sc_lv<10>) (zext_ln251_fu_264_p1.read());
}

void softmax_latency::thread_exp_table1_address4() {
    exp_table1_address4 =  (sc_lv<10>) (zext_ln251_1_fu_268_p1.read());
}

void softmax_latency::thread_exp_table1_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exp_table1_ce0 = ap_const_logic_1;
    } else {
        exp_table1_ce0 = ap_const_logic_0;
    }
}

void softmax_latency::thread_exp_table1_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exp_table1_ce1 = ap_const_logic_1;
    } else {
        exp_table1_ce1 = ap_const_logic_0;
    }
}

void softmax_latency::thread_exp_table1_ce2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        exp_table1_ce2 = ap_const_logic_1;
    } else {
        exp_table1_ce2 = ap_const_logic_0;
    }
}

void softmax_latency::thread_exp_table1_ce3() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        exp_table1_ce3 = ap_const_logic_1;
    } else {
        exp_table1_ce3 = ap_const_logic_0;
    }
}

void softmax_latency::thread_exp_table1_ce4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()))) {
        exp_table1_ce4 = ap_const_logic_1;
    } else {
        exp_table1_ce4 = ap_const_logic_0;
    }
}

void softmax_latency::thread_grp_fu_372_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_372_ce = ap_const_logic_1;
    } else {
        grp_fu_372_ce = ap_const_logic_0;
    }
}

void softmax_latency::thread_grp_fu_372_p0() {
    grp_fu_372_p0 =  (sc_lv<18>) (sext_ln1116_fu_304_p1.read());
}

void softmax_latency::thread_grp_fu_378_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_378_ce = ap_const_logic_1;
    } else {
        grp_fu_378_ce = ap_const_logic_0;
    }
}

void softmax_latency::thread_grp_fu_378_p0() {
    grp_fu_378_p0 =  (sc_lv<18>) (sext_ln1116_fu_304_p1.read());
}

void softmax_latency::thread_grp_fu_384_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_384_ce = ap_const_logic_1;
    } else {
        grp_fu_384_ce = ap_const_logic_0;
    }
}

void softmax_latency::thread_grp_fu_384_p0() {
    grp_fu_384_p0 =  (sc_lv<18>) (sext_ln1116_fu_304_p1.read());
}

void softmax_latency::thread_grp_fu_390_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_390_ce = ap_const_logic_1;
    } else {
        grp_fu_390_ce = ap_const_logic_0;
    }
}

void softmax_latency::thread_grp_fu_390_p0() {
    grp_fu_390_p0 =  (sc_lv<18>) (sext_ln1116_fu_304_p1.read());
}

void softmax_latency::thread_grp_fu_396_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        grp_fu_396_ce = ap_const_logic_1;
    } else {
        grp_fu_396_ce = ap_const_logic_0;
    }
}

void softmax_latency::thread_grp_fu_396_p0() {
    grp_fu_396_p0 =  (sc_lv<18>) (sext_ln1116_fu_304_p1.read());
}

void softmax_latency::thread_invert_table2_address0() {
    invert_table2_address0 =  (sc_lv<10>) (zext_ln259_fu_300_p1.read());
}

void softmax_latency::thread_invert_table2_ce0() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter4.read()))) {
        invert_table2_ce0 = ap_const_logic_1;
    } else {
        invert_table2_ce0 = ap_const_logic_0;
    }
}

void softmax_latency::thread_res_0_V() {
    res_0_V = mul_ln1118_reg_521.read().range(29, 14);
}

void softmax_latency::thread_res_0_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        res_0_V_ap_vld = ap_const_logic_1;
    } else {
        res_0_V_ap_vld = ap_const_logic_0;
    }
}

void softmax_latency::thread_res_1_V() {
    res_1_V = mul_ln1118_1_reg_526.read().range(29, 14);
}

void softmax_latency::thread_res_1_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        res_1_V_ap_vld = ap_const_logic_1;
    } else {
        res_1_V_ap_vld = ap_const_logic_0;
    }
}

void softmax_latency::thread_res_2_V() {
    res_2_V = mul_ln1118_2_reg_531.read().range(29, 14);
}

void softmax_latency::thread_res_2_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        res_2_V_ap_vld = ap_const_logic_1;
    } else {
        res_2_V_ap_vld = ap_const_logic_0;
    }
}

void softmax_latency::thread_res_3_V() {
    res_3_V = mul_ln1118_3_reg_536.read().range(29, 14);
}

void softmax_latency::thread_res_3_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        res_3_V_ap_vld = ap_const_logic_1;
    } else {
        res_3_V_ap_vld = ap_const_logic_0;
    }
}

void softmax_latency::thread_res_4_V() {
    res_4_V = mul_ln1118_4_reg_541.read().range(29, 14);
}

void softmax_latency::thread_res_4_V_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter9.read()))) {
        res_4_V_ap_vld = ap_const_logic_1;
    } else {
        res_4_V_ap_vld = ap_const_logic_0;
    }
}

void softmax_latency::thread_sext_ln1116_fu_304_p1() {
    sext_ln1116_fu_304_p1 = esl_sext<30,18>(inv_exp_sum_V_reg_482.read());
}

void softmax_latency::thread_y_V_1_fu_209_p4() {
    y_V_1_fu_209_p4 = data_1_V.read().range(15, 6);
}

void softmax_latency::thread_y_V_2_fu_219_p4() {
    y_V_2_fu_219_p4 = data_2_V.read().range(15, 6);
}

void softmax_latency::thread_y_V_3_fu_234_p4() {
    y_V_3_fu_234_p4 = data_3_V.read().range(15, 6);
}

void softmax_latency::thread_y_V_4_fu_249_p4() {
    y_V_4_fu_249_p4 = data_4_V.read().range(15, 6);
}

void softmax_latency::thread_y_V_fu_199_p4() {
    y_V_fu_199_p4 = data_0_V.read().range(15, 6);
}

void softmax_latency::thread_zext_ln251_1_fu_268_p1() {
    zext_ln251_1_fu_268_p1 = esl_zext<64,10>(y_V_1_fu_209_p4.read());
}

void softmax_latency::thread_zext_ln251_2_fu_229_p1() {
    zext_ln251_2_fu_229_p1 = esl_zext<64,10>(y_V_2_fu_219_p4.read());
}

void softmax_latency::thread_zext_ln251_3_fu_244_p1() {
    zext_ln251_3_fu_244_p1 = esl_zext<64,10>(y_V_3_fu_234_p4.read());
}

void softmax_latency::thread_zext_ln251_4_fu_259_p1() {
    zext_ln251_4_fu_259_p1 = esl_zext<64,10>(y_V_4_fu_249_p4.read());
}

void softmax_latency::thread_zext_ln251_fu_264_p1() {
    zext_ln251_fu_264_p1 = esl_zext<64,10>(y_V_fu_199_p4.read());
}

void softmax_latency::thread_zext_ln259_fu_300_p1() {
    zext_ln259_fu_300_p1 = esl_zext<64,10>(y_V_5_reg_472.read());
}

void softmax_latency::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

